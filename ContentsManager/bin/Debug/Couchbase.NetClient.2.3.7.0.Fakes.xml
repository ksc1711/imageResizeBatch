<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Couchbase.NetClient.2.3.7.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:Couchbase.Annotations.Fakes.ShimAspMvcActionAttribute">
            <summary>Couchbase.Annotations.AspMvcActionAttribute의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcActionAttribute.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcActionAttribute.#ctor(Couchbase.Annotations.AspMvcActionAttribute)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcActionAttribute.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcActionAttribute.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcActionAttribute.AnonymousPropertyGet">
            <summary>AspMvcActionAttribute.get_AnonymousProperty()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcActionAttribute.AnonymousPropertySetString">
            <summary>AspMvcActionAttribute.set_AnonymousProperty(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcActionAttribute.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcActionAttribute.Constructor">
            <summary>AspMvcActionAttribute.AspMvcActionAttribute()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcActionAttribute.ConstructorString">
            <summary>AspMvcActionAttribute.AspMvcActionAttribute(String anonymousProperty)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimAspMvcActionAttribute.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcActionAttribute.AllInstances.AnonymousPropertyGet">
            <summary>AspMvcActionAttribute.get_AnonymousProperty()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcActionAttribute.AllInstances.AnonymousPropertySetString">
            <summary>AspMvcActionAttribute.set_AnonymousProperty(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimAspMvcActionSelectorAttribute">
            <summary>Couchbase.Annotations.AspMvcActionSelectorAttribute의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcActionSelectorAttribute.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcActionSelectorAttribute.#ctor(Couchbase.Annotations.AspMvcActionSelectorAttribute)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcActionSelectorAttribute.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcActionSelectorAttribute.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcActionSelectorAttribute.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcActionSelectorAttribute.Constructor">
            <summary>AspMvcActionSelectorAttribute.AspMvcActionSelectorAttribute()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimAspMvcActionSelectorAttribute.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimAspMvcAreaAttribute">
            <summary>Couchbase.Annotations.AspMvcAreaAttribute의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcAreaAttribute.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcAreaAttribute.#ctor(Couchbase.Annotations.AspMvcAreaAttribute)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcAreaAttribute.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcAreaAttribute.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcAreaAttribute.AnonymousPropertyGet">
            <summary>AspMvcAreaAttribute.get_AnonymousProperty()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcAreaAttribute.AnonymousPropertySetString">
            <summary>AspMvcAreaAttribute.set_AnonymousProperty(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcAreaAttribute.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcAreaAttribute.Constructor">
            <summary>AspMvcAreaAttribute.AspMvcAreaAttribute()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcAreaAttribute.ConstructorString">
            <summary>AspMvcAreaAttribute.AspMvcAreaAttribute(String anonymousProperty)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimAspMvcAreaAttribute.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcAreaAttribute.AllInstances.AnonymousPropertyGet">
            <summary>AspMvcAreaAttribute.get_AnonymousProperty()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcAreaAttribute.AllInstances.AnonymousPropertySetString">
            <summary>AspMvcAreaAttribute.set_AnonymousProperty(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimAspMvcAreaMasterLocationFormatAttribute">
            <summary>Couchbase.Annotations.AspMvcAreaMasterLocationFormatAttribute의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcAreaMasterLocationFormatAttribute.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcAreaMasterLocationFormatAttribute.#ctor(Couchbase.Annotations.AspMvcAreaMasterLocationFormatAttribute)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcAreaMasterLocationFormatAttribute.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcAreaMasterLocationFormatAttribute.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcAreaMasterLocationFormatAttribute.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcAreaMasterLocationFormatAttribute.ConstructorString">
            <summary>AspMvcAreaMasterLocationFormatAttribute.AspMvcAreaMasterLocationFormatAttribute(String format)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimAspMvcAreaMasterLocationFormatAttribute.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimAspMvcAreaPartialViewLocationFormatAttribute">
            <summary>Couchbase.Annotations.AspMvcAreaPartialViewLocationFormatAttribute의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcAreaPartialViewLocationFormatAttribute.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcAreaPartialViewLocationFormatAttribute.#ctor(Couchbase.Annotations.AspMvcAreaPartialViewLocationFormatAttribute)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcAreaPartialViewLocationFormatAttribute.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcAreaPartialViewLocationFormatAttribute.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcAreaPartialViewLocationFormatAttribute.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcAreaPartialViewLocationFormatAttribute.ConstructorString">
            <summary>AspMvcAreaPartialViewLocationFormatAttribute.AspMvcAreaPartialViewLocationFormatAttribute(String format)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimAspMvcAreaPartialViewLocationFormatAttribute.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimAspMvcAreaViewLocationFormatAttribute">
            <summary>Couchbase.Annotations.AspMvcAreaViewLocationFormatAttribute의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcAreaViewLocationFormatAttribute.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcAreaViewLocationFormatAttribute.#ctor(Couchbase.Annotations.AspMvcAreaViewLocationFormatAttribute)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcAreaViewLocationFormatAttribute.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcAreaViewLocationFormatAttribute.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcAreaViewLocationFormatAttribute.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcAreaViewLocationFormatAttribute.ConstructorString">
            <summary>AspMvcAreaViewLocationFormatAttribute.AspMvcAreaViewLocationFormatAttribute(String format)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimAspMvcAreaViewLocationFormatAttribute.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimAspMvcControllerAttribute">
            <summary>Couchbase.Annotations.AspMvcControllerAttribute의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcControllerAttribute.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcControllerAttribute.#ctor(Couchbase.Annotations.AspMvcControllerAttribute)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcControllerAttribute.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcControllerAttribute.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcControllerAttribute.AnonymousPropertyGet">
            <summary>AspMvcControllerAttribute.get_AnonymousProperty()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcControllerAttribute.AnonymousPropertySetString">
            <summary>AspMvcControllerAttribute.set_AnonymousProperty(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcControllerAttribute.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcControllerAttribute.Constructor">
            <summary>AspMvcControllerAttribute.AspMvcControllerAttribute()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcControllerAttribute.ConstructorString">
            <summary>AspMvcControllerAttribute.AspMvcControllerAttribute(String anonymousProperty)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimAspMvcControllerAttribute.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcControllerAttribute.AllInstances.AnonymousPropertyGet">
            <summary>AspMvcControllerAttribute.get_AnonymousProperty()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcControllerAttribute.AllInstances.AnonymousPropertySetString">
            <summary>AspMvcControllerAttribute.set_AnonymousProperty(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimAspMvcDisplayTemplateAttribute">
            <summary>Couchbase.Annotations.AspMvcDisplayTemplateAttribute의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcDisplayTemplateAttribute.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcDisplayTemplateAttribute.#ctor(Couchbase.Annotations.AspMvcDisplayTemplateAttribute)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcDisplayTemplateAttribute.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcDisplayTemplateAttribute.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcDisplayTemplateAttribute.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcDisplayTemplateAttribute.Constructor">
            <summary>AspMvcDisplayTemplateAttribute.AspMvcDisplayTemplateAttribute()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimAspMvcDisplayTemplateAttribute.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimAspMvcEditorTemplateAttribute">
            <summary>Couchbase.Annotations.AspMvcEditorTemplateAttribute의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcEditorTemplateAttribute.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcEditorTemplateAttribute.#ctor(Couchbase.Annotations.AspMvcEditorTemplateAttribute)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcEditorTemplateAttribute.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcEditorTemplateAttribute.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcEditorTemplateAttribute.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcEditorTemplateAttribute.Constructor">
            <summary>AspMvcEditorTemplateAttribute.AspMvcEditorTemplateAttribute()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimAspMvcEditorTemplateAttribute.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimAspMvcMasterAttribute">
            <summary>Couchbase.Annotations.AspMvcMasterAttribute의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcMasterAttribute.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcMasterAttribute.#ctor(Couchbase.Annotations.AspMvcMasterAttribute)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcMasterAttribute.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcMasterAttribute.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcMasterAttribute.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcMasterAttribute.Constructor">
            <summary>AspMvcMasterAttribute.AspMvcMasterAttribute()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimAspMvcMasterAttribute.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimAspMvcMasterLocationFormatAttribute">
            <summary>Couchbase.Annotations.AspMvcMasterLocationFormatAttribute의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcMasterLocationFormatAttribute.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcMasterLocationFormatAttribute.#ctor(Couchbase.Annotations.AspMvcMasterLocationFormatAttribute)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcMasterLocationFormatAttribute.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcMasterLocationFormatAttribute.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcMasterLocationFormatAttribute.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcMasterLocationFormatAttribute.ConstructorString">
            <summary>AspMvcMasterLocationFormatAttribute.AspMvcMasterLocationFormatAttribute(String format)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimAspMvcMasterLocationFormatAttribute.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimAspMvcModelTypeAttribute">
            <summary>Couchbase.Annotations.AspMvcModelTypeAttribute의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcModelTypeAttribute.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcModelTypeAttribute.#ctor(Couchbase.Annotations.AspMvcModelTypeAttribute)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcModelTypeAttribute.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcModelTypeAttribute.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcModelTypeAttribute.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcModelTypeAttribute.Constructor">
            <summary>AspMvcModelTypeAttribute.AspMvcModelTypeAttribute()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimAspMvcModelTypeAttribute.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimAspMvcPartialViewAttribute">
            <summary>Couchbase.Annotations.AspMvcPartialViewAttribute의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcPartialViewAttribute.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcPartialViewAttribute.#ctor(Couchbase.Annotations.AspMvcPartialViewAttribute)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcPartialViewAttribute.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcPartialViewAttribute.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcPartialViewAttribute.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcPartialViewAttribute.Constructor">
            <summary>AspMvcPartialViewAttribute.AspMvcPartialViewAttribute()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimAspMvcPartialViewAttribute.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimAspMvcPartialViewLocationFormatAttribute">
            <summary>Couchbase.Annotations.AspMvcPartialViewLocationFormatAttribute의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcPartialViewLocationFormatAttribute.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcPartialViewLocationFormatAttribute.#ctor(Couchbase.Annotations.AspMvcPartialViewLocationFormatAttribute)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcPartialViewLocationFormatAttribute.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcPartialViewLocationFormatAttribute.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcPartialViewLocationFormatAttribute.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcPartialViewLocationFormatAttribute.ConstructorString">
            <summary>AspMvcPartialViewLocationFormatAttribute.AspMvcPartialViewLocationFormatAttribute(String format)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimAspMvcPartialViewLocationFormatAttribute.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimAspMvcSupressViewErrorAttribute">
            <summary>Couchbase.Annotations.AspMvcSupressViewErrorAttribute의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcSupressViewErrorAttribute.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcSupressViewErrorAttribute.#ctor(Couchbase.Annotations.AspMvcSupressViewErrorAttribute)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcSupressViewErrorAttribute.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcSupressViewErrorAttribute.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcSupressViewErrorAttribute.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcSupressViewErrorAttribute.Constructor">
            <summary>AspMvcSupressViewErrorAttribute.AspMvcSupressViewErrorAttribute()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimAspMvcSupressViewErrorAttribute.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimAspMvcTemplateAttribute">
            <summary>Couchbase.Annotations.AspMvcTemplateAttribute의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcTemplateAttribute.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcTemplateAttribute.#ctor(Couchbase.Annotations.AspMvcTemplateAttribute)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcTemplateAttribute.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcTemplateAttribute.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcTemplateAttribute.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcTemplateAttribute.Constructor">
            <summary>AspMvcTemplateAttribute.AspMvcTemplateAttribute()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimAspMvcTemplateAttribute.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimAspMvcViewAttribute">
            <summary>Couchbase.Annotations.AspMvcViewAttribute의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcViewAttribute.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcViewAttribute.#ctor(Couchbase.Annotations.AspMvcViewAttribute)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcViewAttribute.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcViewAttribute.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcViewAttribute.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcViewAttribute.Constructor">
            <summary>AspMvcViewAttribute.AspMvcViewAttribute()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimAspMvcViewAttribute.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimAspMvcViewLocationFormatAttribute">
            <summary>Couchbase.Annotations.AspMvcViewLocationFormatAttribute의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcViewLocationFormatAttribute.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcViewLocationFormatAttribute.#ctor(Couchbase.Annotations.AspMvcViewLocationFormatAttribute)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcViewLocationFormatAttribute.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimAspMvcViewLocationFormatAttribute.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcViewLocationFormatAttribute.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimAspMvcViewLocationFormatAttribute.ConstructorString">
            <summary>AspMvcViewLocationFormatAttribute.AspMvcViewLocationFormatAttribute(String format)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimAspMvcViewLocationFormatAttribute.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimBaseTypeRequiredAttribute">
            <summary>Couchbase.Annotations.BaseTypeRequiredAttribute의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimBaseTypeRequiredAttribute.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimBaseTypeRequiredAttribute.#ctor(Couchbase.Annotations.BaseTypeRequiredAttribute)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimBaseTypeRequiredAttribute.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimBaseTypeRequiredAttribute.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimBaseTypeRequiredAttribute.BaseTypeGet">
            <summary>BaseTypeRequiredAttribute.get_BaseType()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimBaseTypeRequiredAttribute.BaseTypeSetType">
            <summary>BaseTypeRequiredAttribute.set_BaseType(Type value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimBaseTypeRequiredAttribute.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimBaseTypeRequiredAttribute.ConstructorType">
            <summary>BaseTypeRequiredAttribute.BaseTypeRequiredAttribute(Type baseType)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimBaseTypeRequiredAttribute.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimBaseTypeRequiredAttribute.AllInstances.BaseTypeGet">
            <summary>BaseTypeRequiredAttribute.get_BaseType()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimBaseTypeRequiredAttribute.AllInstances.BaseTypeSetType">
            <summary>BaseTypeRequiredAttribute.set_BaseType(Type value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimCanBeNullAttribute">
            <summary>Couchbase.Annotations.CanBeNullAttribute의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimCanBeNullAttribute.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimCanBeNullAttribute.#ctor(Couchbase.Annotations.CanBeNullAttribute)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimCanBeNullAttribute.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimCanBeNullAttribute.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimCanBeNullAttribute.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimCanBeNullAttribute.Constructor">
            <summary>CanBeNullAttribute.CanBeNullAttribute()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimCanBeNullAttribute.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimCannotApplyEqualityOperatorAttribute">
            <summary>Couchbase.Annotations.CannotApplyEqualityOperatorAttribute의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimCannotApplyEqualityOperatorAttribute.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimCannotApplyEqualityOperatorAttribute.#ctor(Couchbase.Annotations.CannotApplyEqualityOperatorAttribute)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimCannotApplyEqualityOperatorAttribute.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimCannotApplyEqualityOperatorAttribute.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimCannotApplyEqualityOperatorAttribute.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimCannotApplyEqualityOperatorAttribute.Constructor">
            <summary>CannotApplyEqualityOperatorAttribute.CannotApplyEqualityOperatorAttribute()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimCannotApplyEqualityOperatorAttribute.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimContractAnnotationAttribute">
            <summary>Couchbase.Annotations.ContractAnnotationAttribute의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimContractAnnotationAttribute.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimContractAnnotationAttribute.#ctor(Couchbase.Annotations.ContractAnnotationAttribute)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimContractAnnotationAttribute.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimContractAnnotationAttribute.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimContractAnnotationAttribute.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimContractAnnotationAttribute.ConstructorString">
            <summary>ContractAnnotationAttribute.ContractAnnotationAttribute(String contract)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimContractAnnotationAttribute.ConstructorStringBoolean">
            <summary>ContractAnnotationAttribute.ContractAnnotationAttribute(String contract, Boolean forceFullStates)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimContractAnnotationAttribute.ContractGet">
            <summary>ContractAnnotationAttribute.get_Contract()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimContractAnnotationAttribute.ContractSetString">
            <summary>ContractAnnotationAttribute.set_Contract(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimContractAnnotationAttribute.ForceFullStatesGet">
            <summary>ContractAnnotationAttribute.get_ForceFullStates()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimContractAnnotationAttribute.ForceFullStatesSetBoolean">
            <summary>ContractAnnotationAttribute.set_ForceFullStates(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimContractAnnotationAttribute.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimContractAnnotationAttribute.AllInstances.ContractGet">
            <summary>ContractAnnotationAttribute.get_Contract()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimContractAnnotationAttribute.AllInstances.ContractSetString">
            <summary>ContractAnnotationAttribute.set_Contract(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimContractAnnotationAttribute.AllInstances.ForceFullStatesGet">
            <summary>ContractAnnotationAttribute.get_ForceFullStates()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimContractAnnotationAttribute.AllInstances.ForceFullStatesSetBoolean">
            <summary>ContractAnnotationAttribute.set_ForceFullStates(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimHtmlAttributeValueAttribute">
            <summary>Couchbase.Annotations.HtmlAttributeValueAttribute의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimHtmlAttributeValueAttribute.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimHtmlAttributeValueAttribute.#ctor(Couchbase.Annotations.HtmlAttributeValueAttribute)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimHtmlAttributeValueAttribute.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimHtmlAttributeValueAttribute.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimHtmlAttributeValueAttribute.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimHtmlAttributeValueAttribute.ConstructorString">
            <summary>HtmlAttributeValueAttribute.HtmlAttributeValueAttribute(String name)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimHtmlAttributeValueAttribute.NameGet">
            <summary>HtmlAttributeValueAttribute.get_Name()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimHtmlAttributeValueAttribute.NameSetString">
            <summary>HtmlAttributeValueAttribute.set_Name(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimHtmlAttributeValueAttribute.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimHtmlAttributeValueAttribute.AllInstances.NameGet">
            <summary>HtmlAttributeValueAttribute.get_Name()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimHtmlAttributeValueAttribute.AllInstances.NameSetString">
            <summary>HtmlAttributeValueAttribute.set_Name(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimHtmlElementAttributesAttribute">
            <summary>Couchbase.Annotations.HtmlElementAttributesAttribute의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimHtmlElementAttributesAttribute.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimHtmlElementAttributesAttribute.#ctor(Couchbase.Annotations.HtmlElementAttributesAttribute)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimHtmlElementAttributesAttribute.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimHtmlElementAttributesAttribute.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimHtmlElementAttributesAttribute.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimHtmlElementAttributesAttribute.Constructor">
            <summary>HtmlElementAttributesAttribute.HtmlElementAttributesAttribute()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimHtmlElementAttributesAttribute.ConstructorString">
            <summary>HtmlElementAttributesAttribute.HtmlElementAttributesAttribute(String name)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimHtmlElementAttributesAttribute.NameGet">
            <summary>HtmlElementAttributesAttribute.get_Name()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimHtmlElementAttributesAttribute.NameSetString">
            <summary>HtmlElementAttributesAttribute.set_Name(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimHtmlElementAttributesAttribute.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimHtmlElementAttributesAttribute.AllInstances.NameGet">
            <summary>HtmlElementAttributesAttribute.get_Name()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimHtmlElementAttributesAttribute.AllInstances.NameSetString">
            <summary>HtmlElementAttributesAttribute.set_Name(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimInstantHandleAttribute">
            <summary>Couchbase.Annotations.InstantHandleAttribute의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimInstantHandleAttribute.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimInstantHandleAttribute.#ctor(Couchbase.Annotations.InstantHandleAttribute)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimInstantHandleAttribute.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimInstantHandleAttribute.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimInstantHandleAttribute.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimInstantHandleAttribute.Constructor">
            <summary>InstantHandleAttribute.InstantHandleAttribute()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimInstantHandleAttribute.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimInvokerParameterNameAttribute">
            <summary>Couchbase.Annotations.InvokerParameterNameAttribute의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimInvokerParameterNameAttribute.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimInvokerParameterNameAttribute.#ctor(Couchbase.Annotations.InvokerParameterNameAttribute)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimInvokerParameterNameAttribute.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimInvokerParameterNameAttribute.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimInvokerParameterNameAttribute.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimInvokerParameterNameAttribute.Constructor">
            <summary>InvokerParameterNameAttribute.InvokerParameterNameAttribute()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimInvokerParameterNameAttribute.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimLocalizationRequiredAttribute">
            <summary>Couchbase.Annotations.LocalizationRequiredAttribute의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimLocalizationRequiredAttribute.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimLocalizationRequiredAttribute.#ctor(Couchbase.Annotations.LocalizationRequiredAttribute)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimLocalizationRequiredAttribute.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimLocalizationRequiredAttribute.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimLocalizationRequiredAttribute.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimLocalizationRequiredAttribute.Constructor">
            <summary>LocalizationRequiredAttribute.LocalizationRequiredAttribute()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimLocalizationRequiredAttribute.ConstructorBoolean">
            <summary>LocalizationRequiredAttribute.LocalizationRequiredAttribute(Boolean required)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimLocalizationRequiredAttribute.RequiredGet">
            <summary>LocalizationRequiredAttribute.get_Required()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimLocalizationRequiredAttribute.RequiredSetBoolean">
            <summary>LocalizationRequiredAttribute.set_Required(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimLocalizationRequiredAttribute.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimLocalizationRequiredAttribute.AllInstances.RequiredGet">
            <summary>LocalizationRequiredAttribute.get_Required()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimLocalizationRequiredAttribute.AllInstances.RequiredSetBoolean">
            <summary>LocalizationRequiredAttribute.set_Required(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimMeansImplicitUseAttribute">
            <summary>Couchbase.Annotations.MeansImplicitUseAttribute의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimMeansImplicitUseAttribute.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimMeansImplicitUseAttribute.#ctor(Couchbase.Annotations.MeansImplicitUseAttribute)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimMeansImplicitUseAttribute.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimMeansImplicitUseAttribute.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimMeansImplicitUseAttribute.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimMeansImplicitUseAttribute.Constructor">
            <summary>MeansImplicitUseAttribute.MeansImplicitUseAttribute()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimMeansImplicitUseAttribute.ConstructorImplicitUseKindFlags">
            <summary>MeansImplicitUseAttribute.MeansImplicitUseAttribute(ImplicitUseKindFlags useKindFlags)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimMeansImplicitUseAttribute.ConstructorImplicitUseKindFlagsImplicitUseTargetFlags">
            <summary>MeansImplicitUseAttribute.MeansImplicitUseAttribute(ImplicitUseKindFlags useKindFlags, ImplicitUseTargetFlags targetFlags)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimMeansImplicitUseAttribute.ConstructorImplicitUseTargetFlags">
            <summary>MeansImplicitUseAttribute.MeansImplicitUseAttribute(ImplicitUseTargetFlags targetFlags)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimMeansImplicitUseAttribute.TargetFlagsGet">
            <summary>MeansImplicitUseAttribute.get_TargetFlags()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimMeansImplicitUseAttribute.TargetFlagsSetImplicitUseTargetFlags">
            <summary>MeansImplicitUseAttribute.set_TargetFlags(ImplicitUseTargetFlags value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimMeansImplicitUseAttribute.UseKindFlagsGet">
            <summary>MeansImplicitUseAttribute.get_UseKindFlags()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimMeansImplicitUseAttribute.UseKindFlagsSetImplicitUseKindFlags">
            <summary>MeansImplicitUseAttribute.set_UseKindFlags(ImplicitUseKindFlags value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimMeansImplicitUseAttribute.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimMeansImplicitUseAttribute.AllInstances.TargetFlagsGet">
            <summary>MeansImplicitUseAttribute.get_TargetFlags()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimMeansImplicitUseAttribute.AllInstances.TargetFlagsSetImplicitUseTargetFlags">
            <summary>MeansImplicitUseAttribute.set_TargetFlags(ImplicitUseTargetFlags value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimMeansImplicitUseAttribute.AllInstances.UseKindFlagsGet">
            <summary>MeansImplicitUseAttribute.get_UseKindFlags()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimMeansImplicitUseAttribute.AllInstances.UseKindFlagsSetImplicitUseKindFlags">
            <summary>MeansImplicitUseAttribute.set_UseKindFlags(ImplicitUseKindFlags value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimNotNullAttribute">
            <summary>Couchbase.Annotations.NotNullAttribute의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimNotNullAttribute.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimNotNullAttribute.#ctor(Couchbase.Annotations.NotNullAttribute)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimNotNullAttribute.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimNotNullAttribute.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimNotNullAttribute.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimNotNullAttribute.Constructor">
            <summary>NotNullAttribute.NotNullAttribute()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimNotNullAttribute.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimNotifyPropertyChangedInvocatorAttribute">
            <summary>Couchbase.Annotations.NotifyPropertyChangedInvocatorAttribute의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimNotifyPropertyChangedInvocatorAttribute.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimNotifyPropertyChangedInvocatorAttribute.#ctor(Couchbase.Annotations.NotifyPropertyChangedInvocatorAttribute)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimNotifyPropertyChangedInvocatorAttribute.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimNotifyPropertyChangedInvocatorAttribute.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimNotifyPropertyChangedInvocatorAttribute.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimNotifyPropertyChangedInvocatorAttribute.Constructor">
            <summary>NotifyPropertyChangedInvocatorAttribute.NotifyPropertyChangedInvocatorAttribute()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimNotifyPropertyChangedInvocatorAttribute.ConstructorString">
            <summary>NotifyPropertyChangedInvocatorAttribute.NotifyPropertyChangedInvocatorAttribute(String parameterName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimNotifyPropertyChangedInvocatorAttribute.ParameterNameGet">
            <summary>NotifyPropertyChangedInvocatorAttribute.get_ParameterName()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimNotifyPropertyChangedInvocatorAttribute.ParameterNameSetString">
            <summary>NotifyPropertyChangedInvocatorAttribute.set_ParameterName(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimNotifyPropertyChangedInvocatorAttribute.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimNotifyPropertyChangedInvocatorAttribute.AllInstances.ParameterNameGet">
            <summary>NotifyPropertyChangedInvocatorAttribute.get_ParameterName()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimNotifyPropertyChangedInvocatorAttribute.AllInstances.ParameterNameSetString">
            <summary>NotifyPropertyChangedInvocatorAttribute.set_ParameterName(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimPathReferenceAttribute">
            <summary>Couchbase.Annotations.PathReferenceAttribute의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimPathReferenceAttribute.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimPathReferenceAttribute.#ctor(Couchbase.Annotations.PathReferenceAttribute)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimPathReferenceAttribute.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimPathReferenceAttribute.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimPathReferenceAttribute.BasePathGet">
            <summary>PathReferenceAttribute.get_BasePath()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimPathReferenceAttribute.BasePathSetString">
            <summary>PathReferenceAttribute.set_BasePath(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimPathReferenceAttribute.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimPathReferenceAttribute.Constructor">
            <summary>PathReferenceAttribute.PathReferenceAttribute()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimPathReferenceAttribute.ConstructorString">
            <summary>PathReferenceAttribute.PathReferenceAttribute(String basePath)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimPathReferenceAttribute.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimPathReferenceAttribute.AllInstances.BasePathGet">
            <summary>PathReferenceAttribute.get_BasePath()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimPathReferenceAttribute.AllInstances.BasePathSetString">
            <summary>PathReferenceAttribute.set_BasePath(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimPublicAPIAttribute">
            <summary>Couchbase.Annotations.PublicAPIAttribute의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimPublicAPIAttribute.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimPublicAPIAttribute.#ctor(Couchbase.Annotations.PublicAPIAttribute)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimPublicAPIAttribute.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimPublicAPIAttribute.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimPublicAPIAttribute.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimPublicAPIAttribute.CommentGet">
            <summary>PublicAPIAttribute.get_Comment()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimPublicAPIAttribute.CommentSetString">
            <summary>PublicAPIAttribute.set_Comment(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimPublicAPIAttribute.Constructor">
            <summary>PublicAPIAttribute.PublicAPIAttribute()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimPublicAPIAttribute.ConstructorString">
            <summary>PublicAPIAttribute.PublicAPIAttribute(String comment)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimPublicAPIAttribute.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimPublicAPIAttribute.AllInstances.CommentGet">
            <summary>PublicAPIAttribute.get_Comment()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimPublicAPIAttribute.AllInstances.CommentSetString">
            <summary>PublicAPIAttribute.set_Comment(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimPureAttribute">
            <summary>Couchbase.Annotations.PureAttribute의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimPureAttribute.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimPureAttribute.#ctor(Couchbase.Annotations.PureAttribute)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimPureAttribute.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimPureAttribute.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimPureAttribute.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimPureAttribute.Constructor">
            <summary>PureAttribute.PureAttribute()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimPureAttribute.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimRazorSectionAttribute">
            <summary>Couchbase.Annotations.RazorSectionAttribute의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimRazorSectionAttribute.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimRazorSectionAttribute.#ctor(Couchbase.Annotations.RazorSectionAttribute)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimRazorSectionAttribute.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimRazorSectionAttribute.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimRazorSectionAttribute.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimRazorSectionAttribute.Constructor">
            <summary>RazorSectionAttribute.RazorSectionAttribute()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimRazorSectionAttribute.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimStringFormatMethodAttribute">
            <summary>Couchbase.Annotations.StringFormatMethodAttribute의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimStringFormatMethodAttribute.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimStringFormatMethodAttribute.#ctor(Couchbase.Annotations.StringFormatMethodAttribute)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimStringFormatMethodAttribute.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimStringFormatMethodAttribute.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimStringFormatMethodAttribute.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimStringFormatMethodAttribute.ConstructorString">
            <summary>StringFormatMethodAttribute.StringFormatMethodAttribute(String formatParameterName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimStringFormatMethodAttribute.FormatParameterNameGet">
            <summary>StringFormatMethodAttribute.get_FormatParameterName()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimStringFormatMethodAttribute.FormatParameterNameSetString">
            <summary>StringFormatMethodAttribute.set_FormatParameterName(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimStringFormatMethodAttribute.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimStringFormatMethodAttribute.AllInstances.FormatParameterNameGet">
            <summary>StringFormatMethodAttribute.get_FormatParameterName()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimStringFormatMethodAttribute.AllInstances.FormatParameterNameSetString">
            <summary>StringFormatMethodAttribute.set_FormatParameterName(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimUsedImplicitlyAttribute">
            <summary>Couchbase.Annotations.UsedImplicitlyAttribute의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimUsedImplicitlyAttribute.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimUsedImplicitlyAttribute.#ctor(Couchbase.Annotations.UsedImplicitlyAttribute)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimUsedImplicitlyAttribute.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.ShimUsedImplicitlyAttribute.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimUsedImplicitlyAttribute.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimUsedImplicitlyAttribute.Constructor">
            <summary>UsedImplicitlyAttribute.UsedImplicitlyAttribute()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimUsedImplicitlyAttribute.ConstructorImplicitUseKindFlags">
            <summary>UsedImplicitlyAttribute.UsedImplicitlyAttribute(ImplicitUseKindFlags useKindFlags)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimUsedImplicitlyAttribute.ConstructorImplicitUseKindFlagsImplicitUseTargetFlags">
            <summary>UsedImplicitlyAttribute.UsedImplicitlyAttribute(ImplicitUseKindFlags useKindFlags, ImplicitUseTargetFlags targetFlags)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimUsedImplicitlyAttribute.ConstructorImplicitUseTargetFlags">
            <summary>UsedImplicitlyAttribute.UsedImplicitlyAttribute(ImplicitUseTargetFlags targetFlags)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimUsedImplicitlyAttribute.TargetFlagsGet">
            <summary>UsedImplicitlyAttribute.get_TargetFlags()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimUsedImplicitlyAttribute.TargetFlagsSetImplicitUseTargetFlags">
            <summary>UsedImplicitlyAttribute.set_TargetFlags(ImplicitUseTargetFlags value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimUsedImplicitlyAttribute.UseKindFlagsGet">
            <summary>UsedImplicitlyAttribute.get_UseKindFlags()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimUsedImplicitlyAttribute.UseKindFlagsSetImplicitUseKindFlags">
            <summary>UsedImplicitlyAttribute.set_UseKindFlags(ImplicitUseKindFlags value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.ShimUsedImplicitlyAttribute.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimUsedImplicitlyAttribute.AllInstances.TargetFlagsGet">
            <summary>UsedImplicitlyAttribute.get_TargetFlags()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimUsedImplicitlyAttribute.AllInstances.TargetFlagsSetImplicitUseTargetFlags">
            <summary>UsedImplicitlyAttribute.set_TargetFlags(ImplicitUseTargetFlags value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimUsedImplicitlyAttribute.AllInstances.UseKindFlagsGet">
            <summary>UsedImplicitlyAttribute.get_UseKindFlags()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.ShimUsedImplicitlyAttribute.AllInstances.UseKindFlagsSetImplicitUseKindFlags">
            <summary>UsedImplicitlyAttribute.set_UseKindFlags(ImplicitUseKindFlags value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Annotations.Fakes.StubPathReferenceAttribute">
            <summary>Couchbase.Annotations.PathReferenceAttribute의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.StubPathReferenceAttribute.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.StubPathReferenceAttribute.#ctor(System.String)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.StubPathReferenceAttribute.Equals(System.Object)">
            <summary>Attribute.Equals(Object obj)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Annotations.Fakes.StubPathReferenceAttribute.EqualsObject">
            <summary>Attribute.Equals(Object obj)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.StubPathReferenceAttribute.GetHashCode">
            <summary>Attribute.GetHashCode()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Annotations.Fakes.StubPathReferenceAttribute.GetHashCode01">
            <summary>Attribute.GetHashCode()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.StubPathReferenceAttribute.InitializeStub">
            <summary>type StubPathReferenceAttribute의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.StubPathReferenceAttribute.IsDefaultAttribute">
            <summary>Attribute.IsDefaultAttribute()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Annotations.Fakes.StubPathReferenceAttribute.IsDefaultAttribute01">
            <summary>Attribute.IsDefaultAttribute()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Annotations.Fakes.StubPathReferenceAttribute.Match(System.Object)">
            <summary>Attribute.Match(Object obj)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Annotations.Fakes.StubPathReferenceAttribute.MatchObject">
            <summary>Attribute.Match(Object obj)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Annotations.Fakes.StubPathReferenceAttribute.TypeIdGet">
            <summary>Attribute.get_TypeId()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.StubPathReferenceAttribute.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.StubPathReferenceAttribute.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.StubPathReferenceAttribute.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Annotations.Fakes.StubPathReferenceAttribute.TypeId">
            <summary>Attribute.get_TypeId()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Authentication.SASL.Fakes.ShimPBKDF2`1">
            <summary>Couchbase.Authentication.SASL.PBKDF2`1의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Authentication.SASL.Fakes.ShimPBKDF2`1.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Authentication.SASL.Fakes.ShimPBKDF2`1.#ctor(Couchbase.Authentication.SASL.PBKDF2{`0})">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Authentication.SASL.Fakes.ShimPBKDF2`1.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Authentication.SASL.Fakes.ShimPBKDF2`1.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Authentication.SASL.Fakes.ShimPBKDF2`1.Bind(System.IDisposable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Authentication.SASL.Fakes.ShimPBKDF2`1.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Authentication.SASL.Fakes.ShimPBKDF2`1.ConstructorByteArrayByteArrayInt32">
            <summary>PBKDF2`1.PBKDF2`1(Byte[] Password, Byte[] Salt, Int32 IterationCount)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Authentication.SASL.Fakes.ShimPBKDF2`1.ConstructorByteArrayInt32Int32">
            <summary>PBKDF2`1.PBKDF2`1(Byte[] Password, Int32 SizeOfSaltInBytes, Int32 IterationCount)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Authentication.SASL.Fakes.ShimPBKDF2`1.ConstructorStringByteArrayInt32">
            <summary>PBKDF2`1.PBKDF2`1(String Password, Byte[] Salt, Int32 IterationCount)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Authentication.SASL.Fakes.ShimPBKDF2`1.ConstructorStringInt32Int32">
            <summary>PBKDF2`1.PBKDF2`1(String Password, Int32 SizeOfSaltInBytes, Int32 IterationCount)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Authentication.SASL.Fakes.ShimPBKDF2`1.GetBytesInt32">
            <summary>PBKDF2`1.GetBytes(Int32 ByteCount)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Authentication.SASL.Fakes.ShimPBKDF2`1.InitializeByteArrayByteArrayInt32">
            <summary>PBKDF2`1.Initialize(Byte[] Password, Byte[] Salt, Int32 IterationCount)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Authentication.SASL.Fakes.ShimPBKDF2`1.InitializeByteArrayInt32Int32">
            <summary>PBKDF2`1.Initialize(Byte[] Password, Int32 SizeOfSaltInBytes, Int32 IterationCount)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Authentication.SASL.Fakes.ShimPBKDF2`1.InitializeStringByteArrayInt32">
            <summary>PBKDF2`1.Initialize(String Password, Byte[] Salt, Int32 IterationCount)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Authentication.SASL.Fakes.ShimPBKDF2`1.InitializeStringInt32Int32">
            <summary>PBKDF2`1.Initialize(String Password, Int32 SizeOfSaltInBytes, Int32 IterationCount)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Authentication.SASL.Fakes.ShimPBKDF2`1.IntToBytesUInt32">
            <summary>PBKDF2`1.IntToBytes(UInt32 i)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Authentication.SASL.Fakes.ShimPBKDF2`1.Reset">
            <summary>PBKDF2`1.Reset()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Authentication.SASL.Fakes.ShimPBKDF2`1.SaltGet">
            <summary>PBKDF2`1.get_Salt()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Authentication.SASL.Fakes.ShimPBKDF2`1._FUInt32">
            <summary>PBKDF2`1._F(UInt32 I)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Authentication.SASL.Fakes.ShimPBKDF2`1.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Authentication.SASL.Fakes.ShimPBKDF2`1.AllInstances.GetBytesInt32">
            <summary>PBKDF2`1.GetBytes(Int32 ByteCount)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Authentication.SASL.Fakes.ShimPBKDF2`1.AllInstances.InitializeByteArrayByteArrayInt32">
            <summary>PBKDF2`1.Initialize(Byte[] Password, Byte[] Salt, Int32 IterationCount)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Authentication.SASL.Fakes.ShimPBKDF2`1.AllInstances.InitializeByteArrayInt32Int32">
            <summary>PBKDF2`1.Initialize(Byte[] Password, Int32 SizeOfSaltInBytes, Int32 IterationCount)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Authentication.SASL.Fakes.ShimPBKDF2`1.AllInstances.InitializeStringByteArrayInt32">
            <summary>PBKDF2`1.Initialize(String Password, Byte[] Salt, Int32 IterationCount)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Authentication.SASL.Fakes.ShimPBKDF2`1.AllInstances.InitializeStringInt32Int32">
            <summary>PBKDF2`1.Initialize(String Password, Int32 SizeOfSaltInBytes, Int32 IterationCount)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Authentication.SASL.Fakes.ShimPBKDF2`1.AllInstances.Reset">
            <summary>PBKDF2`1.Reset()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Authentication.SASL.Fakes.ShimPBKDF2`1.AllInstances.SaltGet">
            <summary>PBKDF2`1.get_Salt()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Authentication.SASL.Fakes.ShimPBKDF2`1.AllInstances._FUInt32">
            <summary>PBKDF2`1._F(UInt32 I)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Authentication.SASL.Fakes.ShimPBKDF2`1.AllInstances._XorByteArrayRefByteArray">
            <summary>PBKDF2`1._Xor(Byte[]&amp; data, Byte[] newData)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Authentication.SASL.Fakes.StubISaslMechanism">
            <summary>Couchbase.Authentication.SASL.ISaslMechanism의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Authentication.SASL.Fakes.StubISaslMechanism.#ctor">
            <summary>type StubISaslMechanism의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.Authentication.SASL.Fakes.StubISaslMechanism.AuthenticateIConnection">
            <summary>ISaslMechanism.Authenticate(IConnection connection)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Authentication.SASL.Fakes.StubISaslMechanism.AuthenticateIConnectionStringString">
            <summary>ISaslMechanism.Authenticate(IConnection connection, String username, String password)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Authentication.SASL.Fakes.StubISaslMechanism.cnc::Couchbase#Authentication#SASL#ISaslMechanism#Authenticate(Couchbase.IO.IConnection)">
            <summary>ISaslMechanism.Authenticate(IConnection connection)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Authentication.SASL.Fakes.StubISaslMechanism.cnc::Couchbase#Authentication#SASL#ISaslMechanism#Authenticate(Couchbase.IO.IConnection,System.String,System.String)">
            <summary>ISaslMechanism.Authenticate(IConnection connection, String username, String password)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Authentication.SASL.Fakes.StubISaslMechanism.IOServiceSetIIOService">
            <summary>ISaslMechanism.set_IOService(IIOService value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Authentication.SASL.Fakes.StubISaslMechanism.MechanismTypeGet">
            <summary>ISaslMechanism.get_MechanismType()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Authentication.SASL.Fakes.StubISaslMechanism.PasswordGet">
            <summary>ISaslMechanism.get_Password()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Authentication.SASL.Fakes.StubISaslMechanism.UsernameGet">
            <summary>ISaslMechanism.get_Username()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Authentication.SASL.Fakes.StubISaslMechanism.cnc::Couchbase#Authentication#SASL#ISaslMechanism#IOService">
            <summary>ISaslMechanism.set_IOService(IIOService value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Authentication.SASL.Fakes.StubISaslMechanism.cnc::Couchbase#Authentication#SASL#ISaslMechanism#MechanismType">
            <summary>ISaslMechanism.get_MechanismType()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Authentication.SASL.Fakes.StubISaslMechanism.cnc::Couchbase#Authentication#SASL#ISaslMechanism#Password">
            <summary>ISaslMechanism.get_Password()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Authentication.SASL.Fakes.StubISaslMechanism.cnc::Couchbase#Authentication#SASL#ISaslMechanism#Username">
            <summary>ISaslMechanism.get_Username()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Authentication.SASL.Fakes.StubPBKDF2`1">
            <summary>Couchbase.Authentication.SASL.PBKDF2`1의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Authentication.SASL.Fakes.StubPBKDF2`1.#ctor(System.String,System.Int32,System.Int32)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Authentication.SASL.Fakes.StubPBKDF2`1.#ctor(System.Byte[],System.Byte[],System.Int32)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Authentication.SASL.Fakes.StubPBKDF2`1.#ctor(System.Byte[],System.Int32,System.Int32)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Authentication.SASL.Fakes.StubPBKDF2`1.#ctor(System.String,System.Byte[],System.Int32)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Authentication.SASL.Fakes.StubPBKDF2`1.Dispose(System.Boolean)">
            <summary>DeriveBytes.Dispose(Boolean disposing)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Authentication.SASL.Fakes.StubPBKDF2`1.DisposeBoolean">
            <summary>DeriveBytes.Dispose(Boolean disposing)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Authentication.SASL.Fakes.StubPBKDF2`1.GetBytes(System.Int32)">
            <summary>PBKDF2`1.GetBytes(Int32 ByteCount)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Authentication.SASL.Fakes.StubPBKDF2`1.GetBytesInt32">
            <summary>PBKDF2`1.GetBytes(Int32 ByteCount)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Authentication.SASL.Fakes.StubPBKDF2`1.InitializeStub">
            <summary>type StubPBKDF2의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Authentication.SASL.Fakes.StubPBKDF2`1.Reset">
            <summary>PBKDF2`1.Reset()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Authentication.SASL.Fakes.StubPBKDF2`1.Reset01">
            <summary>PBKDF2`1.Reset()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Authentication.SASL.Fakes.StubPBKDF2`1.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Authentication.SASL.Fakes.StubPBKDF2`1.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Authentication.SASL.Fakes.StubPBKDF2`1.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration">
            <summary>Couchbase.Configuration.Client.BucketConfiguration의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.#ctor(Couchbase.Configuration.Client.BucketConfiguration)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.BucketNameGet">
            <summary>BucketConfiguration.get_BucketName()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.BucketNameSetString">
            <summary>BucketConfiguration.set_BucketName(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.ClonePoolConfigurationUri">
            <summary>BucketConfiguration.ClonePoolConfiguration(Uri server)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.Constructor">
            <summary>BucketConfiguration.BucketConfiguration()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.DefaultOperationLifespanGet">
            <summary>BucketConfiguration.get_DefaultOperationLifespan()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.DefaultOperationLifespanSetUInt32">
            <summary>BucketConfiguration.set_DefaultOperationLifespan(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.GetEndPoint">
            <summary>BucketConfiguration.GetEndPoint()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.GetEndPoints">
            <summary>BucketConfiguration.GetEndPoints()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.ObserveIntervalGet">
            <summary>BucketConfiguration.get_ObserveInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.ObserveIntervalSetInt32">
            <summary>BucketConfiguration.set_ObserveInterval(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.ObserveTimeoutGet">
            <summary>BucketConfiguration.get_ObserveTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.ObserveTimeoutSetInt32">
            <summary>BucketConfiguration.set_ObserveTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.PasswordGet">
            <summary>BucketConfiguration.get_Password()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.PasswordSetString">
            <summary>BucketConfiguration.set_Password(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.PoolConfigurationGet">
            <summary>BucketConfiguration.get_PoolConfiguration()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.PoolConfigurationSetPoolConfiguration">
            <summary>BucketConfiguration.set_PoolConfiguration(PoolConfiguration value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.PortGet">
            <summary>BucketConfiguration.get_Port()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.PortSetInt32">
            <summary>BucketConfiguration.set_Port(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.ServersGet">
            <summary>BucketConfiguration.get_Servers()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.ServersSetListOfUri">
            <summary>BucketConfiguration.set_Servers(List`1&lt;Uri&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.UpdateOperationLifespanDefaultUInt32">
            <summary>BucketConfiguration.UpdateOperationLifespanDefault(UInt32 newDefault)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.UseEnhancedDurabilityGet">
            <summary>BucketConfiguration.get_UseEnhancedDurability()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.UseEnhancedDurabilitySetBoolean">
            <summary>BucketConfiguration.set_UseEnhancedDurability(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.UseSslGet">
            <summary>BucketConfiguration.get_UseSsl()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.UseSslSetBoolean">
            <summary>BucketConfiguration.set_UseSsl(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.UsernameGet">
            <summary>BucketConfiguration.get_Username()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.UsernameSetString">
            <summary>BucketConfiguration.set_Username(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.AllInstances.BucketNameGet">
            <summary>BucketConfiguration.get_BucketName()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.AllInstances.BucketNameSetString">
            <summary>BucketConfiguration.set_BucketName(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.AllInstances.ClonePoolConfigurationUri">
            <summary>BucketConfiguration.ClonePoolConfiguration(Uri server)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.AllInstances.DefaultOperationLifespanGet">
            <summary>BucketConfiguration.get_DefaultOperationLifespan()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.AllInstances.DefaultOperationLifespanSetUInt32">
            <summary>BucketConfiguration.set_DefaultOperationLifespan(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.AllInstances.GetEndPoint">
            <summary>BucketConfiguration.GetEndPoint()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.AllInstances.GetEndPoints">
            <summary>BucketConfiguration.GetEndPoints()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.AllInstances.ObserveIntervalGet">
            <summary>BucketConfiguration.get_ObserveInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.AllInstances.ObserveIntervalSetInt32">
            <summary>BucketConfiguration.set_ObserveInterval(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.AllInstances.ObserveTimeoutGet">
            <summary>BucketConfiguration.get_ObserveTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.AllInstances.ObserveTimeoutSetInt32">
            <summary>BucketConfiguration.set_ObserveTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.AllInstances.PasswordGet">
            <summary>BucketConfiguration.get_Password()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.AllInstances.PasswordSetString">
            <summary>BucketConfiguration.set_Password(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.AllInstances.PoolConfigurationGet">
            <summary>BucketConfiguration.get_PoolConfiguration()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.AllInstances.PoolConfigurationSetPoolConfiguration">
            <summary>BucketConfiguration.set_PoolConfiguration(PoolConfiguration value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.AllInstances.PortGet">
            <summary>BucketConfiguration.get_Port()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.AllInstances.PortSetInt32">
            <summary>BucketConfiguration.set_Port(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.AllInstances.ServersGet">
            <summary>BucketConfiguration.get_Servers()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.AllInstances.ServersSetListOfUri">
            <summary>BucketConfiguration.set_Servers(List`1&lt;Uri&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.AllInstances.UpdateOperationLifespanDefaultUInt32">
            <summary>BucketConfiguration.UpdateOperationLifespanDefault(UInt32 newDefault)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.AllInstances.UseEnhancedDurabilityGet">
            <summary>BucketConfiguration.get_UseEnhancedDurability()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.AllInstances.UseEnhancedDurabilitySetBoolean">
            <summary>BucketConfiguration.set_UseEnhancedDurability(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.AllInstances.UseSslGet">
            <summary>BucketConfiguration.get_UseSsl()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.AllInstances.UseSslSetBoolean">
            <summary>BucketConfiguration.set_UseSsl(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.AllInstances.UsernameGet">
            <summary>BucketConfiguration.get_Username()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.AllInstances.UsernameSetString">
            <summary>BucketConfiguration.set_Username(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.ShimDefaults">
            <summary>Couchbase.Configuration.Client.BucketConfiguration+Defaults의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.ShimDefaults.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.ShimDefaults.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.ShimDefaults.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketConfiguration.ShimDefaults.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Client.Fakes.ShimBucketDefinition">
            <summary>Couchbase.Configuration.Client.BucketDefinition의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.ShimBucketDefinition.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.ShimBucketDefinition.#ctor(Couchbase.Configuration.Client.BucketDefinition)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.ShimBucketDefinition.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.ShimBucketDefinition.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.ShimBucketDefinition.Bind(Couchbase.Configuration.Client.IBucketDefinition)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketDefinition.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketDefinition.ConnectionPoolCouchbaseConfigurationClientIBucketDefinitionget">
            <summary>BucketDefinition.Couchbase.Configuration.Client.IBucketDefinition.get_ConnectionPool()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketDefinition.ConnectionPoolGet">
            <summary>BucketDefinition.get_ConnectionPool()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketDefinition.ConnectionPoolSetConnectionPoolDefinition">
            <summary>BucketDefinition.set_ConnectionPool(ConnectionPoolDefinition value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketDefinition.Constructor">
            <summary>BucketDefinition.BucketDefinition()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketDefinition.NameGet">
            <summary>BucketDefinition.get_Name()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketDefinition.NameSetString">
            <summary>BucketDefinition.set_Name(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketDefinition.ObserveIntervalGet">
            <summary>BucketDefinition.get_ObserveInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketDefinition.ObserveIntervalSetInt32">
            <summary>BucketDefinition.set_ObserveInterval(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketDefinition.ObserveTimeoutGet">
            <summary>BucketDefinition.get_ObserveTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketDefinition.ObserveTimeoutSetInt32">
            <summary>BucketDefinition.set_ObserveTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketDefinition.OperationLifespanGet">
            <summary>BucketDefinition.get_OperationLifespan()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketDefinition.OperationLifespanSetNullableOfUInt32">
            <summary>BucketDefinition.set_OperationLifespan(Nullable`1&lt;UInt32&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketDefinition.PasswordGet">
            <summary>BucketDefinition.get_Password()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketDefinition.PasswordSetString">
            <summary>BucketDefinition.set_Password(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketDefinition.UseEnhancedDurabilityGet">
            <summary>BucketDefinition.get_UseEnhancedDurability()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketDefinition.UseEnhancedDurabilitySetBoolean">
            <summary>BucketDefinition.set_UseEnhancedDurability(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketDefinition.UseSslGet">
            <summary>BucketDefinition.get_UseSsl()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketDefinition.UseSslSetBoolean">
            <summary>BucketDefinition.set_UseSsl(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Client.Fakes.ShimBucketDefinition.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketDefinition.AllInstances.ConnectionPoolCouchbaseConfigurationClientIBucketDefinitionget">
            <summary>BucketDefinition.Couchbase.Configuration.Client.IBucketDefinition.get_ConnectionPool()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketDefinition.AllInstances.ConnectionPoolGet">
            <summary>BucketDefinition.get_ConnectionPool()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketDefinition.AllInstances.ConnectionPoolSetConnectionPoolDefinition">
            <summary>BucketDefinition.set_ConnectionPool(ConnectionPoolDefinition value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketDefinition.AllInstances.NameGet">
            <summary>BucketDefinition.get_Name()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketDefinition.AllInstances.NameSetString">
            <summary>BucketDefinition.set_Name(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketDefinition.AllInstances.ObserveIntervalGet">
            <summary>BucketDefinition.get_ObserveInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketDefinition.AllInstances.ObserveIntervalSetInt32">
            <summary>BucketDefinition.set_ObserveInterval(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketDefinition.AllInstances.ObserveTimeoutGet">
            <summary>BucketDefinition.get_ObserveTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketDefinition.AllInstances.ObserveTimeoutSetInt32">
            <summary>BucketDefinition.set_ObserveTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketDefinition.AllInstances.OperationLifespanGet">
            <summary>BucketDefinition.get_OperationLifespan()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketDefinition.AllInstances.OperationLifespanSetNullableOfUInt32">
            <summary>BucketDefinition.set_OperationLifespan(Nullable`1&lt;UInt32&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketDefinition.AllInstances.PasswordGet">
            <summary>BucketDefinition.get_Password()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketDefinition.AllInstances.PasswordSetString">
            <summary>BucketDefinition.set_Password(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketDefinition.AllInstances.UseEnhancedDurabilityGet">
            <summary>BucketDefinition.get_UseEnhancedDurability()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketDefinition.AllInstances.UseEnhancedDurabilitySetBoolean">
            <summary>BucketDefinition.set_UseEnhancedDurability(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketDefinition.AllInstances.UseSslGet">
            <summary>BucketDefinition.get_UseSsl()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimBucketDefinition.AllInstances.UseSslSetBoolean">
            <summary>BucketDefinition.set_UseSsl(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration">
            <summary>Couchbase.Configuration.Client.ClientConfiguration의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.#ctor(Couchbase.Configuration.Client.ClientConfiguration)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.ApiPortGet">
            <summary>ClientConfiguration.get_ApiPort()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.ApiPortSetInt32">
            <summary>ClientConfiguration.set_ApiPort(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.BucketConfigsGet">
            <summary>ClientConfiguration.get_BucketConfigs()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.BucketConfigsSetDictionaryOfStringBucketConfiguration">
            <summary>ClientConfiguration.set_BucketConfigs(Dictionary`2&lt;String,BucketConfiguration&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.BufferSizeGet">
            <summary>ClientConfiguration.get_BufferSize()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.BufferSizeSetInt32">
            <summary>ClientConfiguration.set_BufferSize(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.ConnectionPoolCreatorGet">
            <summary>ClientConfiguration.get_ConnectionPoolCreator()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.ConnectionPoolCreatorSetFuncOfPoolConfigurationIPEndPointIConnectionPool">
            <summary>ClientConfiguration.set_ConnectionPoolCreator(Func`3&lt;PoolConfiguration,IPEndPoint,IConnectionPool&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.Constructor">
            <summary>ClientConfiguration.ClientConfiguration()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.ConstructorCouchbaseClientSection">
            <summary>ClientConfiguration.ClientConfiguration(CouchbaseClientSection section)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.ConstructorICouchbaseClientDefinition">
            <summary>ClientConfiguration.ClientConfiguration(ICouchbaseClientDefinition definition)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.ConverterGet">
            <summary>ClientConfiguration.get_Converter()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.ConverterSetFuncOfIByteConverter">
            <summary>ClientConfiguration.set_Converter(Func`1&lt;IByteConverter&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.CreateSaslMechanismGet">
            <summary>ClientConfiguration.get_CreateSaslMechanism()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.CreateSaslMechanismSetFuncOfStringStringIIOServiceITypeTranscoderISaslMechanism">
            <summary>ClientConfiguration.set_CreateSaslMechanism(Func`5&lt;String,String,IIOService,ITypeTranscoder,ISaslMechanism&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.DefaultConnectionLimitGet">
            <summary>ClientConfiguration.get_DefaultConnectionLimit()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.DefaultConnectionLimitSetInt32">
            <summary>ClientConfiguration.set_DefaultConnectionLimit(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.DefaultOperationLifespanGet">
            <summary>ClientConfiguration.get_DefaultOperationLifespan()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.DefaultOperationLifespanSetUInt32">
            <summary>ClientConfiguration.set_DefaultOperationLifespan(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.DeserializationSettingsGet">
            <summary>ClientConfiguration.get_DeserializationSettings()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.DeserializationSettingsSetJsonSerializerSettings">
            <summary>ClientConfiguration.set_DeserializationSettings(JsonSerializerSettings value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.DirectPortGet">
            <summary>ClientConfiguration.get_DirectPort()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.DirectPortSetInt32">
            <summary>ClientConfiguration.set_DirectPort(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.EnableConfigHeartBeatGet">
            <summary>ClientConfiguration.get_EnableConfigHeartBeat()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.EnableConfigHeartBeatSetBoolean">
            <summary>ClientConfiguration.set_EnableConfigHeartBeat(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.EnableOperationTimingGet">
            <summary>ClientConfiguration.get_EnableOperationTiming()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.EnableOperationTimingSetBoolean">
            <summary>ClientConfiguration.set_EnableOperationTiming(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.EnableQueryTimingGet">
            <summary>ClientConfiguration.get_EnableQueryTiming()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.EnableQueryTimingSetBoolean">
            <summary>ClientConfiguration.set_EnableQueryTiming(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.EnableTcpKeepAlivesGet">
            <summary>ClientConfiguration.get_EnableTcpKeepAlives()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.EnableTcpKeepAlivesSetBoolean">
            <summary>ClientConfiguration.set_EnableTcpKeepAlives(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.Expect100ContinueGet">
            <summary>ClientConfiguration.get_Expect100Continue()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.Expect100ContinueSetBoolean">
            <summary>ClientConfiguration.set_Expect100Continue(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.HasServersChanged">
            <summary>ClientConfiguration.HasServersChanged()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.HeartbeatConfigIntervalGet">
            <summary>ClientConfiguration.get_HeartbeatConfigInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.HeartbeatConfigIntervalSetDouble">
            <summary>ClientConfiguration.set_HeartbeatConfigInterval(Double value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.HttpsApiPortGet">
            <summary>ClientConfiguration.get_HttpsApiPort()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.HttpsApiPortSetInt32">
            <summary>ClientConfiguration.set_HttpsApiPort(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.HttpsMgmtPortGet">
            <summary>ClientConfiguration.get_HttpsMgmtPort()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.HttpsMgmtPortSetInt32">
            <summary>ClientConfiguration.set_HttpsMgmtPort(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.IOErrorCheckIntervalGet">
            <summary>ClientConfiguration.get_IOErrorCheckInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.IOErrorCheckIntervalSetUInt32">
            <summary>ClientConfiguration.set_IOErrorCheckInterval(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.IOErrorThresholdGet">
            <summary>ClientConfiguration.get_IOErrorThreshold()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.IOErrorThresholdSetUInt32">
            <summary>ClientConfiguration.set_IOErrorThreshold(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.IOServiceCreatorGet">
            <summary>ClientConfiguration.get_IOServiceCreator()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.IOServiceCreatorSetFuncOfIConnectionPoolIIOService">
            <summary>ClientConfiguration.set_IOServiceCreator(Func`2&lt;IConnectionPool,IIOService&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.IgnoreRemoteCertificateNameMismatchGet">
            <summary>ClientConfiguration.get_IgnoreRemoteCertificateNameMismatch()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.IgnoreRemoteCertificateNameMismatchSetBoolean">
            <summary>ClientConfiguration.set_IgnoreRemoteCertificateNameMismatch(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.Initialize">
            <summary>ClientConfiguration.Initialize()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.MaxServicePointIdleTimeGet">
            <summary>ClientConfiguration.get_MaxServicePointIdleTime()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.MaxServicePointIdleTimeSetInt32">
            <summary>ClientConfiguration.set_MaxServicePointIdleTime(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.MaxViewRetriesGet">
            <summary>ClientConfiguration.get_MaxViewRetries()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.MaxViewRetriesSetInt32">
            <summary>ClientConfiguration.set_MaxViewRetries(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.MgmtPortGet">
            <summary>ClientConfiguration.get_MgmtPort()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.MgmtPortSetInt32">
            <summary>ClientConfiguration.set_MgmtPort(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.NodeAvailableCheckIntervalGet">
            <summary>ClientConfiguration.get_NodeAvailableCheckInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.NodeAvailableCheckIntervalSetUInt32">
            <summary>ClientConfiguration.set_NodeAvailableCheckInterval(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.ObserveIntervalGet">
            <summary>ClientConfiguration.get_ObserveInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.ObserveIntervalSetInt32">
            <summary>ClientConfiguration.set_ObserveInterval(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.ObserveTimeoutGet">
            <summary>ClientConfiguration.get_ObserveTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.ObserveTimeoutSetInt32">
            <summary>ClientConfiguration.set_ObserveTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.PoolConfigurationGet">
            <summary>ClientConfiguration.get_PoolConfiguration()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.PoolConfigurationSetPoolConfiguration">
            <summary>ClientConfiguration.set_PoolConfiguration(PoolConfiguration value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.QueryFailedThresholdGet">
            <summary>ClientConfiguration.get_QueryFailedThreshold()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.QueryFailedThresholdSetInt32">
            <summary>ClientConfiguration.set_QueryFailedThreshold(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.QueryRequestTimeoutGet">
            <summary>ClientConfiguration.get_QueryRequestTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.QueryRequestTimeoutSetUInt32">
            <summary>ClientConfiguration.set_QueryRequestTimeout(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.SearchRequestTimeoutGet">
            <summary>ClientConfiguration.get_SearchRequestTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.SearchRequestTimeoutSetUInt32">
            <summary>ClientConfiguration.set_SearchRequestTimeout(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.SerializationSettingsGet">
            <summary>ClientConfiguration.get_SerializationSettings()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.SerializationSettingsSetJsonSerializerSettings">
            <summary>ClientConfiguration.set_SerializationSettings(JsonSerializerSettings value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.SerializerGet">
            <summary>ClientConfiguration.get_Serializer()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.SerializerSetFuncOfITypeSerializer">
            <summary>ClientConfiguration.set_Serializer(Func`1&lt;ITypeSerializer&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.ServersGet">
            <summary>ClientConfiguration.get_Servers()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.ServersSetListOfUri">
            <summary>ClientConfiguration.set_Servers(List`1&lt;Uri&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.SslPortGet">
            <summary>ClientConfiguration.get_SslPort()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.SslPortSetInt32">
            <summary>ClientConfiguration.set_SslPort(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.StaticConstructor">
            <summary>ClientConfiguration.ClientConfiguration()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.TcpKeepAliveIntervalGet">
            <summary>ClientConfiguration.get_TcpKeepAliveInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.TcpKeepAliveIntervalSetUInt32">
            <summary>ClientConfiguration.set_TcpKeepAliveInterval(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.TcpKeepAliveTimeGet">
            <summary>ClientConfiguration.get_TcpKeepAliveTime()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.TcpKeepAliveTimeSetUInt32">
            <summary>ClientConfiguration.set_TcpKeepAliveTime(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.TimerGet">
            <summary>ClientConfiguration.get_Timer()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.TimerSetFuncOfTimingLevelObjectIOperationTimer">
            <summary>ClientConfiguration.set_Timer(Func`3&lt;TimingLevel,Object,IOperationTimer&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.TranscoderGet">
            <summary>ClientConfiguration.get_Transcoder()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.TranscoderSetFuncOfITypeTranscoder">
            <summary>ClientConfiguration.set_Transcoder(Func`1&lt;ITypeTranscoder&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.TransporterGet">
            <summary>ClientConfiguration.get_Transporter()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.TransporterSetFuncOfIIOService">
            <summary>ClientConfiguration.set_Transporter(Func`1&lt;IIOService&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.UpdateBootstrapListIBucketConfig">
            <summary>ClientConfiguration.UpdateBootstrapList(IBucketConfig bucketConfig)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.UseInterNetworkV6AddressesGet">
            <summary>ClientConfiguration.get_UseInterNetworkV6Addresses()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.UseInterNetworkV6AddressesSetBoolean">
            <summary>ClientConfiguration.set_UseInterNetworkV6Addresses(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.UseSslGet">
            <summary>ClientConfiguration.get_UseSsl()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.UseSslSetBoolean">
            <summary>ClientConfiguration.set_UseSsl(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.VBucketRetrySleepTimeGet">
            <summary>ClientConfiguration.get_VBucketRetrySleepTime()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.VBucketRetrySleepTimeSetUInt32">
            <summary>ClientConfiguration.set_VBucketRetrySleepTime(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.ViewHardTimeoutGet">
            <summary>ClientConfiguration.get_ViewHardTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.ViewHardTimeoutSetInt32">
            <summary>ClientConfiguration.set_ViewHardTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.ViewRequestTimeoutGet">
            <summary>ClientConfiguration.get_ViewRequestTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.ViewRequestTimeoutSetInt32">
            <summary>ClientConfiguration.set_ViewRequestTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.ApiPortGet">
            <summary>ClientConfiguration.get_ApiPort()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.ApiPortSetInt32">
            <summary>ClientConfiguration.set_ApiPort(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.BucketConfigsGet">
            <summary>ClientConfiguration.get_BucketConfigs()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.BucketConfigsSetDictionaryOfStringBucketConfiguration">
            <summary>ClientConfiguration.set_BucketConfigs(Dictionary`2&lt;String,BucketConfiguration&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.BufferSizeGet">
            <summary>ClientConfiguration.get_BufferSize()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.BufferSizeSetInt32">
            <summary>ClientConfiguration.set_BufferSize(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.ConnectionPoolCreatorGet">
            <summary>ClientConfiguration.get_ConnectionPoolCreator()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.ConnectionPoolCreatorSetFuncOfPoolConfigurationIPEndPointIConnectionPool">
            <summary>ClientConfiguration.set_ConnectionPoolCreator(Func`3&lt;PoolConfiguration,IPEndPoint,IConnectionPool&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.ConverterGet">
            <summary>ClientConfiguration.get_Converter()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.ConverterSetFuncOfIByteConverter">
            <summary>ClientConfiguration.set_Converter(Func`1&lt;IByteConverter&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.CreateSaslMechanismGet">
            <summary>ClientConfiguration.get_CreateSaslMechanism()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.CreateSaslMechanismSetFuncOfStringStringIIOServiceITypeTranscoderISaslMechanism">
            <summary>ClientConfiguration.set_CreateSaslMechanism(Func`5&lt;String,String,IIOService,ITypeTranscoder,ISaslMechanism&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.DefaultConnectionLimitGet">
            <summary>ClientConfiguration.get_DefaultConnectionLimit()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.DefaultConnectionLimitSetInt32">
            <summary>ClientConfiguration.set_DefaultConnectionLimit(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.DefaultOperationLifespanGet">
            <summary>ClientConfiguration.get_DefaultOperationLifespan()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.DefaultOperationLifespanSetUInt32">
            <summary>ClientConfiguration.set_DefaultOperationLifespan(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.DeserializationSettingsGet">
            <summary>ClientConfiguration.get_DeserializationSettings()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.DeserializationSettingsSetJsonSerializerSettings">
            <summary>ClientConfiguration.set_DeserializationSettings(JsonSerializerSettings value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.DirectPortGet">
            <summary>ClientConfiguration.get_DirectPort()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.DirectPortSetInt32">
            <summary>ClientConfiguration.set_DirectPort(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.EnableConfigHeartBeatGet">
            <summary>ClientConfiguration.get_EnableConfigHeartBeat()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.EnableConfigHeartBeatSetBoolean">
            <summary>ClientConfiguration.set_EnableConfigHeartBeat(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.EnableOperationTimingGet">
            <summary>ClientConfiguration.get_EnableOperationTiming()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.EnableOperationTimingSetBoolean">
            <summary>ClientConfiguration.set_EnableOperationTiming(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.EnableQueryTimingGet">
            <summary>ClientConfiguration.get_EnableQueryTiming()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.EnableQueryTimingSetBoolean">
            <summary>ClientConfiguration.set_EnableQueryTiming(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.EnableTcpKeepAlivesGet">
            <summary>ClientConfiguration.get_EnableTcpKeepAlives()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.EnableTcpKeepAlivesSetBoolean">
            <summary>ClientConfiguration.set_EnableTcpKeepAlives(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.Expect100ContinueGet">
            <summary>ClientConfiguration.get_Expect100Continue()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.Expect100ContinueSetBoolean">
            <summary>ClientConfiguration.set_Expect100Continue(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.HasServersChanged">
            <summary>ClientConfiguration.HasServersChanged()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.HeartbeatConfigIntervalGet">
            <summary>ClientConfiguration.get_HeartbeatConfigInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.HeartbeatConfigIntervalSetDouble">
            <summary>ClientConfiguration.set_HeartbeatConfigInterval(Double value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.HttpsApiPortGet">
            <summary>ClientConfiguration.get_HttpsApiPort()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.HttpsApiPortSetInt32">
            <summary>ClientConfiguration.set_HttpsApiPort(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.HttpsMgmtPortGet">
            <summary>ClientConfiguration.get_HttpsMgmtPort()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.HttpsMgmtPortSetInt32">
            <summary>ClientConfiguration.set_HttpsMgmtPort(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.IOErrorCheckIntervalGet">
            <summary>ClientConfiguration.get_IOErrorCheckInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.IOErrorCheckIntervalSetUInt32">
            <summary>ClientConfiguration.set_IOErrorCheckInterval(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.IOErrorThresholdGet">
            <summary>ClientConfiguration.get_IOErrorThreshold()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.IOErrorThresholdSetUInt32">
            <summary>ClientConfiguration.set_IOErrorThreshold(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.IOServiceCreatorGet">
            <summary>ClientConfiguration.get_IOServiceCreator()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.IOServiceCreatorSetFuncOfIConnectionPoolIIOService">
            <summary>ClientConfiguration.set_IOServiceCreator(Func`2&lt;IConnectionPool,IIOService&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.Initialize">
            <summary>ClientConfiguration.Initialize()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.MaxServicePointIdleTimeGet">
            <summary>ClientConfiguration.get_MaxServicePointIdleTime()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.MaxServicePointIdleTimeSetInt32">
            <summary>ClientConfiguration.set_MaxServicePointIdleTime(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.MaxViewRetriesGet">
            <summary>ClientConfiguration.get_MaxViewRetries()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.MaxViewRetriesSetInt32">
            <summary>ClientConfiguration.set_MaxViewRetries(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.MgmtPortGet">
            <summary>ClientConfiguration.get_MgmtPort()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.MgmtPortSetInt32">
            <summary>ClientConfiguration.set_MgmtPort(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.NodeAvailableCheckIntervalGet">
            <summary>ClientConfiguration.get_NodeAvailableCheckInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.NodeAvailableCheckIntervalSetUInt32">
            <summary>ClientConfiguration.set_NodeAvailableCheckInterval(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.ObserveIntervalGet">
            <summary>ClientConfiguration.get_ObserveInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.ObserveIntervalSetInt32">
            <summary>ClientConfiguration.set_ObserveInterval(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.ObserveTimeoutGet">
            <summary>ClientConfiguration.get_ObserveTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.ObserveTimeoutSetInt32">
            <summary>ClientConfiguration.set_ObserveTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.PoolConfigurationGet">
            <summary>ClientConfiguration.get_PoolConfiguration()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.PoolConfigurationSetPoolConfiguration">
            <summary>ClientConfiguration.set_PoolConfiguration(PoolConfiguration value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.QueryFailedThresholdGet">
            <summary>ClientConfiguration.get_QueryFailedThreshold()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.QueryFailedThresholdSetInt32">
            <summary>ClientConfiguration.set_QueryFailedThreshold(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.QueryRequestTimeoutGet">
            <summary>ClientConfiguration.get_QueryRequestTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.QueryRequestTimeoutSetUInt32">
            <summary>ClientConfiguration.set_QueryRequestTimeout(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.SearchRequestTimeoutGet">
            <summary>ClientConfiguration.get_SearchRequestTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.SearchRequestTimeoutSetUInt32">
            <summary>ClientConfiguration.set_SearchRequestTimeout(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.SerializationSettingsGet">
            <summary>ClientConfiguration.get_SerializationSettings()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.SerializationSettingsSetJsonSerializerSettings">
            <summary>ClientConfiguration.set_SerializationSettings(JsonSerializerSettings value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.SerializerGet">
            <summary>ClientConfiguration.get_Serializer()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.SerializerSetFuncOfITypeSerializer">
            <summary>ClientConfiguration.set_Serializer(Func`1&lt;ITypeSerializer&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.ServersGet">
            <summary>ClientConfiguration.get_Servers()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.ServersSetListOfUri">
            <summary>ClientConfiguration.set_Servers(List`1&lt;Uri&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.SslPortGet">
            <summary>ClientConfiguration.get_SslPort()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.SslPortSetInt32">
            <summary>ClientConfiguration.set_SslPort(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.TcpKeepAliveIntervalGet">
            <summary>ClientConfiguration.get_TcpKeepAliveInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.TcpKeepAliveIntervalSetUInt32">
            <summary>ClientConfiguration.set_TcpKeepAliveInterval(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.TcpKeepAliveTimeGet">
            <summary>ClientConfiguration.get_TcpKeepAliveTime()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.TcpKeepAliveTimeSetUInt32">
            <summary>ClientConfiguration.set_TcpKeepAliveTime(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.TimerGet">
            <summary>ClientConfiguration.get_Timer()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.TimerSetFuncOfTimingLevelObjectIOperationTimer">
            <summary>ClientConfiguration.set_Timer(Func`3&lt;TimingLevel,Object,IOperationTimer&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.TranscoderGet">
            <summary>ClientConfiguration.get_Transcoder()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.TranscoderSetFuncOfITypeTranscoder">
            <summary>ClientConfiguration.set_Transcoder(Func`1&lt;ITypeTranscoder&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.TransporterGet">
            <summary>ClientConfiguration.get_Transporter()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.TransporterSetFuncOfIIOService">
            <summary>ClientConfiguration.set_Transporter(Func`1&lt;IIOService&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.UpdateBootstrapListIBucketConfig">
            <summary>ClientConfiguration.UpdateBootstrapList(IBucketConfig bucketConfig)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.UseSslGet">
            <summary>ClientConfiguration.get_UseSsl()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.UseSslSetBoolean">
            <summary>ClientConfiguration.set_UseSsl(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.VBucketRetrySleepTimeGet">
            <summary>ClientConfiguration.get_VBucketRetrySleepTime()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.VBucketRetrySleepTimeSetUInt32">
            <summary>ClientConfiguration.set_VBucketRetrySleepTime(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.ViewHardTimeoutGet">
            <summary>ClientConfiguration.get_ViewHardTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.ViewHardTimeoutSetInt32">
            <summary>ClientConfiguration.set_ViewHardTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.ViewRequestTimeoutGet">
            <summary>ClientConfiguration.get_ViewRequestTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.AllInstances.ViewRequestTimeoutSetInt32">
            <summary>ClientConfiguration.set_ViewRequestTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.ShimDefaults">
            <summary>Couchbase.Configuration.Client.ClientConfiguration+Defaults의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.ShimDefaults.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.ShimDefaults.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.ShimDefaults.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.ShimDefaults.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimClientConfiguration.ShimDefaults.StaticConstructor">
            <summary>Defaults.Defaults()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition">
            <summary>Couchbase.Configuration.Client.ConnectionPoolDefinition의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.#ctor(Couchbase.Configuration.Client.ConnectionPoolDefinition)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.Bind(Couchbase.Configuration.Client.IConnectionPoolDefinition)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.BufferSizeGet">
            <summary>ConnectionPoolDefinition.get_BufferSize()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.BufferSizeSetInt32">
            <summary>ConnectionPoolDefinition.set_BufferSize(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.CloseAttemptIntervalGet">
            <summary>ConnectionPoolDefinition.get_CloseAttemptInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.CloseAttemptIntervalSetUInt32">
            <summary>ConnectionPoolDefinition.set_CloseAttemptInterval(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.ConnectTimeoutGet">
            <summary>ConnectionPoolDefinition.get_ConnectTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.ConnectTimeoutSetInt32">
            <summary>ConnectionPoolDefinition.set_ConnectTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.Constructor">
            <summary>ConnectionPoolDefinition.ConnectionPoolDefinition()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.EnableTcpKeepAlivesGet">
            <summary>ConnectionPoolDefinition.get_EnableTcpKeepAlives()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.EnableTcpKeepAlivesSetBoolean">
            <summary>ConnectionPoolDefinition.set_EnableTcpKeepAlives(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.MaxCloseAttemptsGet">
            <summary>ConnectionPoolDefinition.get_MaxCloseAttempts()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.MaxCloseAttemptsSetInt32">
            <summary>ConnectionPoolDefinition.set_MaxCloseAttempts(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.MaxSizeGet">
            <summary>ConnectionPoolDefinition.get_MaxSize()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.MaxSizeSetInt32">
            <summary>ConnectionPoolDefinition.set_MaxSize(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.MinSizeGet">
            <summary>ConnectionPoolDefinition.get_MinSize()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.MinSizeSetInt32">
            <summary>ConnectionPoolDefinition.set_MinSize(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.SendTimeoutGet">
            <summary>ConnectionPoolDefinition.get_SendTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.SendTimeoutSetInt32">
            <summary>ConnectionPoolDefinition.set_SendTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.ShutdownTimeoutGet">
            <summary>ConnectionPoolDefinition.get_ShutdownTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.ShutdownTimeoutSetInt32">
            <summary>ConnectionPoolDefinition.set_ShutdownTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.TcpKeepAliveIntervalGet">
            <summary>ConnectionPoolDefinition.get_TcpKeepAliveInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.TcpKeepAliveIntervalSetUInt32">
            <summary>ConnectionPoolDefinition.set_TcpKeepAliveInterval(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.TcpKeepAliveTimeGet">
            <summary>ConnectionPoolDefinition.get_TcpKeepAliveTime()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.TcpKeepAliveTimeSetUInt32">
            <summary>ConnectionPoolDefinition.set_TcpKeepAliveTime(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.TypeGet">
            <summary>ConnectionPoolDefinition.get_Type()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.TypeSetString">
            <summary>ConnectionPoolDefinition.set_Type(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.UseSslGet">
            <summary>ConnectionPoolDefinition.get_UseSsl()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.UseSslSetBoolean">
            <summary>ConnectionPoolDefinition.set_UseSsl(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.WaitTimeoutGet">
            <summary>ConnectionPoolDefinition.get_WaitTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.WaitTimeoutSetInt32">
            <summary>ConnectionPoolDefinition.set_WaitTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.AllInstances.BufferSizeGet">
            <summary>ConnectionPoolDefinition.get_BufferSize()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.AllInstances.BufferSizeSetInt32">
            <summary>ConnectionPoolDefinition.set_BufferSize(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.AllInstances.CloseAttemptIntervalGet">
            <summary>ConnectionPoolDefinition.get_CloseAttemptInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.AllInstances.CloseAttemptIntervalSetUInt32">
            <summary>ConnectionPoolDefinition.set_CloseAttemptInterval(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.AllInstances.ConnectTimeoutGet">
            <summary>ConnectionPoolDefinition.get_ConnectTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.AllInstances.ConnectTimeoutSetInt32">
            <summary>ConnectionPoolDefinition.set_ConnectTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.AllInstances.EnableTcpKeepAlivesGet">
            <summary>ConnectionPoolDefinition.get_EnableTcpKeepAlives()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.AllInstances.EnableTcpKeepAlivesSetBoolean">
            <summary>ConnectionPoolDefinition.set_EnableTcpKeepAlives(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.AllInstances.MaxCloseAttemptsGet">
            <summary>ConnectionPoolDefinition.get_MaxCloseAttempts()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.AllInstances.MaxCloseAttemptsSetInt32">
            <summary>ConnectionPoolDefinition.set_MaxCloseAttempts(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.AllInstances.MaxSizeGet">
            <summary>ConnectionPoolDefinition.get_MaxSize()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.AllInstances.MaxSizeSetInt32">
            <summary>ConnectionPoolDefinition.set_MaxSize(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.AllInstances.MinSizeGet">
            <summary>ConnectionPoolDefinition.get_MinSize()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.AllInstances.MinSizeSetInt32">
            <summary>ConnectionPoolDefinition.set_MinSize(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.AllInstances.SendTimeoutGet">
            <summary>ConnectionPoolDefinition.get_SendTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.AllInstances.SendTimeoutSetInt32">
            <summary>ConnectionPoolDefinition.set_SendTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.AllInstances.ShutdownTimeoutGet">
            <summary>ConnectionPoolDefinition.get_ShutdownTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.AllInstances.ShutdownTimeoutSetInt32">
            <summary>ConnectionPoolDefinition.set_ShutdownTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.AllInstances.TcpKeepAliveIntervalGet">
            <summary>ConnectionPoolDefinition.get_TcpKeepAliveInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.AllInstances.TcpKeepAliveIntervalSetUInt32">
            <summary>ConnectionPoolDefinition.set_TcpKeepAliveInterval(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.AllInstances.TcpKeepAliveTimeGet">
            <summary>ConnectionPoolDefinition.get_TcpKeepAliveTime()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.AllInstances.TcpKeepAliveTimeSetUInt32">
            <summary>ConnectionPoolDefinition.set_TcpKeepAliveTime(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.AllInstances.TypeGet">
            <summary>ConnectionPoolDefinition.get_Type()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.AllInstances.TypeSetString">
            <summary>ConnectionPoolDefinition.set_Type(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.AllInstances.UseSslGet">
            <summary>ConnectionPoolDefinition.get_UseSsl()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.AllInstances.UseSslSetBoolean">
            <summary>ConnectionPoolDefinition.set_UseSsl(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.AllInstances.WaitTimeoutGet">
            <summary>ConnectionPoolDefinition.get_WaitTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimConnectionPoolDefinition.AllInstances.WaitTimeoutSetInt32">
            <summary>ConnectionPoolDefinition.set_WaitTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition">
            <summary>Couchbase.Configuration.Client.CouchbaseClientDefinition의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.#ctor(Couchbase.Configuration.Client.CouchbaseClientDefinition)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.Bind(Couchbase.Configuration.Client.ICouchbaseClientDefinition)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.ApiPortGet">
            <summary>CouchbaseClientDefinition.get_ApiPort()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.ApiPortSetInt32">
            <summary>CouchbaseClientDefinition.set_ApiPort(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.BucketsCouchbaseConfigurationClientICouchbaseClientDefinitionget">
            <summary>CouchbaseClientDefinition.Couchbase.Configuration.Client.ICouchbaseClientDefinition.get_Buckets()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.BucketsGet">
            <summary>CouchbaseClientDefinition.get_Buckets()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.BucketsSetListOfBucketDefinition">
            <summary>CouchbaseClientDefinition.set_Buckets(List`1&lt;BucketDefinition&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.ConnectionPoolCouchbaseConfigurationClientICouchbaseClientDefinitionget">
            <summary>CouchbaseClientDefinition.Couchbase.Configuration.Client.ICouchbaseClientDefinition.get_ConnectionPool()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.ConnectionPoolGet">
            <summary>CouchbaseClientDefinition.get_ConnectionPool()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.ConnectionPoolSetConnectionPoolDefinition">
            <summary>CouchbaseClientDefinition.set_ConnectionPool(ConnectionPoolDefinition value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.Constructor">
            <summary>CouchbaseClientDefinition.CouchbaseClientDefinition()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.ConverterGet">
            <summary>CouchbaseClientDefinition.get_Converter()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.ConverterSetString">
            <summary>CouchbaseClientDefinition.set_Converter(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.DefaultConnectionLimitGet">
            <summary>CouchbaseClientDefinition.get_DefaultConnectionLimit()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.DefaultConnectionLimitSetInt32">
            <summary>CouchbaseClientDefinition.set_DefaultConnectionLimit(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.DirectPortGet">
            <summary>CouchbaseClientDefinition.get_DirectPort()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.DirectPortSetInt32">
            <summary>CouchbaseClientDefinition.set_DirectPort(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.EnableConfigHeartBeatGet">
            <summary>CouchbaseClientDefinition.get_EnableConfigHeartBeat()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.EnableConfigHeartBeatSetBoolean">
            <summary>CouchbaseClientDefinition.set_EnableConfigHeartBeat(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.EnableOperationTimingGet">
            <summary>CouchbaseClientDefinition.get_EnableOperationTiming()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.EnableOperationTimingSetBoolean">
            <summary>CouchbaseClientDefinition.set_EnableOperationTiming(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.EnableQueryTimingGet">
            <summary>CouchbaseClientDefinition.get_EnableQueryTiming()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.EnableQueryTimingSetBoolean">
            <summary>CouchbaseClientDefinition.set_EnableQueryTiming(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.EnableTcpKeepAlivesGet">
            <summary>CouchbaseClientDefinition.get_EnableTcpKeepAlives()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.EnableTcpKeepAlivesSetBoolean">
            <summary>CouchbaseClientDefinition.set_EnableTcpKeepAlives(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.Expect100ContinueGet">
            <summary>CouchbaseClientDefinition.get_Expect100Continue()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.Expect100ContinueSetBoolean">
            <summary>CouchbaseClientDefinition.set_Expect100Continue(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.HeartbeatConfigIntervalGet">
            <summary>CouchbaseClientDefinition.get_HeartbeatConfigInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.HeartbeatConfigIntervalSetInt32">
            <summary>CouchbaseClientDefinition.set_HeartbeatConfigInterval(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.HttpsApiPortGet">
            <summary>CouchbaseClientDefinition.get_HttpsApiPort()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.HttpsApiPortSetInt32">
            <summary>CouchbaseClientDefinition.set_HttpsApiPort(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.HttpsMgmtPortGet">
            <summary>CouchbaseClientDefinition.get_HttpsMgmtPort()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.HttpsMgmtPortSetInt32">
            <summary>CouchbaseClientDefinition.set_HttpsMgmtPort(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.IOErrorCheckIntervalGet">
            <summary>CouchbaseClientDefinition.get_IOErrorCheckInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.IOErrorCheckIntervalSetUInt32">
            <summary>CouchbaseClientDefinition.set_IOErrorCheckInterval(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.IOErrorThresholdGet">
            <summary>CouchbaseClientDefinition.get_IOErrorThreshold()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.IOErrorThresholdSetUInt32">
            <summary>CouchbaseClientDefinition.set_IOErrorThreshold(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.IOServiceGet">
            <summary>CouchbaseClientDefinition.get_IOService()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.IOServiceSetString">
            <summary>CouchbaseClientDefinition.set_IOService(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.IgnoreRemoteCertificateNameMismatchGet">
            <summary>CouchbaseClientDefinition.get_IgnoreRemoteCertificateNameMismatch()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.IgnoreRemoteCertificateNameMismatchSetBoolean">
            <summary>CouchbaseClientDefinition.set_IgnoreRemoteCertificateNameMismatch(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.MaxServicePointIdleTimeGet">
            <summary>CouchbaseClientDefinition.get_MaxServicePointIdleTime()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.MaxServicePointIdleTimeSetInt32">
            <summary>CouchbaseClientDefinition.set_MaxServicePointIdleTime(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.MaxViewRetriesGet">
            <summary>CouchbaseClientDefinition.get_MaxViewRetries()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.MaxViewRetriesSetInt32">
            <summary>CouchbaseClientDefinition.set_MaxViewRetries(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.MgmtPortGet">
            <summary>CouchbaseClientDefinition.get_MgmtPort()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.MgmtPortSetInt32">
            <summary>CouchbaseClientDefinition.set_MgmtPort(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.NodeAvailableCheckIntervalGet">
            <summary>CouchbaseClientDefinition.get_NodeAvailableCheckInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.NodeAvailableCheckIntervalSetUInt32">
            <summary>CouchbaseClientDefinition.set_NodeAvailableCheckInterval(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.ObserveIntervalGet">
            <summary>CouchbaseClientDefinition.get_ObserveInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.ObserveIntervalSetInt32">
            <summary>CouchbaseClientDefinition.set_ObserveInterval(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.ObserveTimeoutGet">
            <summary>CouchbaseClientDefinition.get_ObserveTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.ObserveTimeoutSetInt32">
            <summary>CouchbaseClientDefinition.set_ObserveTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.OperationLifespanGet">
            <summary>CouchbaseClientDefinition.get_OperationLifespan()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.OperationLifespanSetUInt32">
            <summary>CouchbaseClientDefinition.set_OperationLifespan(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.QueryFailedThresholdGet">
            <summary>CouchbaseClientDefinition.get_QueryFailedThreshold()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.QueryFailedThresholdSetInt32">
            <summary>CouchbaseClientDefinition.set_QueryFailedThreshold(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.QueryRequestTimeoutGet">
            <summary>CouchbaseClientDefinition.get_QueryRequestTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.QueryRequestTimeoutSetUInt32">
            <summary>CouchbaseClientDefinition.set_QueryRequestTimeout(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.SearchRequestTimeoutGet">
            <summary>CouchbaseClientDefinition.get_SearchRequestTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.SearchRequestTimeoutSetUInt32">
            <summary>CouchbaseClientDefinition.set_SearchRequestTimeout(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.SerializerGet">
            <summary>CouchbaseClientDefinition.get_Serializer()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.SerializerSetString">
            <summary>CouchbaseClientDefinition.set_Serializer(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.ServersCouchbaseConfigurationClientICouchbaseClientDefinitionget">
            <summary>CouchbaseClientDefinition.Couchbase.Configuration.Client.ICouchbaseClientDefinition.get_Servers()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.ServersGet">
            <summary>CouchbaseClientDefinition.get_Servers()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.ServersSetListOfUri">
            <summary>CouchbaseClientDefinition.set_Servers(List`1&lt;Uri&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.SslPortGet">
            <summary>CouchbaseClientDefinition.get_SslPort()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.SslPortSetInt32">
            <summary>CouchbaseClientDefinition.set_SslPort(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.TcpKeepAliveIntervalGet">
            <summary>CouchbaseClientDefinition.get_TcpKeepAliveInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.TcpKeepAliveIntervalSetUInt32">
            <summary>CouchbaseClientDefinition.set_TcpKeepAliveInterval(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.TcpKeepAliveTimeGet">
            <summary>CouchbaseClientDefinition.get_TcpKeepAliveTime()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.TcpKeepAliveTimeSetUInt32">
            <summary>CouchbaseClientDefinition.set_TcpKeepAliveTime(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.TranscoderGet">
            <summary>CouchbaseClientDefinition.get_Transcoder()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.TranscoderSetString">
            <summary>CouchbaseClientDefinition.set_Transcoder(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.UseInterNetworkV6AddressesGet">
            <summary>CouchbaseClientDefinition.get_UseInterNetworkV6Addresses()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.UseInterNetworkV6AddressesSetBoolean">
            <summary>CouchbaseClientDefinition.set_UseInterNetworkV6Addresses(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.UseSslGet">
            <summary>CouchbaseClientDefinition.get_UseSsl()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.UseSslSetBoolean">
            <summary>CouchbaseClientDefinition.set_UseSsl(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.VBucketRetrySleepTimeGet">
            <summary>CouchbaseClientDefinition.get_VBucketRetrySleepTime()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.VBucketRetrySleepTimeSetUInt32">
            <summary>CouchbaseClientDefinition.set_VBucketRetrySleepTime(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.ViewHardTimeoutGet">
            <summary>CouchbaseClientDefinition.get_ViewHardTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.ViewHardTimeoutSetInt32">
            <summary>CouchbaseClientDefinition.set_ViewHardTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.ViewRequestTimeoutGet">
            <summary>CouchbaseClientDefinition.get_ViewRequestTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.ViewRequestTimeoutSetInt32">
            <summary>CouchbaseClientDefinition.set_ViewRequestTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.ApiPortGet">
            <summary>CouchbaseClientDefinition.get_ApiPort()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.ApiPortSetInt32">
            <summary>CouchbaseClientDefinition.set_ApiPort(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.BucketsCouchbaseConfigurationClientICouchbaseClientDefinitionget">
            <summary>CouchbaseClientDefinition.Couchbase.Configuration.Client.ICouchbaseClientDefinition.get_Buckets()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.BucketsGet">
            <summary>CouchbaseClientDefinition.get_Buckets()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.BucketsSetListOfBucketDefinition">
            <summary>CouchbaseClientDefinition.set_Buckets(List`1&lt;BucketDefinition&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.ConnectionPoolCouchbaseConfigurationClientICouchbaseClientDefinitionget">
            <summary>CouchbaseClientDefinition.Couchbase.Configuration.Client.ICouchbaseClientDefinition.get_ConnectionPool()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.ConnectionPoolGet">
            <summary>CouchbaseClientDefinition.get_ConnectionPool()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.ConnectionPoolSetConnectionPoolDefinition">
            <summary>CouchbaseClientDefinition.set_ConnectionPool(ConnectionPoolDefinition value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.ConverterGet">
            <summary>CouchbaseClientDefinition.get_Converter()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.ConverterSetString">
            <summary>CouchbaseClientDefinition.set_Converter(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.DefaultConnectionLimitGet">
            <summary>CouchbaseClientDefinition.get_DefaultConnectionLimit()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.DefaultConnectionLimitSetInt32">
            <summary>CouchbaseClientDefinition.set_DefaultConnectionLimit(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.DirectPortGet">
            <summary>CouchbaseClientDefinition.get_DirectPort()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.DirectPortSetInt32">
            <summary>CouchbaseClientDefinition.set_DirectPort(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.EnableConfigHeartBeatGet">
            <summary>CouchbaseClientDefinition.get_EnableConfigHeartBeat()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.EnableConfigHeartBeatSetBoolean">
            <summary>CouchbaseClientDefinition.set_EnableConfigHeartBeat(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.EnableOperationTimingGet">
            <summary>CouchbaseClientDefinition.get_EnableOperationTiming()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.EnableOperationTimingSetBoolean">
            <summary>CouchbaseClientDefinition.set_EnableOperationTiming(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.EnableQueryTimingGet">
            <summary>CouchbaseClientDefinition.get_EnableQueryTiming()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.EnableQueryTimingSetBoolean">
            <summary>CouchbaseClientDefinition.set_EnableQueryTiming(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.EnableTcpKeepAlivesGet">
            <summary>CouchbaseClientDefinition.get_EnableTcpKeepAlives()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.EnableTcpKeepAlivesSetBoolean">
            <summary>CouchbaseClientDefinition.set_EnableTcpKeepAlives(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.Expect100ContinueGet">
            <summary>CouchbaseClientDefinition.get_Expect100Continue()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.Expect100ContinueSetBoolean">
            <summary>CouchbaseClientDefinition.set_Expect100Continue(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.HeartbeatConfigIntervalGet">
            <summary>CouchbaseClientDefinition.get_HeartbeatConfigInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.HeartbeatConfigIntervalSetInt32">
            <summary>CouchbaseClientDefinition.set_HeartbeatConfigInterval(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.HttpsApiPortGet">
            <summary>CouchbaseClientDefinition.get_HttpsApiPort()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.HttpsApiPortSetInt32">
            <summary>CouchbaseClientDefinition.set_HttpsApiPort(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.HttpsMgmtPortGet">
            <summary>CouchbaseClientDefinition.get_HttpsMgmtPort()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.HttpsMgmtPortSetInt32">
            <summary>CouchbaseClientDefinition.set_HttpsMgmtPort(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.IOErrorCheckIntervalGet">
            <summary>CouchbaseClientDefinition.get_IOErrorCheckInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.IOErrorCheckIntervalSetUInt32">
            <summary>CouchbaseClientDefinition.set_IOErrorCheckInterval(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.IOErrorThresholdGet">
            <summary>CouchbaseClientDefinition.get_IOErrorThreshold()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.IOErrorThresholdSetUInt32">
            <summary>CouchbaseClientDefinition.set_IOErrorThreshold(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.IOServiceGet">
            <summary>CouchbaseClientDefinition.get_IOService()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.IOServiceSetString">
            <summary>CouchbaseClientDefinition.set_IOService(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.IgnoreRemoteCertificateNameMismatchGet">
            <summary>CouchbaseClientDefinition.get_IgnoreRemoteCertificateNameMismatch()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.IgnoreRemoteCertificateNameMismatchSetBoolean">
            <summary>CouchbaseClientDefinition.set_IgnoreRemoteCertificateNameMismatch(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.MaxServicePointIdleTimeGet">
            <summary>CouchbaseClientDefinition.get_MaxServicePointIdleTime()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.MaxServicePointIdleTimeSetInt32">
            <summary>CouchbaseClientDefinition.set_MaxServicePointIdleTime(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.MaxViewRetriesGet">
            <summary>CouchbaseClientDefinition.get_MaxViewRetries()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.MaxViewRetriesSetInt32">
            <summary>CouchbaseClientDefinition.set_MaxViewRetries(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.MgmtPortGet">
            <summary>CouchbaseClientDefinition.get_MgmtPort()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.MgmtPortSetInt32">
            <summary>CouchbaseClientDefinition.set_MgmtPort(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.NodeAvailableCheckIntervalGet">
            <summary>CouchbaseClientDefinition.get_NodeAvailableCheckInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.NodeAvailableCheckIntervalSetUInt32">
            <summary>CouchbaseClientDefinition.set_NodeAvailableCheckInterval(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.ObserveIntervalGet">
            <summary>CouchbaseClientDefinition.get_ObserveInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.ObserveIntervalSetInt32">
            <summary>CouchbaseClientDefinition.set_ObserveInterval(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.ObserveTimeoutGet">
            <summary>CouchbaseClientDefinition.get_ObserveTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.ObserveTimeoutSetInt32">
            <summary>CouchbaseClientDefinition.set_ObserveTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.OperationLifespanGet">
            <summary>CouchbaseClientDefinition.get_OperationLifespan()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.OperationLifespanSetUInt32">
            <summary>CouchbaseClientDefinition.set_OperationLifespan(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.QueryFailedThresholdGet">
            <summary>CouchbaseClientDefinition.get_QueryFailedThreshold()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.QueryFailedThresholdSetInt32">
            <summary>CouchbaseClientDefinition.set_QueryFailedThreshold(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.QueryRequestTimeoutGet">
            <summary>CouchbaseClientDefinition.get_QueryRequestTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.QueryRequestTimeoutSetUInt32">
            <summary>CouchbaseClientDefinition.set_QueryRequestTimeout(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.SearchRequestTimeoutGet">
            <summary>CouchbaseClientDefinition.get_SearchRequestTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.SearchRequestTimeoutSetUInt32">
            <summary>CouchbaseClientDefinition.set_SearchRequestTimeout(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.SerializerGet">
            <summary>CouchbaseClientDefinition.get_Serializer()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.SerializerSetString">
            <summary>CouchbaseClientDefinition.set_Serializer(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.ServersCouchbaseConfigurationClientICouchbaseClientDefinitionget">
            <summary>CouchbaseClientDefinition.Couchbase.Configuration.Client.ICouchbaseClientDefinition.get_Servers()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.ServersGet">
            <summary>CouchbaseClientDefinition.get_Servers()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.ServersSetListOfUri">
            <summary>CouchbaseClientDefinition.set_Servers(List`1&lt;Uri&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.SslPortGet">
            <summary>CouchbaseClientDefinition.get_SslPort()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.SslPortSetInt32">
            <summary>CouchbaseClientDefinition.set_SslPort(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.TcpKeepAliveIntervalGet">
            <summary>CouchbaseClientDefinition.get_TcpKeepAliveInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.TcpKeepAliveIntervalSetUInt32">
            <summary>CouchbaseClientDefinition.set_TcpKeepAliveInterval(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.TcpKeepAliveTimeGet">
            <summary>CouchbaseClientDefinition.get_TcpKeepAliveTime()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.TcpKeepAliveTimeSetUInt32">
            <summary>CouchbaseClientDefinition.set_TcpKeepAliveTime(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.TranscoderGet">
            <summary>CouchbaseClientDefinition.get_Transcoder()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.TranscoderSetString">
            <summary>CouchbaseClientDefinition.set_Transcoder(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.UseInterNetworkV6AddressesGet">
            <summary>CouchbaseClientDefinition.get_UseInterNetworkV6Addresses()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.UseInterNetworkV6AddressesSetBoolean">
            <summary>CouchbaseClientDefinition.set_UseInterNetworkV6Addresses(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.UseSslGet">
            <summary>CouchbaseClientDefinition.get_UseSsl()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.UseSslSetBoolean">
            <summary>CouchbaseClientDefinition.set_UseSsl(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.VBucketRetrySleepTimeGet">
            <summary>CouchbaseClientDefinition.get_VBucketRetrySleepTime()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.VBucketRetrySleepTimeSetUInt32">
            <summary>CouchbaseClientDefinition.set_VBucketRetrySleepTime(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.ViewHardTimeoutGet">
            <summary>CouchbaseClientDefinition.get_ViewHardTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.ViewHardTimeoutSetInt32">
            <summary>CouchbaseClientDefinition.set_ViewHardTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.ViewRequestTimeoutGet">
            <summary>CouchbaseClientDefinition.get_ViewRequestTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimCouchbaseClientDefinition.AllInstances.ViewRequestTimeoutSetInt32">
            <summary>CouchbaseClientDefinition.set_ViewRequestTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration">
            <summary>Couchbase.Configuration.Client.PoolConfiguration의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.#ctor(Couchbase.Configuration.Client.PoolConfiguration)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.BufferAllocatorGet">
            <summary>PoolConfiguration.get_BufferAllocator()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.BufferAllocatorSetFuncOfPoolConfigurationBufferAllocator">
            <summary>PoolConfiguration.set_BufferAllocator(Func`2&lt;PoolConfiguration,BufferAllocator&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.BufferSizeGet">
            <summary>PoolConfiguration.get_BufferSize()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.BufferSizeSetInt32">
            <summary>PoolConfiguration.set_BufferSize(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.ClientConfigurationGet">
            <summary>PoolConfiguration.get_ClientConfiguration()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.ClientConfigurationSetClientConfiguration">
            <summary>PoolConfiguration.set_ClientConfiguration(ClientConfiguration value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.CloneUri">
            <summary>PoolConfiguration.Clone(Uri uri)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.CloseAttemptIntervalGet">
            <summary>PoolConfiguration.get_CloseAttemptInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.CloseAttemptIntervalSetUInt32">
            <summary>PoolConfiguration.set_CloseAttemptInterval(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.ConnectTimeoutGet">
            <summary>PoolConfiguration.get_ConnectTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.ConnectTimeoutSetInt32">
            <summary>PoolConfiguration.set_ConnectTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.ConstructorClientConfiguration">
            <summary>PoolConfiguration.PoolConfiguration(ClientConfiguration clientConfiguration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.ConstructorInt32Int32Int32Int32Int32Int32Int32Int32ClientConfiguration">
            <summary>PoolConfiguration.PoolConfiguration(Int32 maxSize, Int32 minSize, Int32 waitTimeout, Int32 receiveTimeout, Int32 shutdownTimeout, Int32 operationTimeout, Int32 maxAcquireIterationCount, Int32 connectTimeout, ClientConfiguration clientConfiguration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.EnableOperationTimingGet">
            <summary>PoolConfiguration.get_EnableOperationTiming()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.EnableTcpKeepAlivesGet">
            <summary>PoolConfiguration.get_EnableTcpKeepAlives()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.EnableTcpKeepAlivesSetBoolean">
            <summary>PoolConfiguration.set_EnableTcpKeepAlives(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.MaxAcquireIterationCountGet">
            <summary>PoolConfiguration.get_MaxAcquireIterationCount()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.MaxAcquireIterationCountSetInt32">
            <summary>PoolConfiguration.set_MaxAcquireIterationCount(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.MaxCloseAttemptsGet">
            <summary>PoolConfiguration.get_MaxCloseAttempts()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.MaxCloseAttemptsSetInt32">
            <summary>PoolConfiguration.set_MaxCloseAttempts(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.MaxSizeGet">
            <summary>PoolConfiguration.get_MaxSize()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.MaxSizeSetInt32">
            <summary>PoolConfiguration.set_MaxSize(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.MinSizeGet">
            <summary>PoolConfiguration.get_MinSize()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.MinSizeSetInt32">
            <summary>PoolConfiguration.set_MinSize(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.OperationTimeoutGet">
            <summary>PoolConfiguration.get_OperationTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.OperationTimeoutSetInt32">
            <summary>PoolConfiguration.set_OperationTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.RecieveTimeoutGet">
            <summary>PoolConfiguration.get_RecieveTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.RecieveTimeoutSetInt32">
            <summary>PoolConfiguration.set_RecieveTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.SendTimeoutGet">
            <summary>PoolConfiguration.get_SendTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.SendTimeoutSetInt32">
            <summary>PoolConfiguration.set_SendTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.ShutdownTimeoutGet">
            <summary>PoolConfiguration.get_ShutdownTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.ShutdownTimeoutSetInt32">
            <summary>PoolConfiguration.set_ShutdownTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.TcpKeepAliveIntervalGet">
            <summary>PoolConfiguration.get_TcpKeepAliveInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.TcpKeepAliveIntervalSetUInt32">
            <summary>PoolConfiguration.set_TcpKeepAliveInterval(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.TcpKeepAliveTimeGet">
            <summary>PoolConfiguration.get_TcpKeepAliveTime()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.TcpKeepAliveTimeSetUInt32">
            <summary>PoolConfiguration.set_TcpKeepAliveTime(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.UriGet">
            <summary>PoolConfiguration.get_Uri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.UriSetUri">
            <summary>PoolConfiguration.set_Uri(Uri value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.UseEnhancedDurabilityGet">
            <summary>PoolConfiguration.get_UseEnhancedDurability()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.UseEnhancedDurabilitySetBoolean">
            <summary>PoolConfiguration.set_UseEnhancedDurability(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.UseSslGet">
            <summary>PoolConfiguration.get_UseSsl()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.UseSslSetBoolean">
            <summary>PoolConfiguration.set_UseSsl(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.WaitTimeoutGet">
            <summary>PoolConfiguration.get_WaitTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.WaitTimeoutSetInt32">
            <summary>PoolConfiguration.set_WaitTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.AllInstances.BufferAllocatorGet">
            <summary>PoolConfiguration.get_BufferAllocator()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.AllInstances.BufferAllocatorSetFuncOfPoolConfigurationBufferAllocator">
            <summary>PoolConfiguration.set_BufferAllocator(Func`2&lt;PoolConfiguration,BufferAllocator&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.AllInstances.BufferSizeGet">
            <summary>PoolConfiguration.get_BufferSize()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.AllInstances.BufferSizeSetInt32">
            <summary>PoolConfiguration.set_BufferSize(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.AllInstances.ClientConfigurationGet">
            <summary>PoolConfiguration.get_ClientConfiguration()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.AllInstances.ClientConfigurationSetClientConfiguration">
            <summary>PoolConfiguration.set_ClientConfiguration(ClientConfiguration value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.AllInstances.CloneUri">
            <summary>PoolConfiguration.Clone(Uri uri)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.AllInstances.CloseAttemptIntervalGet">
            <summary>PoolConfiguration.get_CloseAttemptInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.AllInstances.CloseAttemptIntervalSetUInt32">
            <summary>PoolConfiguration.set_CloseAttemptInterval(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.AllInstances.ConnectTimeoutGet">
            <summary>PoolConfiguration.get_ConnectTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.AllInstances.ConnectTimeoutSetInt32">
            <summary>PoolConfiguration.set_ConnectTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.AllInstances.EnableOperationTimingGet">
            <summary>PoolConfiguration.get_EnableOperationTiming()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.AllInstances.EnableTcpKeepAlivesGet">
            <summary>PoolConfiguration.get_EnableTcpKeepAlives()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.AllInstances.EnableTcpKeepAlivesSetBoolean">
            <summary>PoolConfiguration.set_EnableTcpKeepAlives(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.AllInstances.MaxAcquireIterationCountGet">
            <summary>PoolConfiguration.get_MaxAcquireIterationCount()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.AllInstances.MaxAcquireIterationCountSetInt32">
            <summary>PoolConfiguration.set_MaxAcquireIterationCount(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.AllInstances.MaxCloseAttemptsGet">
            <summary>PoolConfiguration.get_MaxCloseAttempts()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.AllInstances.MaxCloseAttemptsSetInt32">
            <summary>PoolConfiguration.set_MaxCloseAttempts(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.AllInstances.MaxSizeGet">
            <summary>PoolConfiguration.get_MaxSize()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.AllInstances.MaxSizeSetInt32">
            <summary>PoolConfiguration.set_MaxSize(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.AllInstances.MinSizeGet">
            <summary>PoolConfiguration.get_MinSize()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.AllInstances.MinSizeSetInt32">
            <summary>PoolConfiguration.set_MinSize(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.AllInstances.OperationTimeoutGet">
            <summary>PoolConfiguration.get_OperationTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.AllInstances.OperationTimeoutSetInt32">
            <summary>PoolConfiguration.set_OperationTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.AllInstances.RecieveTimeoutGet">
            <summary>PoolConfiguration.get_RecieveTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.AllInstances.RecieveTimeoutSetInt32">
            <summary>PoolConfiguration.set_RecieveTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.AllInstances.SendTimeoutGet">
            <summary>PoolConfiguration.get_SendTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.AllInstances.SendTimeoutSetInt32">
            <summary>PoolConfiguration.set_SendTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.AllInstances.ShutdownTimeoutGet">
            <summary>PoolConfiguration.get_ShutdownTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.AllInstances.ShutdownTimeoutSetInt32">
            <summary>PoolConfiguration.set_ShutdownTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.AllInstances.TcpKeepAliveIntervalGet">
            <summary>PoolConfiguration.get_TcpKeepAliveInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.AllInstances.TcpKeepAliveIntervalSetUInt32">
            <summary>PoolConfiguration.set_TcpKeepAliveInterval(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.AllInstances.TcpKeepAliveTimeGet">
            <summary>PoolConfiguration.get_TcpKeepAliveTime()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.AllInstances.TcpKeepAliveTimeSetUInt32">
            <summary>PoolConfiguration.set_TcpKeepAliveTime(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.AllInstances.UriGet">
            <summary>PoolConfiguration.get_Uri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.AllInstances.UriSetUri">
            <summary>PoolConfiguration.set_Uri(Uri value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.AllInstances.UseEnhancedDurabilityGet">
            <summary>PoolConfiguration.get_UseEnhancedDurability()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.AllInstances.UseEnhancedDurabilitySetBoolean">
            <summary>PoolConfiguration.set_UseEnhancedDurability(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.AllInstances.UseSslGet">
            <summary>PoolConfiguration.get_UseSsl()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.AllInstances.UseSslSetBoolean">
            <summary>PoolConfiguration.set_UseSsl(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.AllInstances.WaitTimeoutGet">
            <summary>PoolConfiguration.get_WaitTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.AllInstances.WaitTimeoutSetInt32">
            <summary>PoolConfiguration.set_WaitTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.ShimDefaults">
            <summary>Couchbase.Configuration.Client.PoolConfiguration+Defaults의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.ShimDefaults.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.ShimDefaults.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.ShimDefaults.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.ShimPoolConfiguration.ShimDefaults.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Client.Fakes.StubBucketDefinition">
            <summary>Couchbase.Configuration.Client.BucketDefinition의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.StubBucketDefinition.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.StubBucketDefinition.InitializeStub">
            <summary>type StubBucketDefinition의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubBucketDefinition.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubBucketDefinition.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubBucketDefinition.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Client.Fakes.StubClientConfiguration">
            <summary>Couchbase.Configuration.Client.ClientConfiguration의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.StubClientConfiguration.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.StubClientConfiguration.#ctor(Couchbase.Configuration.Client.ICouchbaseClientDefinition)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.StubClientConfiguration.#ctor(Couchbase.Configuration.Client.Providers.CouchbaseClientSection)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.StubClientConfiguration.InitializeStub">
            <summary>type StubClientConfiguration의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubClientConfiguration.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubClientConfiguration.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubClientConfiguration.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Client.Fakes.StubConnectionPoolDefinition">
            <summary>Couchbase.Configuration.Client.ConnectionPoolDefinition의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.StubConnectionPoolDefinition.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.StubConnectionPoolDefinition.InitializeStub">
            <summary>type StubConnectionPoolDefinition의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubConnectionPoolDefinition.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubConnectionPoolDefinition.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubConnectionPoolDefinition.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Client.Fakes.StubCouchbaseClientDefinition">
            <summary>Couchbase.Configuration.Client.CouchbaseClientDefinition의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.StubCouchbaseClientDefinition.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.StubCouchbaseClientDefinition.InitializeStub">
            <summary>type StubCouchbaseClientDefinition의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubCouchbaseClientDefinition.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubCouchbaseClientDefinition.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubCouchbaseClientDefinition.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Client.Fakes.StubIBucketDefinition">
            <summary>Couchbase.Configuration.Client.IBucketDefinition의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.StubIBucketDefinition.#ctor">
            <summary>type StubIBucketDefinition의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubIBucketDefinition.ConnectionPoolGet">
            <summary>IBucketDefinition.get_ConnectionPool()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubIBucketDefinition.NameGet">
            <summary>IBucketDefinition.get_Name()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubIBucketDefinition.ObserveIntervalGet">
            <summary>IBucketDefinition.get_ObserveInterval()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubIBucketDefinition.ObserveTimeoutGet">
            <summary>IBucketDefinition.get_ObserveTimeout()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubIBucketDefinition.OperationLifespanGet">
            <summary>IBucketDefinition.get_OperationLifespan()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubIBucketDefinition.PasswordGet">
            <summary>IBucketDefinition.get_Password()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubIBucketDefinition.UseEnhancedDurabilityGet">
            <summary>IBucketDefinition.get_UseEnhancedDurability()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubIBucketDefinition.UseSslGet">
            <summary>IBucketDefinition.get_UseSsl()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubIBucketDefinition.cnc::Couchbase#Configuration#Client#IBucketDefinition#ConnectionPool">
            <summary>IBucketDefinition.get_ConnectionPool()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubIBucketDefinition.cnc::Couchbase#Configuration#Client#IBucketDefinition#Name">
            <summary>IBucketDefinition.get_Name()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubIBucketDefinition.cnc::Couchbase#Configuration#Client#IBucketDefinition#ObserveInterval">
            <summary>IBucketDefinition.get_ObserveInterval()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubIBucketDefinition.cnc::Couchbase#Configuration#Client#IBucketDefinition#ObserveTimeout">
            <summary>IBucketDefinition.get_ObserveTimeout()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubIBucketDefinition.cnc::Couchbase#Configuration#Client#IBucketDefinition#OperationLifespan">
            <summary>IBucketDefinition.get_OperationLifespan()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubIBucketDefinition.cnc::Couchbase#Configuration#Client#IBucketDefinition#Password">
            <summary>IBucketDefinition.get_Password()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubIBucketDefinition.cnc::Couchbase#Configuration#Client#IBucketDefinition#UseEnhancedDurability">
            <summary>IBucketDefinition.get_UseEnhancedDurability()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubIBucketDefinition.cnc::Couchbase#Configuration#Client#IBucketDefinition#UseSsl">
            <summary>IBucketDefinition.get_UseSsl()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Client.Fakes.StubIConnectionPoolDefinition">
            <summary>Couchbase.Configuration.Client.IConnectionPoolDefinition의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.StubIConnectionPoolDefinition.#ctor">
            <summary>type StubIConnectionPoolDefinition의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubIConnectionPoolDefinition.BufferSizeGet">
            <summary>IConnectionPoolDefinition.get_BufferSize()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubIConnectionPoolDefinition.CloseAttemptIntervalGet">
            <summary>IConnectionPoolDefinition.get_CloseAttemptInterval()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubIConnectionPoolDefinition.ConnectTimeoutGet">
            <summary>IConnectionPoolDefinition.get_ConnectTimeout()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubIConnectionPoolDefinition.EnableTcpKeepAlivesGet">
            <summary>IConnectionPoolDefinition.get_EnableTcpKeepAlives()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubIConnectionPoolDefinition.MaxCloseAttemptsGet">
            <summary>IConnectionPoolDefinition.get_MaxCloseAttempts()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubIConnectionPoolDefinition.MaxSizeGet">
            <summary>IConnectionPoolDefinition.get_MaxSize()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubIConnectionPoolDefinition.MinSizeGet">
            <summary>IConnectionPoolDefinition.get_MinSize()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubIConnectionPoolDefinition.SendTimeoutGet">
            <summary>IConnectionPoolDefinition.get_SendTimeout()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubIConnectionPoolDefinition.ShutdownTimeoutGet">
            <summary>IConnectionPoolDefinition.get_ShutdownTimeout()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubIConnectionPoolDefinition.TcpKeepAliveIntervalGet">
            <summary>IConnectionPoolDefinition.get_TcpKeepAliveInterval()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubIConnectionPoolDefinition.TcpKeepAliveTimeGet">
            <summary>IConnectionPoolDefinition.get_TcpKeepAliveTime()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubIConnectionPoolDefinition.TypeGet">
            <summary>IConnectionPoolDefinition.get_Type()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubIConnectionPoolDefinition.UseSslGet">
            <summary>IConnectionPoolDefinition.get_UseSsl()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubIConnectionPoolDefinition.WaitTimeoutGet">
            <summary>IConnectionPoolDefinition.get_WaitTimeout()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubIConnectionPoolDefinition.cnc::Couchbase#Configuration#Client#IConnectionPoolDefinition#BufferSize">
            <summary>IConnectionPoolDefinition.get_BufferSize()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubIConnectionPoolDefinition.cnc::Couchbase#Configuration#Client#IConnectionPoolDefinition#CloseAttemptInterval">
            <summary>IConnectionPoolDefinition.get_CloseAttemptInterval()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubIConnectionPoolDefinition.cnc::Couchbase#Configuration#Client#IConnectionPoolDefinition#ConnectTimeout">
            <summary>IConnectionPoolDefinition.get_ConnectTimeout()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubIConnectionPoolDefinition.cnc::Couchbase#Configuration#Client#IConnectionPoolDefinition#EnableTcpKeepAlives">
            <summary>IConnectionPoolDefinition.get_EnableTcpKeepAlives()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubIConnectionPoolDefinition.cnc::Couchbase#Configuration#Client#IConnectionPoolDefinition#MaxCloseAttempts">
            <summary>IConnectionPoolDefinition.get_MaxCloseAttempts()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubIConnectionPoolDefinition.cnc::Couchbase#Configuration#Client#IConnectionPoolDefinition#MaxSize">
            <summary>IConnectionPoolDefinition.get_MaxSize()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubIConnectionPoolDefinition.cnc::Couchbase#Configuration#Client#IConnectionPoolDefinition#MinSize">
            <summary>IConnectionPoolDefinition.get_MinSize()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubIConnectionPoolDefinition.cnc::Couchbase#Configuration#Client#IConnectionPoolDefinition#SendTimeout">
            <summary>IConnectionPoolDefinition.get_SendTimeout()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubIConnectionPoolDefinition.cnc::Couchbase#Configuration#Client#IConnectionPoolDefinition#ShutdownTimeout">
            <summary>IConnectionPoolDefinition.get_ShutdownTimeout()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubIConnectionPoolDefinition.cnc::Couchbase#Configuration#Client#IConnectionPoolDefinition#TcpKeepAliveInterval">
            <summary>IConnectionPoolDefinition.get_TcpKeepAliveInterval()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubIConnectionPoolDefinition.cnc::Couchbase#Configuration#Client#IConnectionPoolDefinition#TcpKeepAliveTime">
            <summary>IConnectionPoolDefinition.get_TcpKeepAliveTime()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubIConnectionPoolDefinition.cnc::Couchbase#Configuration#Client#IConnectionPoolDefinition#Type">
            <summary>IConnectionPoolDefinition.get_Type()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubIConnectionPoolDefinition.cnc::Couchbase#Configuration#Client#IConnectionPoolDefinition#UseSsl">
            <summary>IConnectionPoolDefinition.get_UseSsl()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubIConnectionPoolDefinition.cnc::Couchbase#Configuration#Client#IConnectionPoolDefinition#WaitTimeout">
            <summary>IConnectionPoolDefinition.get_WaitTimeout()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition">
            <summary>Couchbase.Configuration.Client.ICouchbaseClientDefinition의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.#ctor">
            <summary>type StubICouchbaseClientDefinition의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.ApiPortGet">
            <summary>ICouchbaseClientDefinition.get_ApiPort()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.AttachBackingFieldToEnableQueryTiming">
            <summary>대리자를 연결하여 StubICouchbaseClientDefinition.EnableQueryTiming을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.AttachBackingFieldToIgnoreRemoteCertificateNameMismatch">
            <summary>대리자를 연결하여 StubICouchbaseClientDefinition.IgnoreRemoteCertificateNameMismatch을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.AttachBackingFieldToUseInterNetworkV6Addresses">
            <summary>대리자를 연결하여 StubICouchbaseClientDefinition.UseInterNetworkV6Addresses을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.AttachBackingFieldToVBucketRetrySleepTime">
            <summary>대리자를 연결하여 StubICouchbaseClientDefinition.VBucketRetrySleepTime을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.BucketsGet">
            <summary>ICouchbaseClientDefinition.get_Buckets()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.ConnectionPoolGet">
            <summary>ICouchbaseClientDefinition.get_ConnectionPool()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.ConverterGet">
            <summary>ICouchbaseClientDefinition.get_Converter()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.DefaultConnectionLimitGet">
            <summary>ICouchbaseClientDefinition.get_DefaultConnectionLimit()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.DirectPortGet">
            <summary>ICouchbaseClientDefinition.get_DirectPort()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.EnableConfigHeartBeatGet">
            <summary>ICouchbaseClientDefinition.get_EnableConfigHeartBeat()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.EnableOperationTimingGet">
            <summary>ICouchbaseClientDefinition.get_EnableOperationTiming()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.EnableQueryTimingGet">
            <summary>ICouchbaseClientDefinition.get_EnableQueryTiming()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.EnableQueryTimingSetBoolean">
            <summary>ICouchbaseClientDefinition.set_EnableQueryTiming(Boolean value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.EnableTcpKeepAlivesGet">
            <summary>ICouchbaseClientDefinition.get_EnableTcpKeepAlives()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.Expect100ContinueGet">
            <summary>ICouchbaseClientDefinition.get_Expect100Continue()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.HeartbeatConfigIntervalGet">
            <summary>ICouchbaseClientDefinition.get_HeartbeatConfigInterval()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.HttpsApiPortGet">
            <summary>ICouchbaseClientDefinition.get_HttpsApiPort()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.HttpsMgmtPortGet">
            <summary>ICouchbaseClientDefinition.get_HttpsMgmtPort()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.IOErrorCheckIntervalGet">
            <summary>ICouchbaseClientDefinition.get_IOErrorCheckInterval()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.IOErrorThresholdGet">
            <summary>ICouchbaseClientDefinition.get_IOErrorThreshold()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.IOServiceGet">
            <summary>ICouchbaseClientDefinition.get_IOService()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.IgnoreRemoteCertificateNameMismatchGet">
            <summary>ICouchbaseClientDefinition.get_IgnoreRemoteCertificateNameMismatch()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.IgnoreRemoteCertificateNameMismatchSetBoolean">
            <summary>ICouchbaseClientDefinition.set_IgnoreRemoteCertificateNameMismatch(Boolean value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.MaxServicePointIdleTimeGet">
            <summary>ICouchbaseClientDefinition.get_MaxServicePointIdleTime()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.MaxViewRetriesGet">
            <summary>ICouchbaseClientDefinition.get_MaxViewRetries()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.MgmtPortGet">
            <summary>ICouchbaseClientDefinition.get_MgmtPort()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.NodeAvailableCheckIntervalGet">
            <summary>ICouchbaseClientDefinition.get_NodeAvailableCheckInterval()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.ObserveIntervalGet">
            <summary>ICouchbaseClientDefinition.get_ObserveInterval()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.ObserveTimeoutGet">
            <summary>ICouchbaseClientDefinition.get_ObserveTimeout()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.OperationLifespanGet">
            <summary>ICouchbaseClientDefinition.get_OperationLifespan()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.QueryFailedThresholdGet">
            <summary>ICouchbaseClientDefinition.get_QueryFailedThreshold()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.QueryRequestTimeoutGet">
            <summary>ICouchbaseClientDefinition.get_QueryRequestTimeout()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.SearchRequestTimeoutGet">
            <summary>ICouchbaseClientDefinition.get_SearchRequestTimeout()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.SerializerGet">
            <summary>ICouchbaseClientDefinition.get_Serializer()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.ServersGet">
            <summary>ICouchbaseClientDefinition.get_Servers()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.SslPortGet">
            <summary>ICouchbaseClientDefinition.get_SslPort()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.TcpKeepAliveIntervalGet">
            <summary>ICouchbaseClientDefinition.get_TcpKeepAliveInterval()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.TcpKeepAliveTimeGet">
            <summary>ICouchbaseClientDefinition.get_TcpKeepAliveTime()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.TranscoderGet">
            <summary>ICouchbaseClientDefinition.get_Transcoder()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.UseInterNetworkV6AddressesGet">
            <summary>ICouchbaseClientDefinition.get_UseInterNetworkV6Addresses()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.UseInterNetworkV6AddressesSetBoolean">
            <summary>ICouchbaseClientDefinition.set_UseInterNetworkV6Addresses(Boolean value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.UseSslGet">
            <summary>ICouchbaseClientDefinition.get_UseSsl()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.VBucketRetrySleepTimeGet">
            <summary>ICouchbaseClientDefinition.get_VBucketRetrySleepTime()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.VBucketRetrySleepTimeSetUInt32">
            <summary>ICouchbaseClientDefinition.set_VBucketRetrySleepTime(UInt32 value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.ViewHardTimeoutGet">
            <summary>ICouchbaseClientDefinition.get_ViewHardTimeout()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.ViewRequestTimeoutGet">
            <summary>ICouchbaseClientDefinition.get_ViewRequestTimeout()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.cnc::Couchbase#Configuration#Client#ICouchbaseClientDefinition#ApiPort">
            <summary>ICouchbaseClientDefinition.get_ApiPort()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.cnc::Couchbase#Configuration#Client#ICouchbaseClientDefinition#Buckets">
            <summary>ICouchbaseClientDefinition.get_Buckets()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.cnc::Couchbase#Configuration#Client#ICouchbaseClientDefinition#ConnectionPool">
            <summary>ICouchbaseClientDefinition.get_ConnectionPool()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.cnc::Couchbase#Configuration#Client#ICouchbaseClientDefinition#Converter">
            <summary>ICouchbaseClientDefinition.get_Converter()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.cnc::Couchbase#Configuration#Client#ICouchbaseClientDefinition#DefaultConnectionLimit">
            <summary>ICouchbaseClientDefinition.get_DefaultConnectionLimit()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.cnc::Couchbase#Configuration#Client#ICouchbaseClientDefinition#DirectPort">
            <summary>ICouchbaseClientDefinition.get_DirectPort()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.cnc::Couchbase#Configuration#Client#ICouchbaseClientDefinition#EnableConfigHeartBeat">
            <summary>ICouchbaseClientDefinition.get_EnableConfigHeartBeat()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.cnc::Couchbase#Configuration#Client#ICouchbaseClientDefinition#EnableOperationTiming">
            <summary>ICouchbaseClientDefinition.get_EnableOperationTiming()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.cnc::Couchbase#Configuration#Client#ICouchbaseClientDefinition#EnableQueryTiming">
            <summary>ICouchbaseClientDefinition.get_EnableQueryTiming()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.cnc::Couchbase#Configuration#Client#ICouchbaseClientDefinition#EnableTcpKeepAlives">
            <summary>ICouchbaseClientDefinition.get_EnableTcpKeepAlives()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.cnc::Couchbase#Configuration#Client#ICouchbaseClientDefinition#Expect100Continue">
            <summary>ICouchbaseClientDefinition.get_Expect100Continue()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.cnc::Couchbase#Configuration#Client#ICouchbaseClientDefinition#HeartbeatConfigInterval">
            <summary>ICouchbaseClientDefinition.get_HeartbeatConfigInterval()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.cnc::Couchbase#Configuration#Client#ICouchbaseClientDefinition#HttpsApiPort">
            <summary>ICouchbaseClientDefinition.get_HttpsApiPort()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.cnc::Couchbase#Configuration#Client#ICouchbaseClientDefinition#HttpsMgmtPort">
            <summary>ICouchbaseClientDefinition.get_HttpsMgmtPort()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.cnc::Couchbase#Configuration#Client#ICouchbaseClientDefinition#IOErrorCheckInterval">
            <summary>ICouchbaseClientDefinition.get_IOErrorCheckInterval()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.cnc::Couchbase#Configuration#Client#ICouchbaseClientDefinition#IOErrorThreshold">
            <summary>ICouchbaseClientDefinition.get_IOErrorThreshold()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.cnc::Couchbase#Configuration#Client#ICouchbaseClientDefinition#IOService">
            <summary>ICouchbaseClientDefinition.get_IOService()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.cnc::Couchbase#Configuration#Client#ICouchbaseClientDefinition#IgnoreRemoteCertificateNameMismatch">
            <summary>ICouchbaseClientDefinition.get_IgnoreRemoteCertificateNameMismatch()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.cnc::Couchbase#Configuration#Client#ICouchbaseClientDefinition#MaxServicePointIdleTime">
            <summary>ICouchbaseClientDefinition.get_MaxServicePointIdleTime()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.cnc::Couchbase#Configuration#Client#ICouchbaseClientDefinition#MaxViewRetries">
            <summary>ICouchbaseClientDefinition.get_MaxViewRetries()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.cnc::Couchbase#Configuration#Client#ICouchbaseClientDefinition#MgmtPort">
            <summary>ICouchbaseClientDefinition.get_MgmtPort()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.cnc::Couchbase#Configuration#Client#ICouchbaseClientDefinition#NodeAvailableCheckInterval">
            <summary>ICouchbaseClientDefinition.get_NodeAvailableCheckInterval()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.cnc::Couchbase#Configuration#Client#ICouchbaseClientDefinition#ObserveInterval">
            <summary>ICouchbaseClientDefinition.get_ObserveInterval()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.cnc::Couchbase#Configuration#Client#ICouchbaseClientDefinition#ObserveTimeout">
            <summary>ICouchbaseClientDefinition.get_ObserveTimeout()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.cnc::Couchbase#Configuration#Client#ICouchbaseClientDefinition#OperationLifespan">
            <summary>ICouchbaseClientDefinition.get_OperationLifespan()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.cnc::Couchbase#Configuration#Client#ICouchbaseClientDefinition#QueryFailedThreshold">
            <summary>ICouchbaseClientDefinition.get_QueryFailedThreshold()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.cnc::Couchbase#Configuration#Client#ICouchbaseClientDefinition#QueryRequestTimeout">
            <summary>ICouchbaseClientDefinition.get_QueryRequestTimeout()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.cnc::Couchbase#Configuration#Client#ICouchbaseClientDefinition#SearchRequestTimeout">
            <summary>ICouchbaseClientDefinition.get_SearchRequestTimeout()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.cnc::Couchbase#Configuration#Client#ICouchbaseClientDefinition#Serializer">
            <summary>ICouchbaseClientDefinition.get_Serializer()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.cnc::Couchbase#Configuration#Client#ICouchbaseClientDefinition#Servers">
            <summary>ICouchbaseClientDefinition.get_Servers()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.cnc::Couchbase#Configuration#Client#ICouchbaseClientDefinition#SslPort">
            <summary>ICouchbaseClientDefinition.get_SslPort()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.cnc::Couchbase#Configuration#Client#ICouchbaseClientDefinition#TcpKeepAliveInterval">
            <summary>ICouchbaseClientDefinition.get_TcpKeepAliveInterval()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.cnc::Couchbase#Configuration#Client#ICouchbaseClientDefinition#TcpKeepAliveTime">
            <summary>ICouchbaseClientDefinition.get_TcpKeepAliveTime()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.cnc::Couchbase#Configuration#Client#ICouchbaseClientDefinition#Transcoder">
            <summary>ICouchbaseClientDefinition.get_Transcoder()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.cnc::Couchbase#Configuration#Client#ICouchbaseClientDefinition#UseInterNetworkV6Addresses">
            <summary>ICouchbaseClientDefinition.get_UseInterNetworkV6Addresses()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.cnc::Couchbase#Configuration#Client#ICouchbaseClientDefinition#UseSsl">
            <summary>ICouchbaseClientDefinition.get_UseSsl()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.cnc::Couchbase#Configuration#Client#ICouchbaseClientDefinition#VBucketRetrySleepTime">
            <summary>ICouchbaseClientDefinition.get_VBucketRetrySleepTime()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.cnc::Couchbase#Configuration#Client#ICouchbaseClientDefinition#ViewHardTimeout">
            <summary>ICouchbaseClientDefinition.get_ViewHardTimeout()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Fakes.StubICouchbaseClientDefinition.cnc::Couchbase#Configuration#Client#ICouchbaseClientDefinition#ViewRequestTimeout">
            <summary>ICouchbaseClientDefinition.get_ViewRequestTimeout()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElement">
            <summary>Couchbase.Configuration.Client.Providers.BucketElement의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElement.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElement.#ctor(Couchbase.Configuration.Client.Providers.BucketElement)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElement.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElement.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElement.Bind(Couchbase.Configuration.Client.IBucketDefinition)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElement.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElement.ConnectionPoolCouchbaseConfigurationClientIBucketDefinitionget">
            <summary>BucketElement.Couchbase.Configuration.Client.IBucketDefinition.get_ConnectionPool()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElement.ConnectionPoolGet">
            <summary>BucketElement.get_ConnectionPool()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElement.ConnectionPoolSetConnectionPoolElement">
            <summary>BucketElement.set_ConnectionPool(ConnectionPoolElement value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElement.Constructor">
            <summary>BucketElement.BucketElement()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElement.NameGet">
            <summary>BucketElement.get_Name()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElement.NameSetString">
            <summary>BucketElement.set_Name(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElement.ObserveIntervalGet">
            <summary>BucketElement.get_ObserveInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElement.ObserveIntervalSetInt32">
            <summary>BucketElement.set_ObserveInterval(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElement.ObserveTimeoutGet">
            <summary>BucketElement.get_ObserveTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElement.ObserveTimeoutSetInt32">
            <summary>BucketElement.set_ObserveTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElement.OperationLifespanGet">
            <summary>BucketElement.get_OperationLifespan()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElement.OperationLifespanSetNullableOfUInt32">
            <summary>BucketElement.set_OperationLifespan(Nullable`1&lt;UInt32&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElement.PasswordGet">
            <summary>BucketElement.get_Password()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElement.PasswordSetString">
            <summary>BucketElement.set_Password(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElement.UseEnhancedDurabilityGet">
            <summary>BucketElement.get_UseEnhancedDurability()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElement.UseEnhancedDurabilitySetBoolean">
            <summary>BucketElement.set_UseEnhancedDurability(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElement.UseSslGet">
            <summary>BucketElement.get_UseSsl()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElement.UseSslSetBoolean">
            <summary>BucketElement.set_UseSsl(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElement.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElement.AllInstances.ConnectionPoolCouchbaseConfigurationClientIBucketDefinitionget">
            <summary>BucketElement.Couchbase.Configuration.Client.IBucketDefinition.get_ConnectionPool()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElement.AllInstances.ConnectionPoolGet">
            <summary>BucketElement.get_ConnectionPool()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElement.AllInstances.ConnectionPoolSetConnectionPoolElement">
            <summary>BucketElement.set_ConnectionPool(ConnectionPoolElement value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElement.AllInstances.NameGet">
            <summary>BucketElement.get_Name()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElement.AllInstances.NameSetString">
            <summary>BucketElement.set_Name(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElement.AllInstances.ObserveIntervalGet">
            <summary>BucketElement.get_ObserveInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElement.AllInstances.ObserveIntervalSetInt32">
            <summary>BucketElement.set_ObserveInterval(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElement.AllInstances.ObserveTimeoutGet">
            <summary>BucketElement.get_ObserveTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElement.AllInstances.ObserveTimeoutSetInt32">
            <summary>BucketElement.set_ObserveTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElement.AllInstances.OperationLifespanGet">
            <summary>BucketElement.get_OperationLifespan()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElement.AllInstances.OperationLifespanSetNullableOfUInt32">
            <summary>BucketElement.set_OperationLifespan(Nullable`1&lt;UInt32&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElement.AllInstances.PasswordGet">
            <summary>BucketElement.get_Password()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElement.AllInstances.PasswordSetString">
            <summary>BucketElement.set_Password(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElement.AllInstances.UseEnhancedDurabilityGet">
            <summary>BucketElement.get_UseEnhancedDurability()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElement.AllInstances.UseEnhancedDurabilitySetBoolean">
            <summary>BucketElement.set_UseEnhancedDurability(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElement.AllInstances.UseSslGet">
            <summary>BucketElement.get_UseSsl()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElement.AllInstances.UseSslSetBoolean">
            <summary>BucketElement.set_UseSsl(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElementCollection">
            <summary>Couchbase.Configuration.Client.Providers.BucketElementCollection의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElementCollection.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElementCollection.#ctor(Couchbase.Configuration.Client.Providers.BucketElementCollection)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElementCollection.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElementCollection.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElementCollection.Bind(System.Collections.ICollection)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElementCollection.Bind(System.Collections.IEnumerable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElementCollection.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElementCollection.Constructor">
            <summary>BucketElementCollection.BucketElementCollection()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElementCollection.CreateNewElement">
            <summary>BucketElementCollection.CreateNewElement()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElementCollection.GetElementKeyConfigurationElement">
            <summary>BucketElementCollection.GetElementKey(ConfigurationElement element)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElementCollection.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElementCollection.AllInstances.CreateNewElement">
            <summary>BucketElementCollection.CreateNewElement()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimBucketElementCollection.AllInstances.GetElementKeyConfigurationElement">
            <summary>BucketElementCollection.GetElementKey(ConfigurationElement element)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement">
            <summary>Couchbase.Configuration.Client.Providers.ConnectionPoolElement의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.#ctor(Couchbase.Configuration.Client.Providers.ConnectionPoolElement)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.Bind(Couchbase.Configuration.Client.IConnectionPoolDefinition)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.BufferSizeGet">
            <summary>ConnectionPoolElement.get_BufferSize()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.BufferSizeSetInt32">
            <summary>ConnectionPoolElement.set_BufferSize(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.CloseAttemptIntervalGet">
            <summary>ConnectionPoolElement.get_CloseAttemptInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.CloseAttemptIntervalSetUInt32">
            <summary>ConnectionPoolElement.set_CloseAttemptInterval(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.ConnectTimeoutGet">
            <summary>ConnectionPoolElement.get_ConnectTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.ConnectTimeoutSetInt32">
            <summary>ConnectionPoolElement.set_ConnectTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.Constructor">
            <summary>ConnectionPoolElement.ConnectionPoolElement()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.EnableTcpKeepAlivesGet">
            <summary>ConnectionPoolElement.get_EnableTcpKeepAlives()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.EnableTcpKeepAlivesSetBoolean">
            <summary>ConnectionPoolElement.set_EnableTcpKeepAlives(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.IsReadOnly">
            <summary>ConnectionPoolElement.IsReadOnly()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.MaxCloseAttemptsGet">
            <summary>ConnectionPoolElement.get_MaxCloseAttempts()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.MaxCloseAttemptsSetInt32">
            <summary>ConnectionPoolElement.set_MaxCloseAttempts(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.MaxSizeGet">
            <summary>ConnectionPoolElement.get_MaxSize()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.MaxSizeSetInt32">
            <summary>ConnectionPoolElement.set_MaxSize(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.MinSizeGet">
            <summary>ConnectionPoolElement.get_MinSize()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.MinSizeSetInt32">
            <summary>ConnectionPoolElement.set_MinSize(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.NameGet">
            <summary>ConnectionPoolElement.get_Name()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.NameSetString">
            <summary>ConnectionPoolElement.set_Name(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.SendTimeoutGet">
            <summary>ConnectionPoolElement.get_SendTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.SendTimeoutSetInt32">
            <summary>ConnectionPoolElement.set_SendTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.ShutdownTimeoutGet">
            <summary>ConnectionPoolElement.get_ShutdownTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.ShutdownTimeoutSetInt32">
            <summary>ConnectionPoolElement.set_ShutdownTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.TcpKeepAliveIntervalGet">
            <summary>ConnectionPoolElement.get_TcpKeepAliveInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.TcpKeepAliveIntervalSetUInt32">
            <summary>ConnectionPoolElement.set_TcpKeepAliveInterval(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.TcpKeepAliveTimeGet">
            <summary>ConnectionPoolElement.get_TcpKeepAliveTime()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.TcpKeepAliveTimeSetUInt32">
            <summary>ConnectionPoolElement.set_TcpKeepAliveTime(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.TypeGet">
            <summary>ConnectionPoolElement.get_Type()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.TypeSetString">
            <summary>ConnectionPoolElement.set_Type(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.UseSslGet">
            <summary>ConnectionPoolElement.get_UseSsl()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.UseSslSetBoolean">
            <summary>ConnectionPoolElement.set_UseSsl(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.WaitTimeoutGet">
            <summary>ConnectionPoolElement.get_WaitTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.WaitTimeoutSetInt32">
            <summary>ConnectionPoolElement.set_WaitTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.AllInstances.BufferSizeGet">
            <summary>ConnectionPoolElement.get_BufferSize()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.AllInstances.BufferSizeSetInt32">
            <summary>ConnectionPoolElement.set_BufferSize(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.AllInstances.CloseAttemptIntervalGet">
            <summary>ConnectionPoolElement.get_CloseAttemptInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.AllInstances.CloseAttemptIntervalSetUInt32">
            <summary>ConnectionPoolElement.set_CloseAttemptInterval(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.AllInstances.ConnectTimeoutGet">
            <summary>ConnectionPoolElement.get_ConnectTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.AllInstances.ConnectTimeoutSetInt32">
            <summary>ConnectionPoolElement.set_ConnectTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.AllInstances.EnableTcpKeepAlivesGet">
            <summary>ConnectionPoolElement.get_EnableTcpKeepAlives()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.AllInstances.EnableTcpKeepAlivesSetBoolean">
            <summary>ConnectionPoolElement.set_EnableTcpKeepAlives(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.AllInstances.IsReadOnly">
            <summary>ConnectionPoolElement.IsReadOnly()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.AllInstances.MaxCloseAttemptsGet">
            <summary>ConnectionPoolElement.get_MaxCloseAttempts()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.AllInstances.MaxCloseAttemptsSetInt32">
            <summary>ConnectionPoolElement.set_MaxCloseAttempts(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.AllInstances.MaxSizeGet">
            <summary>ConnectionPoolElement.get_MaxSize()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.AllInstances.MaxSizeSetInt32">
            <summary>ConnectionPoolElement.set_MaxSize(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.AllInstances.MinSizeGet">
            <summary>ConnectionPoolElement.get_MinSize()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.AllInstances.MinSizeSetInt32">
            <summary>ConnectionPoolElement.set_MinSize(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.AllInstances.NameGet">
            <summary>ConnectionPoolElement.get_Name()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.AllInstances.NameSetString">
            <summary>ConnectionPoolElement.set_Name(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.AllInstances.SendTimeoutGet">
            <summary>ConnectionPoolElement.get_SendTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.AllInstances.SendTimeoutSetInt32">
            <summary>ConnectionPoolElement.set_SendTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.AllInstances.ShutdownTimeoutGet">
            <summary>ConnectionPoolElement.get_ShutdownTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.AllInstances.ShutdownTimeoutSetInt32">
            <summary>ConnectionPoolElement.set_ShutdownTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.AllInstances.TcpKeepAliveIntervalGet">
            <summary>ConnectionPoolElement.get_TcpKeepAliveInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.AllInstances.TcpKeepAliveIntervalSetUInt32">
            <summary>ConnectionPoolElement.set_TcpKeepAliveInterval(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.AllInstances.TcpKeepAliveTimeGet">
            <summary>ConnectionPoolElement.get_TcpKeepAliveTime()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.AllInstances.TcpKeepAliveTimeSetUInt32">
            <summary>ConnectionPoolElement.set_TcpKeepAliveTime(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.AllInstances.TypeGet">
            <summary>ConnectionPoolElement.get_Type()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.AllInstances.TypeSetString">
            <summary>ConnectionPoolElement.set_Type(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.AllInstances.UseSslGet">
            <summary>ConnectionPoolElement.get_UseSsl()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.AllInstances.UseSslSetBoolean">
            <summary>ConnectionPoolElement.set_UseSsl(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.AllInstances.WaitTimeoutGet">
            <summary>ConnectionPoolElement.get_WaitTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConnectionPoolElement.AllInstances.WaitTimeoutSetInt32">
            <summary>ConnectionPoolElement.set_WaitTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Client.Providers.Fakes.ShimConverterElement">
            <summary>Couchbase.Configuration.Client.Providers.ConverterElement의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimConverterElement.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimConverterElement.#ctor(Couchbase.Configuration.Client.Providers.ConverterElement)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimConverterElement.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimConverterElement.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConverterElement.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConverterElement.Constructor">
            <summary>ConverterElement.ConverterElement()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConverterElement.NameGet">
            <summary>ConverterElement.get_Name()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConverterElement.NameSetString">
            <summary>ConverterElement.set_Name(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConverterElement.TypeGet">
            <summary>ConverterElement.get_Type()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConverterElement.TypeSetString">
            <summary>ConverterElement.set_Type(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Client.Providers.Fakes.ShimConverterElement.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConverterElement.AllInstances.NameGet">
            <summary>ConverterElement.get_Name()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConverterElement.AllInstances.NameSetString">
            <summary>ConverterElement.set_Name(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConverterElement.AllInstances.TypeGet">
            <summary>ConverterElement.get_Type()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimConverterElement.AllInstances.TypeSetString">
            <summary>ConverterElement.set_Type(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection">
            <summary>Couchbase.Configuration.Client.Providers.CouchbaseClientSection의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.#ctor(Couchbase.Configuration.Client.Providers.CouchbaseClientSection)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.Bind(Couchbase.Configuration.Client.ICouchbaseClientDefinition)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.ApiPortGet">
            <summary>CouchbaseClientSection.get_ApiPort()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.ApiPortSetInt32">
            <summary>CouchbaseClientSection.set_ApiPort(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.BucketsCouchbaseConfigurationClientICouchbaseClientDefinitionget">
            <summary>CouchbaseClientSection.Couchbase.Configuration.Client.ICouchbaseClientDefinition.get_Buckets()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.BucketsGet">
            <summary>CouchbaseClientSection.get_Buckets()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.BucketsSetBucketElementCollection">
            <summary>CouchbaseClientSection.set_Buckets(BucketElementCollection value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.ConnectionPoolCouchbaseConfigurationClientICouchbaseClientDefinitionget">
            <summary>CouchbaseClientSection.Couchbase.Configuration.Client.ICouchbaseClientDefinition.get_ConnectionPool()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.ConnectionPoolGet">
            <summary>CouchbaseClientSection.get_ConnectionPool()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.ConnectionPoolSetConnectionPoolElement">
            <summary>CouchbaseClientSection.set_ConnectionPool(ConnectionPoolElement value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.Constructor">
            <summary>CouchbaseClientSection.CouchbaseClientSection()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.ConverterCouchbaseConfigurationClientICouchbaseClientDefinitionget">
            <summary>CouchbaseClientSection.Couchbase.Configuration.Client.ICouchbaseClientDefinition.get_Converter()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.ConverterGet">
            <summary>CouchbaseClientSection.get_Converter()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.ConverterSetConverterElement">
            <summary>CouchbaseClientSection.set_Converter(ConverterElement value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.DefaultConnectionLimitGet">
            <summary>CouchbaseClientSection.get_DefaultConnectionLimit()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.DefaultConnectionLimitSetInt32">
            <summary>CouchbaseClientSection.set_DefaultConnectionLimit(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.DirectPortGet">
            <summary>CouchbaseClientSection.get_DirectPort()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.DirectPortSetInt32">
            <summary>CouchbaseClientSection.set_DirectPort(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.EnableConfigHeartBeatGet">
            <summary>CouchbaseClientSection.get_EnableConfigHeartBeat()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.EnableConfigHeartBeatSetBoolean">
            <summary>CouchbaseClientSection.set_EnableConfigHeartBeat(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.EnableOperationTimingGet">
            <summary>CouchbaseClientSection.get_EnableOperationTiming()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.EnableOperationTimingSetBoolean">
            <summary>CouchbaseClientSection.set_EnableOperationTiming(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.EnableQueryTimingGet">
            <summary>CouchbaseClientSection.get_EnableQueryTiming()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.EnableQueryTimingSetBoolean">
            <summary>CouchbaseClientSection.set_EnableQueryTiming(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.EnableTcpKeepAlivesGet">
            <summary>CouchbaseClientSection.get_EnableTcpKeepAlives()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.EnableTcpKeepAlivesSetBoolean">
            <summary>CouchbaseClientSection.set_EnableTcpKeepAlives(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.Expect100ContinueGet">
            <summary>CouchbaseClientSection.get_Expect100Continue()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.Expect100ContinueSetBoolean">
            <summary>CouchbaseClientSection.set_Expect100Continue(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.HeartbeatConfigIntervalGet">
            <summary>CouchbaseClientSection.get_HeartbeatConfigInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.HeartbeatConfigIntervalSetInt32">
            <summary>CouchbaseClientSection.set_HeartbeatConfigInterval(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.HttpsApiPortGet">
            <summary>CouchbaseClientSection.get_HttpsApiPort()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.HttpsApiPortSetInt32">
            <summary>CouchbaseClientSection.set_HttpsApiPort(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.HttpsMgmtPortGet">
            <summary>CouchbaseClientSection.get_HttpsMgmtPort()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.HttpsMgmtPortSetInt32">
            <summary>CouchbaseClientSection.set_HttpsMgmtPort(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.IOErrorCheckIntervalGet">
            <summary>CouchbaseClientSection.get_IOErrorCheckInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.IOErrorCheckIntervalSetUInt32">
            <summary>CouchbaseClientSection.set_IOErrorCheckInterval(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.IOErrorThresholdGet">
            <summary>CouchbaseClientSection.get_IOErrorThreshold()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.IOErrorThresholdSetUInt32">
            <summary>CouchbaseClientSection.set_IOErrorThreshold(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.IOServiceCouchbaseConfigurationClientICouchbaseClientDefinitionget">
            <summary>CouchbaseClientSection.Couchbase.Configuration.Client.ICouchbaseClientDefinition.get_IOService()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.IOServiceGet">
            <summary>CouchbaseClientSection.get_IOService()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.IOServiceSetIOServiceElement">
            <summary>CouchbaseClientSection.set_IOService(IOServiceElement value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.IgnoreRemoteCertificateNameMismatchGet">
            <summary>CouchbaseClientSection.get_IgnoreRemoteCertificateNameMismatch()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.IgnoreRemoteCertificateNameMismatchSetBoolean">
            <summary>CouchbaseClientSection.set_IgnoreRemoteCertificateNameMismatch(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.MaxServicePointIdleTimeGet">
            <summary>CouchbaseClientSection.get_MaxServicePointIdleTime()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.MaxServicePointIdleTimeSetInt32">
            <summary>CouchbaseClientSection.set_MaxServicePointIdleTime(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.MaxViewRetriesGet">
            <summary>CouchbaseClientSection.get_MaxViewRetries()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.MaxViewRetriesSetInt32">
            <summary>CouchbaseClientSection.set_MaxViewRetries(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.MgmtPortGet">
            <summary>CouchbaseClientSection.get_MgmtPort()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.MgmtPortSetInt32">
            <summary>CouchbaseClientSection.set_MgmtPort(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.NodeAvailableCheckIntervalGet">
            <summary>CouchbaseClientSection.get_NodeAvailableCheckInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.NodeAvailableCheckIntervalSetUInt32">
            <summary>CouchbaseClientSection.set_NodeAvailableCheckInterval(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.ObserveIntervalGet">
            <summary>CouchbaseClientSection.get_ObserveInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.ObserveIntervalSetInt32">
            <summary>CouchbaseClientSection.set_ObserveInterval(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.ObserveTimeoutGet">
            <summary>CouchbaseClientSection.get_ObserveTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.ObserveTimeoutSetInt32">
            <summary>CouchbaseClientSection.set_ObserveTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.OperationLifespanGet">
            <summary>CouchbaseClientSection.get_OperationLifespan()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.OperationLifespanSetUInt32">
            <summary>CouchbaseClientSection.set_OperationLifespan(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.QueryFailedThresholdGet">
            <summary>CouchbaseClientSection.get_QueryFailedThreshold()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.QueryFailedThresholdSetInt32">
            <summary>CouchbaseClientSection.set_QueryFailedThreshold(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.QueryRequestTimeoutGet">
            <summary>CouchbaseClientSection.get_QueryRequestTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.QueryRequestTimeoutSetUInt32">
            <summary>CouchbaseClientSection.set_QueryRequestTimeout(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.SearchRequestTimeoutGet">
            <summary>CouchbaseClientSection.get_SearchRequestTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.SearchRequestTimeoutSetUInt32">
            <summary>CouchbaseClientSection.set_SearchRequestTimeout(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.SerializerCouchbaseConfigurationClientICouchbaseClientDefinitionget">
            <summary>CouchbaseClientSection.Couchbase.Configuration.Client.ICouchbaseClientDefinition.get_Serializer()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.SerializerGet">
            <summary>CouchbaseClientSection.get_Serializer()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.SerializerSetSerializerElement">
            <summary>CouchbaseClientSection.set_Serializer(SerializerElement value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.ServersCouchbaseConfigurationClientICouchbaseClientDefinitionget">
            <summary>CouchbaseClientSection.Couchbase.Configuration.Client.ICouchbaseClientDefinition.get_Servers()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.ServersGet">
            <summary>CouchbaseClientSection.get_Servers()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.ServersSetUriElementCollection">
            <summary>CouchbaseClientSection.set_Servers(UriElementCollection value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.SslPortGet">
            <summary>CouchbaseClientSection.get_SslPort()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.SslPortSetInt32">
            <summary>CouchbaseClientSection.set_SslPort(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.TcpKeepAliveIntervalGet">
            <summary>CouchbaseClientSection.get_TcpKeepAliveInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.TcpKeepAliveIntervalSetUInt32">
            <summary>CouchbaseClientSection.set_TcpKeepAliveInterval(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.TcpKeepAliveTimeGet">
            <summary>CouchbaseClientSection.get_TcpKeepAliveTime()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.TcpKeepAliveTimeSetUInt32">
            <summary>CouchbaseClientSection.set_TcpKeepAliveTime(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.TranscoderCouchbaseConfigurationClientICouchbaseClientDefinitionget">
            <summary>CouchbaseClientSection.Couchbase.Configuration.Client.ICouchbaseClientDefinition.get_Transcoder()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.TranscoderGet">
            <summary>CouchbaseClientSection.get_Transcoder()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.TranscoderSetTranscoderElement">
            <summary>CouchbaseClientSection.set_Transcoder(TranscoderElement value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.UseInterNetworkV6AddressesGet">
            <summary>CouchbaseClientSection.get_UseInterNetworkV6Addresses()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.UseInterNetworkV6AddressesSetBoolean">
            <summary>CouchbaseClientSection.set_UseInterNetworkV6Addresses(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.UseSslGet">
            <summary>CouchbaseClientSection.get_UseSsl()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.UseSslSetBoolean">
            <summary>CouchbaseClientSection.set_UseSsl(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.VBucketRetrySleepTimeGet">
            <summary>CouchbaseClientSection.get_VBucketRetrySleepTime()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.VBucketRetrySleepTimeSetUInt32">
            <summary>CouchbaseClientSection.set_VBucketRetrySleepTime(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.ViewHardTimeoutGet">
            <summary>CouchbaseClientSection.get_ViewHardTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.ViewHardTimeoutSetInt32">
            <summary>CouchbaseClientSection.set_ViewHardTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.ViewRequestTimeoutGet">
            <summary>CouchbaseClientSection.get_ViewRequestTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.ViewRequestTimeoutSetInt32">
            <summary>CouchbaseClientSection.set_ViewRequestTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.ApiPortGet">
            <summary>CouchbaseClientSection.get_ApiPort()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.ApiPortSetInt32">
            <summary>CouchbaseClientSection.set_ApiPort(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.BucketsCouchbaseConfigurationClientICouchbaseClientDefinitionget">
            <summary>CouchbaseClientSection.Couchbase.Configuration.Client.ICouchbaseClientDefinition.get_Buckets()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.BucketsGet">
            <summary>CouchbaseClientSection.get_Buckets()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.BucketsSetBucketElementCollection">
            <summary>CouchbaseClientSection.set_Buckets(BucketElementCollection value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.ConnectionPoolCouchbaseConfigurationClientICouchbaseClientDefinitionget">
            <summary>CouchbaseClientSection.Couchbase.Configuration.Client.ICouchbaseClientDefinition.get_ConnectionPool()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.ConnectionPoolGet">
            <summary>CouchbaseClientSection.get_ConnectionPool()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.ConnectionPoolSetConnectionPoolElement">
            <summary>CouchbaseClientSection.set_ConnectionPool(ConnectionPoolElement value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.ConverterCouchbaseConfigurationClientICouchbaseClientDefinitionget">
            <summary>CouchbaseClientSection.Couchbase.Configuration.Client.ICouchbaseClientDefinition.get_Converter()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.ConverterGet">
            <summary>CouchbaseClientSection.get_Converter()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.ConverterSetConverterElement">
            <summary>CouchbaseClientSection.set_Converter(ConverterElement value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.DefaultConnectionLimitGet">
            <summary>CouchbaseClientSection.get_DefaultConnectionLimit()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.DefaultConnectionLimitSetInt32">
            <summary>CouchbaseClientSection.set_DefaultConnectionLimit(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.DirectPortGet">
            <summary>CouchbaseClientSection.get_DirectPort()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.DirectPortSetInt32">
            <summary>CouchbaseClientSection.set_DirectPort(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.EnableConfigHeartBeatGet">
            <summary>CouchbaseClientSection.get_EnableConfigHeartBeat()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.EnableConfigHeartBeatSetBoolean">
            <summary>CouchbaseClientSection.set_EnableConfigHeartBeat(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.EnableOperationTimingGet">
            <summary>CouchbaseClientSection.get_EnableOperationTiming()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.EnableOperationTimingSetBoolean">
            <summary>CouchbaseClientSection.set_EnableOperationTiming(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.EnableQueryTimingGet">
            <summary>CouchbaseClientSection.get_EnableQueryTiming()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.EnableQueryTimingSetBoolean">
            <summary>CouchbaseClientSection.set_EnableQueryTiming(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.EnableTcpKeepAlivesGet">
            <summary>CouchbaseClientSection.get_EnableTcpKeepAlives()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.EnableTcpKeepAlivesSetBoolean">
            <summary>CouchbaseClientSection.set_EnableTcpKeepAlives(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.Expect100ContinueGet">
            <summary>CouchbaseClientSection.get_Expect100Continue()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.Expect100ContinueSetBoolean">
            <summary>CouchbaseClientSection.set_Expect100Continue(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.HeartbeatConfigIntervalGet">
            <summary>CouchbaseClientSection.get_HeartbeatConfigInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.HeartbeatConfigIntervalSetInt32">
            <summary>CouchbaseClientSection.set_HeartbeatConfigInterval(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.HttpsApiPortGet">
            <summary>CouchbaseClientSection.get_HttpsApiPort()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.HttpsApiPortSetInt32">
            <summary>CouchbaseClientSection.set_HttpsApiPort(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.HttpsMgmtPortGet">
            <summary>CouchbaseClientSection.get_HttpsMgmtPort()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.HttpsMgmtPortSetInt32">
            <summary>CouchbaseClientSection.set_HttpsMgmtPort(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.IOErrorCheckIntervalGet">
            <summary>CouchbaseClientSection.get_IOErrorCheckInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.IOErrorCheckIntervalSetUInt32">
            <summary>CouchbaseClientSection.set_IOErrorCheckInterval(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.IOErrorThresholdGet">
            <summary>CouchbaseClientSection.get_IOErrorThreshold()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.IOErrorThresholdSetUInt32">
            <summary>CouchbaseClientSection.set_IOErrorThreshold(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.IOServiceCouchbaseConfigurationClientICouchbaseClientDefinitionget">
            <summary>CouchbaseClientSection.Couchbase.Configuration.Client.ICouchbaseClientDefinition.get_IOService()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.IOServiceGet">
            <summary>CouchbaseClientSection.get_IOService()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.IOServiceSetIOServiceElement">
            <summary>CouchbaseClientSection.set_IOService(IOServiceElement value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.IgnoreRemoteCertificateNameMismatchGet">
            <summary>CouchbaseClientSection.get_IgnoreRemoteCertificateNameMismatch()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.IgnoreRemoteCertificateNameMismatchSetBoolean">
            <summary>CouchbaseClientSection.set_IgnoreRemoteCertificateNameMismatch(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.MaxServicePointIdleTimeGet">
            <summary>CouchbaseClientSection.get_MaxServicePointIdleTime()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.MaxServicePointIdleTimeSetInt32">
            <summary>CouchbaseClientSection.set_MaxServicePointIdleTime(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.MaxViewRetriesGet">
            <summary>CouchbaseClientSection.get_MaxViewRetries()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.MaxViewRetriesSetInt32">
            <summary>CouchbaseClientSection.set_MaxViewRetries(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.MgmtPortGet">
            <summary>CouchbaseClientSection.get_MgmtPort()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.MgmtPortSetInt32">
            <summary>CouchbaseClientSection.set_MgmtPort(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.NodeAvailableCheckIntervalGet">
            <summary>CouchbaseClientSection.get_NodeAvailableCheckInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.NodeAvailableCheckIntervalSetUInt32">
            <summary>CouchbaseClientSection.set_NodeAvailableCheckInterval(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.ObserveIntervalGet">
            <summary>CouchbaseClientSection.get_ObserveInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.ObserveIntervalSetInt32">
            <summary>CouchbaseClientSection.set_ObserveInterval(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.ObserveTimeoutGet">
            <summary>CouchbaseClientSection.get_ObserveTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.ObserveTimeoutSetInt32">
            <summary>CouchbaseClientSection.set_ObserveTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.OperationLifespanGet">
            <summary>CouchbaseClientSection.get_OperationLifespan()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.OperationLifespanSetUInt32">
            <summary>CouchbaseClientSection.set_OperationLifespan(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.QueryFailedThresholdGet">
            <summary>CouchbaseClientSection.get_QueryFailedThreshold()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.QueryFailedThresholdSetInt32">
            <summary>CouchbaseClientSection.set_QueryFailedThreshold(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.QueryRequestTimeoutGet">
            <summary>CouchbaseClientSection.get_QueryRequestTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.QueryRequestTimeoutSetUInt32">
            <summary>CouchbaseClientSection.set_QueryRequestTimeout(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.SearchRequestTimeoutGet">
            <summary>CouchbaseClientSection.get_SearchRequestTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.SearchRequestTimeoutSetUInt32">
            <summary>CouchbaseClientSection.set_SearchRequestTimeout(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.SerializerCouchbaseConfigurationClientICouchbaseClientDefinitionget">
            <summary>CouchbaseClientSection.Couchbase.Configuration.Client.ICouchbaseClientDefinition.get_Serializer()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.SerializerGet">
            <summary>CouchbaseClientSection.get_Serializer()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.SerializerSetSerializerElement">
            <summary>CouchbaseClientSection.set_Serializer(SerializerElement value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.ServersCouchbaseConfigurationClientICouchbaseClientDefinitionget">
            <summary>CouchbaseClientSection.Couchbase.Configuration.Client.ICouchbaseClientDefinition.get_Servers()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.ServersGet">
            <summary>CouchbaseClientSection.get_Servers()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.ServersSetUriElementCollection">
            <summary>CouchbaseClientSection.set_Servers(UriElementCollection value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.SslPortGet">
            <summary>CouchbaseClientSection.get_SslPort()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.SslPortSetInt32">
            <summary>CouchbaseClientSection.set_SslPort(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.TcpKeepAliveIntervalGet">
            <summary>CouchbaseClientSection.get_TcpKeepAliveInterval()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.TcpKeepAliveIntervalSetUInt32">
            <summary>CouchbaseClientSection.set_TcpKeepAliveInterval(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.TcpKeepAliveTimeGet">
            <summary>CouchbaseClientSection.get_TcpKeepAliveTime()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.TcpKeepAliveTimeSetUInt32">
            <summary>CouchbaseClientSection.set_TcpKeepAliveTime(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.TranscoderCouchbaseConfigurationClientICouchbaseClientDefinitionget">
            <summary>CouchbaseClientSection.Couchbase.Configuration.Client.ICouchbaseClientDefinition.get_Transcoder()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.TranscoderGet">
            <summary>CouchbaseClientSection.get_Transcoder()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.TranscoderSetTranscoderElement">
            <summary>CouchbaseClientSection.set_Transcoder(TranscoderElement value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.UseInterNetworkV6AddressesGet">
            <summary>CouchbaseClientSection.get_UseInterNetworkV6Addresses()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.UseInterNetworkV6AddressesSetBoolean">
            <summary>CouchbaseClientSection.set_UseInterNetworkV6Addresses(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.UseSslGet">
            <summary>CouchbaseClientSection.get_UseSsl()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.UseSslSetBoolean">
            <summary>CouchbaseClientSection.set_UseSsl(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.VBucketRetrySleepTimeGet">
            <summary>CouchbaseClientSection.get_VBucketRetrySleepTime()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.VBucketRetrySleepTimeSetUInt32">
            <summary>CouchbaseClientSection.set_VBucketRetrySleepTime(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.ViewHardTimeoutGet">
            <summary>CouchbaseClientSection.get_ViewHardTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.ViewHardTimeoutSetInt32">
            <summary>CouchbaseClientSection.set_ViewHardTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.ViewRequestTimeoutGet">
            <summary>CouchbaseClientSection.get_ViewRequestTimeout()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimCouchbaseClientSection.AllInstances.ViewRequestTimeoutSetInt32">
            <summary>CouchbaseClientSection.set_ViewRequestTimeout(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Client.Providers.Fakes.ShimIOServiceElement">
            <summary>Couchbase.Configuration.Client.Providers.IOServiceElement의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimIOServiceElement.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimIOServiceElement.#ctor(Couchbase.Configuration.Client.Providers.IOServiceElement)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimIOServiceElement.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimIOServiceElement.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimIOServiceElement.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimIOServiceElement.Constructor">
            <summary>IOServiceElement.IOServiceElement()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimIOServiceElement.NameGet">
            <summary>IOServiceElement.get_Name()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimIOServiceElement.NameSetString">
            <summary>IOServiceElement.set_Name(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimIOServiceElement.TypeGet">
            <summary>IOServiceElement.get_Type()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimIOServiceElement.TypeSetString">
            <summary>IOServiceElement.set_Type(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Client.Providers.Fakes.ShimIOServiceElement.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimIOServiceElement.AllInstances.NameGet">
            <summary>IOServiceElement.get_Name()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimIOServiceElement.AllInstances.NameSetString">
            <summary>IOServiceElement.set_Name(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimIOServiceElement.AllInstances.TypeGet">
            <summary>IOServiceElement.get_Type()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimIOServiceElement.AllInstances.TypeSetString">
            <summary>IOServiceElement.set_Type(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Client.Providers.Fakes.ShimSerializerElement">
            <summary>Couchbase.Configuration.Client.Providers.SerializerElement의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimSerializerElement.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimSerializerElement.#ctor(Couchbase.Configuration.Client.Providers.SerializerElement)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimSerializerElement.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimSerializerElement.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimSerializerElement.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimSerializerElement.Constructor">
            <summary>SerializerElement.SerializerElement()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimSerializerElement.NameGet">
            <summary>SerializerElement.get_Name()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimSerializerElement.NameSetString">
            <summary>SerializerElement.set_Name(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimSerializerElement.TypeGet">
            <summary>SerializerElement.get_Type()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimSerializerElement.TypeSetString">
            <summary>SerializerElement.set_Type(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Client.Providers.Fakes.ShimSerializerElement.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimSerializerElement.AllInstances.NameGet">
            <summary>SerializerElement.get_Name()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimSerializerElement.AllInstances.NameSetString">
            <summary>SerializerElement.set_Name(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimSerializerElement.AllInstances.TypeGet">
            <summary>SerializerElement.get_Type()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimSerializerElement.AllInstances.TypeSetString">
            <summary>SerializerElement.set_Type(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Client.Providers.Fakes.ShimTranscoderElement">
            <summary>Couchbase.Configuration.Client.Providers.TranscoderElement의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimTranscoderElement.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimTranscoderElement.#ctor(Couchbase.Configuration.Client.Providers.TranscoderElement)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimTranscoderElement.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimTranscoderElement.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimTranscoderElement.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimTranscoderElement.Constructor">
            <summary>TranscoderElement.TranscoderElement()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimTranscoderElement.NameGet">
            <summary>TranscoderElement.get_Name()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimTranscoderElement.NameSetString">
            <summary>TranscoderElement.set_Name(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimTranscoderElement.TypeGet">
            <summary>TranscoderElement.get_Type()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimTranscoderElement.TypeSetString">
            <summary>TranscoderElement.set_Type(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Client.Providers.Fakes.ShimTranscoderElement.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimTranscoderElement.AllInstances.NameGet">
            <summary>TranscoderElement.get_Name()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimTranscoderElement.AllInstances.NameSetString">
            <summary>TranscoderElement.set_Name(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimTranscoderElement.AllInstances.TypeGet">
            <summary>TranscoderElement.get_Type()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimTranscoderElement.AllInstances.TypeSetString">
            <summary>TranscoderElement.set_Type(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Client.Providers.Fakes.ShimUriElement">
            <summary>Couchbase.Configuration.Client.Providers.UriElement의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimUriElement.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimUriElement.#ctor(Couchbase.Configuration.Client.Providers.UriElement)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimUriElement.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimUriElement.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimUriElement.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimUriElement.Constructor">
            <summary>UriElement.UriElement()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimUriElement.UriGet">
            <summary>UriElement.get_Uri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimUriElement.UriSetUri">
            <summary>UriElement.set_Uri(Uri value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Client.Providers.Fakes.ShimUriElement.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimUriElement.AllInstances.UriGet">
            <summary>UriElement.get_Uri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimUriElement.AllInstances.UriSetUri">
            <summary>UriElement.set_Uri(Uri value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Client.Providers.Fakes.ShimUriElementCollection">
            <summary>Couchbase.Configuration.Client.Providers.UriElementCollection의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimUriElementCollection.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimUriElementCollection.#ctor(Couchbase.Configuration.Client.Providers.UriElementCollection)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimUriElementCollection.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimUriElementCollection.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimUriElementCollection.Bind(System.Collections.ICollection)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.ShimUriElementCollection.Bind(System.Collections.IEnumerable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimUriElementCollection.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimUriElementCollection.Constructor">
            <summary>UriElementCollection.UriElementCollection()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimUriElementCollection.CreateNewElement">
            <summary>UriElementCollection.CreateNewElement()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimUriElementCollection.GetElementKeyConfigurationElement">
            <summary>UriElementCollection.GetElementKey(ConfigurationElement element)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Client.Providers.Fakes.ShimUriElementCollection.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimUriElementCollection.AllInstances.CreateNewElement">
            <summary>UriElementCollection.CreateNewElement()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.ShimUriElementCollection.AllInstances.GetElementKeyConfigurationElement">
            <summary>UriElementCollection.GetElementKey(ConfigurationElement element)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement">
            <summary>Couchbase.Configuration.Client.Providers.ConnectionPoolElement의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.DeserializeElementXmlReaderBoolean">
            <summary>ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.ElementPropertyGet">
            <summary>ConfigurationElement.get_ElementProperty()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.Equals(System.Object)">
            <summary>ConfigurationElement.Equals(Object compareTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.EqualsObject">
            <summary>ConfigurationElement.Equals(Object compareTo)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.GetHashCode">
            <summary>ConfigurationElement.GetHashCode()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.GetHashCode01">
            <summary>ConfigurationElement.GetHashCode()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.GetTransformedAssemblyString(System.String)">
            <summary>ConfigurationElement.GetTransformedAssemblyString(String assemblyName)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.GetTransformedAssemblyStringString">
            <summary>ConfigurationElement.GetTransformedAssemblyString(String assemblyName)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.GetTransformedTypeString(System.String)">
            <summary>ConfigurationElement.GetTransformedTypeString(String typeName)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.GetTransformedTypeStringString">
            <summary>ConfigurationElement.GetTransformedTypeString(String typeName)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.Init">
            <summary>ConfigurationElement.Init()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.Init01">
            <summary>ConfigurationElement.Init()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.InitializeDefault">
            <summary>ConfigurationElement.InitializeDefault()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.InitializeDefault01">
            <summary>ConfigurationElement.InitializeDefault()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.InitializeStub">
            <summary>type StubConnectionPoolElement의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.IsModified">
            <summary>ConfigurationElement.IsModified()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.IsModified01">
            <summary>ConfigurationElement.IsModified()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.IsReadOnly">
            <summary>ConnectionPoolElement.IsReadOnly()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.IsReadOnly01">
            <summary>ConnectionPoolElement.IsReadOnly()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.ListErrors(System.Collections.IList)">
            <summary>ConfigurationElement.ListErrors(IList errorList)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.ListErrorsIList">
            <summary>ConfigurationElement.ListErrors(IList errorList)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.OnDeserializeUnrecognizedAttributeStringString">
            <summary>ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.OnRequiredPropertyNotFound(System.String)">
            <summary>ConfigurationElement.OnRequiredPropertyNotFound(String name)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.OnRequiredPropertyNotFoundString">
            <summary>ConfigurationElement.OnRequiredPropertyNotFound(String name)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.PostDeserialize">
            <summary>ConfigurationElement.PostDeserialize()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.PostDeserialize01">
            <summary>ConfigurationElement.PostDeserialize()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.PreSerialize(System.Xml.XmlWriter)">
            <summary>ConfigurationElement.PreSerialize(XmlWriter writer)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.PreSerializeXmlWriter">
            <summary>ConfigurationElement.PreSerialize(XmlWriter writer)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.PropertiesGet">
            <summary>ConfigurationElement.get_Properties()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.Reset(System.Configuration.ConfigurationElement)">
            <summary>ConfigurationElement.Reset(ConfigurationElement parentElement)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.ResetConfigurationElement">
            <summary>ConfigurationElement.Reset(ConfigurationElement parentElement)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.ResetModified">
            <summary>ConfigurationElement.ResetModified()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.ResetModified01">
            <summary>ConfigurationElement.ResetModified()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.SerializeElementXmlWriterBoolean">
            <summary>ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.SerializeToXmlElementXmlWriterString">
            <summary>ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.SetReadOnly">
            <summary>ConfigurationElement.SetReadOnly()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.SetReadOnly01">
            <summary>ConfigurationElement.SetReadOnly()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.ElementProperty">
            <summary>ConfigurationElement.get_ElementProperty()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.StubConnectionPoolElement.Properties">
            <summary>ConfigurationElement.get_Properties()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement">
            <summary>Couchbase.Configuration.Client.Providers.IOServiceElement의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.DeserializeElementXmlReaderBoolean">
            <summary>ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.ElementPropertyGet">
            <summary>ConfigurationElement.get_ElementProperty()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.Equals(System.Object)">
            <summary>ConfigurationElement.Equals(Object compareTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.EqualsObject">
            <summary>ConfigurationElement.Equals(Object compareTo)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.GetHashCode">
            <summary>ConfigurationElement.GetHashCode()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.GetHashCode01">
            <summary>ConfigurationElement.GetHashCode()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.GetTransformedAssemblyString(System.String)">
            <summary>ConfigurationElement.GetTransformedAssemblyString(String assemblyName)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.GetTransformedAssemblyStringString">
            <summary>ConfigurationElement.GetTransformedAssemblyString(String assemblyName)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.GetTransformedTypeString(System.String)">
            <summary>ConfigurationElement.GetTransformedTypeString(String typeName)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.GetTransformedTypeStringString">
            <summary>ConfigurationElement.GetTransformedTypeString(String typeName)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.Init">
            <summary>ConfigurationElement.Init()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.Init01">
            <summary>ConfigurationElement.Init()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.InitializeDefault">
            <summary>ConfigurationElement.InitializeDefault()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.InitializeDefault01">
            <summary>ConfigurationElement.InitializeDefault()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.InitializeStub">
            <summary>type StubIOServiceElement의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.IsModified">
            <summary>ConfigurationElement.IsModified()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.IsModified01">
            <summary>ConfigurationElement.IsModified()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.IsReadOnly">
            <summary>ConfigurationElement.IsReadOnly()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.IsReadOnly01">
            <summary>ConfigurationElement.IsReadOnly()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.ListErrors(System.Collections.IList)">
            <summary>ConfigurationElement.ListErrors(IList errorList)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.ListErrorsIList">
            <summary>ConfigurationElement.ListErrors(IList errorList)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.OnDeserializeUnrecognizedAttributeStringString">
            <summary>ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.OnRequiredPropertyNotFound(System.String)">
            <summary>ConfigurationElement.OnRequiredPropertyNotFound(String name)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.OnRequiredPropertyNotFoundString">
            <summary>ConfigurationElement.OnRequiredPropertyNotFound(String name)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.PostDeserialize">
            <summary>ConfigurationElement.PostDeserialize()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.PostDeserialize01">
            <summary>ConfigurationElement.PostDeserialize()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.PreSerialize(System.Xml.XmlWriter)">
            <summary>ConfigurationElement.PreSerialize(XmlWriter writer)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.PreSerializeXmlWriter">
            <summary>ConfigurationElement.PreSerialize(XmlWriter writer)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.PropertiesGet">
            <summary>ConfigurationElement.get_Properties()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.Reset(System.Configuration.ConfigurationElement)">
            <summary>ConfigurationElement.Reset(ConfigurationElement parentElement)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.ResetConfigurationElement">
            <summary>ConfigurationElement.Reset(ConfigurationElement parentElement)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.ResetModified">
            <summary>ConfigurationElement.ResetModified()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.ResetModified01">
            <summary>ConfigurationElement.ResetModified()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.SerializeElementXmlWriterBoolean">
            <summary>ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.SerializeToXmlElementXmlWriterString">
            <summary>ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.SetReadOnly">
            <summary>ConfigurationElement.SetReadOnly()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.SetReadOnly01">
            <summary>ConfigurationElement.SetReadOnly()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.ElementProperty">
            <summary>ConfigurationElement.get_ElementProperty()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Client.Providers.Fakes.StubIOServiceElement.Properties">
            <summary>ConfigurationElement.get_Properties()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Fakes.ShimConfigException">
            <summary>Couchbase.Configuration.ConfigException의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.ShimConfigException.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.ShimConfigException.#ctor(Couchbase.Configuration.ConfigException)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.ShimConfigException.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.ShimConfigException.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.ShimConfigException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.ShimConfigException.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.ShimConfigException.Constructor">
            <summary>ConfigException.ConfigException()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.ShimConfigException.ConstructorSerializationInfoStreamingContext">
            <summary>ConfigException.ConfigException(SerializationInfo info, StreamingContext context)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.ShimConfigException.ConstructorString">
            <summary>ConfigException.ConfigException(String message)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.ShimConfigException.ConstructorStringException">
            <summary>ConfigException.ConfigException(String message, Exception innerException)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.ShimConfigException.ConstructorStringObjectArray">
            <summary>ConfigException.ConfigException(String format, Object[] args)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Fakes.ShimConfigException.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Configuration.Fakes.ShimConfigNotFoundException">
            <summary>Couchbase.Configuration.ConfigNotFoundException의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.ShimConfigNotFoundException.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.ShimConfigNotFoundException.#ctor(Couchbase.Configuration.ConfigNotFoundException)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.ShimConfigNotFoundException.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.ShimConfigNotFoundException.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.ShimConfigNotFoundException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.ShimConfigNotFoundException.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.ShimConfigNotFoundException.Constructor">
            <summary>ConfigNotFoundException.ConfigNotFoundException()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.ShimConfigNotFoundException.ConstructorSerializationInfoStreamingContext">
            <summary>ConfigNotFoundException.ConfigNotFoundException(SerializationInfo info, StreamingContext context)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.ShimConfigNotFoundException.ConstructorString">
            <summary>ConfigNotFoundException.ConfigNotFoundException(String message)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.ShimConfigNotFoundException.ConstructorStringException">
            <summary>ConfigNotFoundException.ConfigNotFoundException(String message, Exception innerException)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Fakes.ShimConfigNotFoundException.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Configuration.Fakes.ShimConfigObserverNotFoundException">
            <summary>Couchbase.Configuration.ConfigObserverNotFoundException의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.ShimConfigObserverNotFoundException.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.ShimConfigObserverNotFoundException.#ctor(Couchbase.Configuration.ConfigObserverNotFoundException)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.ShimConfigObserverNotFoundException.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.ShimConfigObserverNotFoundException.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.ShimConfigObserverNotFoundException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.ShimConfigObserverNotFoundException.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.ShimConfigObserverNotFoundException.Constructor">
            <summary>ConfigObserverNotFoundException.ConfigObserverNotFoundException()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.ShimConfigObserverNotFoundException.ConstructorSerializationInfoStreamingContext">
            <summary>ConfigObserverNotFoundException.ConfigObserverNotFoundException(SerializationInfo info, StreamingContext context)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.ShimConfigObserverNotFoundException.ConstructorString">
            <summary>ConfigObserverNotFoundException.ConfigObserverNotFoundException(String message)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.ShimConfigObserverNotFoundException.ConstructorStringException">
            <summary>ConfigObserverNotFoundException.ConfigObserverNotFoundException(String message, Exception innerException)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Fakes.ShimConfigObserverNotFoundException.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Configuration.Fakes.ShimCouchbaseBootstrapException">
            <summary>Couchbase.Configuration.CouchbaseBootstrapException의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.ShimCouchbaseBootstrapException.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.ShimCouchbaseBootstrapException.#ctor(Couchbase.Configuration.CouchbaseBootstrapException)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.ShimCouchbaseBootstrapException.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.ShimCouchbaseBootstrapException.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.ShimCouchbaseBootstrapException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.ShimCouchbaseBootstrapException.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.ShimCouchbaseBootstrapException.Constructor">
            <summary>CouchbaseBootstrapException.CouchbaseBootstrapException()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.ShimCouchbaseBootstrapException.ConstructorSerializationInfoStreamingContext">
            <summary>CouchbaseBootstrapException.CouchbaseBootstrapException(SerializationInfo info, StreamingContext context)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.ShimCouchbaseBootstrapException.ConstructorString">
            <summary>CouchbaseBootstrapException.CouchbaseBootstrapException(String message)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.ShimCouchbaseBootstrapException.ConstructorStringException">
            <summary>CouchbaseBootstrapException.CouchbaseBootstrapException(String message, Exception innerException)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Fakes.ShimCouchbaseBootstrapException.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Configuration.Fakes.StubConfigException">
            <summary>Couchbase.Configuration.ConfigException의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.StubConfigException.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.StubConfigException.#ctor(System.String)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.StubConfigException.#ctor(System.String,System.Object[])">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.StubConfigException.#ctor(System.String,System.Exception)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.StubConfigException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.StubConfigException.AttachBackingFieldToHelpLink">
            <summary>대리자를 연결하여 StubConfigException.HelpLink을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.StubConfigException.AttachBackingFieldToSource">
            <summary>대리자를 연결하여 StubConfigException.Source을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Fakes.StubConfigException.DataGet">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.StubConfigException.GetBaseException">
            <summary>Exception.GetBaseException()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Fakes.StubConfigException.GetBaseException01">
            <summary>Exception.GetBaseException()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.StubConfigException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Exception.GetObjectData(SerializationInfo info, StreamingContext context)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Fakes.StubConfigException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Exception.GetObjectData(SerializationInfo info, StreamingContext context)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Fakes.StubConfigException.HelpLinkGet">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Fakes.StubConfigException.HelpLinkSetString">
            <summary>Exception.set_HelpLink(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.StubConfigException.InitializeStub">
            <summary>type StubConfigException의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Fakes.StubConfigException.MessageGet">
            <summary>Exception.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Fakes.StubConfigException.SourceGet">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Fakes.StubConfigException.SourceSetString">
            <summary>Exception.set_Source(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Fakes.StubConfigException.StackTraceGet">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.StubConfigException.ToString">
            <summary>Exception.ToString()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Fakes.StubConfigException.ToString01">
            <summary>Exception.ToString()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.StubConfigException.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.StubConfigException.Data">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.StubConfigException.HelpLink">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.StubConfigException.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.StubConfigException.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.StubConfigException.Message">
            <summary>Exception.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.StubConfigException.Source">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.StubConfigException.StackTrace">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Fakes.StubConfigNotFoundException">
            <summary>Couchbase.Configuration.ConfigNotFoundException의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.StubConfigNotFoundException.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.StubConfigNotFoundException.#ctor(System.String)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.StubConfigNotFoundException.#ctor(System.String,System.Exception)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.StubConfigNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.StubConfigNotFoundException.AttachBackingFieldToHelpLink">
            <summary>대리자를 연결하여 StubConfigNotFoundException.HelpLink을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.StubConfigNotFoundException.AttachBackingFieldToSource">
            <summary>대리자를 연결하여 StubConfigNotFoundException.Source을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Fakes.StubConfigNotFoundException.DataGet">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.StubConfigNotFoundException.GetBaseException">
            <summary>Exception.GetBaseException()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Fakes.StubConfigNotFoundException.GetBaseException01">
            <summary>Exception.GetBaseException()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.StubConfigNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Exception.GetObjectData(SerializationInfo info, StreamingContext context)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Fakes.StubConfigNotFoundException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Exception.GetObjectData(SerializationInfo info, StreamingContext context)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Fakes.StubConfigNotFoundException.HelpLinkGet">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Fakes.StubConfigNotFoundException.HelpLinkSetString">
            <summary>Exception.set_HelpLink(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.StubConfigNotFoundException.InitializeStub">
            <summary>type StubConfigNotFoundException의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Fakes.StubConfigNotFoundException.MessageGet">
            <summary>Exception.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Fakes.StubConfigNotFoundException.SourceGet">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Fakes.StubConfigNotFoundException.SourceSetString">
            <summary>Exception.set_Source(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Fakes.StubConfigNotFoundException.StackTraceGet">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.StubConfigNotFoundException.ToString">
            <summary>Exception.ToString()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Fakes.StubConfigNotFoundException.ToString01">
            <summary>Exception.ToString()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.StubConfigNotFoundException.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.StubConfigNotFoundException.Data">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.StubConfigNotFoundException.HelpLink">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.StubConfigNotFoundException.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.StubConfigNotFoundException.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.StubConfigNotFoundException.Message">
            <summary>Exception.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.StubConfigNotFoundException.Source">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.StubConfigNotFoundException.StackTrace">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Fakes.StubConfigObserverNotFoundException">
            <summary>Couchbase.Configuration.ConfigObserverNotFoundException의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.StubConfigObserverNotFoundException.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.StubConfigObserverNotFoundException.#ctor(System.String)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.StubConfigObserverNotFoundException.#ctor(System.String,System.Exception)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.StubConfigObserverNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.StubConfigObserverNotFoundException.AttachBackingFieldToHelpLink">
            <summary>대리자를 연결하여 StubConfigObserverNotFoundException.HelpLink을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.StubConfigObserverNotFoundException.AttachBackingFieldToSource">
            <summary>대리자를 연결하여 StubConfigObserverNotFoundException.Source을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Fakes.StubConfigObserverNotFoundException.DataGet">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.StubConfigObserverNotFoundException.GetBaseException">
            <summary>Exception.GetBaseException()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Fakes.StubConfigObserverNotFoundException.GetBaseException01">
            <summary>Exception.GetBaseException()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.StubConfigObserverNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Exception.GetObjectData(SerializationInfo info, StreamingContext context)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Fakes.StubConfigObserverNotFoundException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Exception.GetObjectData(SerializationInfo info, StreamingContext context)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Fakes.StubConfigObserverNotFoundException.HelpLinkGet">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Fakes.StubConfigObserverNotFoundException.HelpLinkSetString">
            <summary>Exception.set_HelpLink(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.StubConfigObserverNotFoundException.InitializeStub">
            <summary>type StubConfigObserverNotFoundException의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Fakes.StubConfigObserverNotFoundException.MessageGet">
            <summary>Exception.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Fakes.StubConfigObserverNotFoundException.SourceGet">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Fakes.StubConfigObserverNotFoundException.SourceSetString">
            <summary>Exception.set_Source(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Fakes.StubConfigObserverNotFoundException.StackTraceGet">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.StubConfigObserverNotFoundException.ToString">
            <summary>Exception.ToString()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Fakes.StubConfigObserverNotFoundException.ToString01">
            <summary>Exception.ToString()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.StubConfigObserverNotFoundException.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.StubConfigObserverNotFoundException.Data">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.StubConfigObserverNotFoundException.HelpLink">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.StubConfigObserverNotFoundException.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.StubConfigObserverNotFoundException.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.StubConfigObserverNotFoundException.Message">
            <summary>Exception.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.StubConfigObserverNotFoundException.Source">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.StubConfigObserverNotFoundException.StackTrace">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Fakes.StubCouchbaseBootstrapException">
            <summary>Couchbase.Configuration.CouchbaseBootstrapException의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.StubCouchbaseBootstrapException.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.StubCouchbaseBootstrapException.#ctor(System.String)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.StubCouchbaseBootstrapException.#ctor(System.String,System.Exception)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.StubCouchbaseBootstrapException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.StubCouchbaseBootstrapException.AttachBackingFieldToHelpLink">
            <summary>대리자를 연결하여 StubCouchbaseBootstrapException.HelpLink을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.StubCouchbaseBootstrapException.AttachBackingFieldToSource">
            <summary>대리자를 연결하여 StubCouchbaseBootstrapException.Source을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Fakes.StubCouchbaseBootstrapException.DataGet">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.StubCouchbaseBootstrapException.GetBaseException">
            <summary>Exception.GetBaseException()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Fakes.StubCouchbaseBootstrapException.GetBaseException01">
            <summary>Exception.GetBaseException()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.StubCouchbaseBootstrapException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Exception.GetObjectData(SerializationInfo info, StreamingContext context)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Fakes.StubCouchbaseBootstrapException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Exception.GetObjectData(SerializationInfo info, StreamingContext context)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Fakes.StubCouchbaseBootstrapException.HelpLinkGet">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Fakes.StubCouchbaseBootstrapException.HelpLinkSetString">
            <summary>Exception.set_HelpLink(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.StubCouchbaseBootstrapException.InitializeStub">
            <summary>type StubCouchbaseBootstrapException의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Fakes.StubCouchbaseBootstrapException.MessageGet">
            <summary>Exception.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Fakes.StubCouchbaseBootstrapException.SourceGet">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Fakes.StubCouchbaseBootstrapException.SourceSetString">
            <summary>Exception.set_Source(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Fakes.StubCouchbaseBootstrapException.StackTraceGet">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Fakes.StubCouchbaseBootstrapException.ToString">
            <summary>Exception.ToString()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Fakes.StubCouchbaseBootstrapException.ToString01">
            <summary>Exception.ToString()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.StubCouchbaseBootstrapException.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.StubCouchbaseBootstrapException.Data">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.StubCouchbaseBootstrapException.HelpLink">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.StubCouchbaseBootstrapException.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.StubCouchbaseBootstrapException.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.StubCouchbaseBootstrapException.Message">
            <summary>Exception.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.StubCouchbaseBootstrapException.Source">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Fakes.StubCouchbaseBootstrapException.StackTrace">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimAutoCompactionSettings">
            <summary>Couchbase.Configuration.Server.Serialization.AutoCompactionSettings의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimAutoCompactionSettings.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimAutoCompactionSettings.#ctor(Couchbase.Configuration.Server.Serialization.AutoCompactionSettings)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimAutoCompactionSettings.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimAutoCompactionSettings.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimAutoCompactionSettings.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimAutoCompactionSettings.Constructor">
            <summary>AutoCompactionSettings.AutoCompactionSettings()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimAutoCompactionSettings.DatabaseFragmentationThresholdGet">
            <summary>AutoCompactionSettings.get_DatabaseFragmentationThreshold()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimAutoCompactionSettings.DatabaseFragmentationThresholdSetDatabaseFragmentationThreshold">
            <summary>AutoCompactionSettings.set_DatabaseFragmentationThreshold(DatabaseFragmentationThreshold value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimAutoCompactionSettings.ParallelDBAndViewCompactionGet">
            <summary>AutoCompactionSettings.get_ParallelDBAndViewCompaction()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimAutoCompactionSettings.ParallelDBAndViewCompactionSetBoolean">
            <summary>AutoCompactionSettings.set_ParallelDBAndViewCompaction(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimAutoCompactionSettings.ViewFragmentationThresholdGet">
            <summary>AutoCompactionSettings.get_ViewFragmentationThreshold()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimAutoCompactionSettings.ViewFragmentationThresholdSetViewFragmentationThreshold">
            <summary>AutoCompactionSettings.set_ViewFragmentationThreshold(ViewFragmentationThreshold value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimAutoCompactionSettings.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimAutoCompactionSettings.AllInstances.DatabaseFragmentationThresholdGet">
            <summary>AutoCompactionSettings.get_DatabaseFragmentationThreshold()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimAutoCompactionSettings.AllInstances.DatabaseFragmentationThresholdSetDatabaseFragmentationThreshold">
            <summary>AutoCompactionSettings.set_DatabaseFragmentationThreshold(DatabaseFragmentationThreshold value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimAutoCompactionSettings.AllInstances.ParallelDBAndViewCompactionGet">
            <summary>AutoCompactionSettings.get_ParallelDBAndViewCompaction()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimAutoCompactionSettings.AllInstances.ParallelDBAndViewCompactionSetBoolean">
            <summary>AutoCompactionSettings.set_ParallelDBAndViewCompaction(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimAutoCompactionSettings.AllInstances.ViewFragmentationThresholdGet">
            <summary>AutoCompactionSettings.get_ViewFragmentationThreshold()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimAutoCompactionSettings.AllInstances.ViewFragmentationThresholdSetViewFragmentationThreshold">
            <summary>AutoCompactionSettings.set_ViewFragmentationThreshold(ViewFragmentationThreshold value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimBasicStats">
            <summary>Couchbase.Configuration.Server.Serialization.BasicStats의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimBasicStats.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimBasicStats.#ctor(Couchbase.Configuration.Server.Serialization.BasicStats)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimBasicStats.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimBasicStats.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBasicStats.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBasicStats.Constructor">
            <summary>BasicStats.BasicStats()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBasicStats.DataUsedGet">
            <summary>BasicStats.get_DataUsed()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBasicStats.DataUsedSetUInt64">
            <summary>BasicStats.set_DataUsed(UInt64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBasicStats.DiskFetchesGet">
            <summary>BasicStats.get_DiskFetches()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBasicStats.DiskFetchesSetDouble">
            <summary>BasicStats.set_DiskFetches(Double value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBasicStats.DiskUsedGet">
            <summary>BasicStats.get_DiskUsed()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBasicStats.DiskUsedSetUInt64">
            <summary>BasicStats.set_DiskUsed(UInt64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBasicStats.HitRatioGet">
            <summary>BasicStats.get_HitRatio()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBasicStats.HitRatioSetNullableOfUInt32">
            <summary>BasicStats.set_HitRatio(Nullable`1&lt;UInt32&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBasicStats.ItemCountGet">
            <summary>BasicStats.get_ItemCount()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBasicStats.ItemCountSetInt64">
            <summary>BasicStats.set_ItemCount(Int64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBasicStats.MemUsedGet">
            <summary>BasicStats.get_MemUsed()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBasicStats.MemUsedSetUInt64">
            <summary>BasicStats.set_MemUsed(UInt64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBasicStats.OpsPerSecGet">
            <summary>BasicStats.get_OpsPerSec()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBasicStats.OpsPerSecSetDouble">
            <summary>BasicStats.set_OpsPerSec(Double value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBasicStats.QuotaPercentUsedGet">
            <summary>BasicStats.get_QuotaPercentUsed()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBasicStats.QuotaPercentUsedSetDouble">
            <summary>BasicStats.set_QuotaPercentUsed(Double value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBasicStats.ViewOpsGet">
            <summary>BasicStats.get_ViewOps()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBasicStats.ViewOpsSetDouble">
            <summary>BasicStats.set_ViewOps(Double value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimBasicStats.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBasicStats.AllInstances.DataUsedGet">
            <summary>BasicStats.get_DataUsed()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBasicStats.AllInstances.DataUsedSetUInt64">
            <summary>BasicStats.set_DataUsed(UInt64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBasicStats.AllInstances.DiskFetchesGet">
            <summary>BasicStats.get_DiskFetches()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBasicStats.AllInstances.DiskFetchesSetDouble">
            <summary>BasicStats.set_DiskFetches(Double value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBasicStats.AllInstances.DiskUsedGet">
            <summary>BasicStats.get_DiskUsed()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBasicStats.AllInstances.DiskUsedSetUInt64">
            <summary>BasicStats.set_DiskUsed(UInt64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBasicStats.AllInstances.HitRatioGet">
            <summary>BasicStats.get_HitRatio()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBasicStats.AllInstances.HitRatioSetNullableOfUInt32">
            <summary>BasicStats.set_HitRatio(Nullable`1&lt;UInt32&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBasicStats.AllInstances.ItemCountGet">
            <summary>BasicStats.get_ItemCount()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBasicStats.AllInstances.ItemCountSetInt64">
            <summary>BasicStats.set_ItemCount(Int64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBasicStats.AllInstances.MemUsedGet">
            <summary>BasicStats.get_MemUsed()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBasicStats.AllInstances.MemUsedSetUInt64">
            <summary>BasicStats.set_MemUsed(UInt64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBasicStats.AllInstances.OpsPerSecGet">
            <summary>BasicStats.get_OpsPerSec()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBasicStats.AllInstances.OpsPerSecSetDouble">
            <summary>BasicStats.set_OpsPerSec(Double value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBasicStats.AllInstances.QuotaPercentUsedGet">
            <summary>BasicStats.get_QuotaPercentUsed()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBasicStats.AllInstances.QuotaPercentUsedSetDouble">
            <summary>BasicStats.set_QuotaPercentUsed(Double value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBasicStats.AllInstances.ViewOpsGet">
            <summary>BasicStats.get_ViewOps()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBasicStats.AllInstances.ViewOpsSetDouble">
            <summary>BasicStats.set_ViewOps(Double value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimBootstrapException">
            <summary>Couchbase.Configuration.Server.Serialization.BootstrapException의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimBootstrapException.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimBootstrapException.#ctor(Couchbase.Configuration.Server.Serialization.BootstrapException)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimBootstrapException.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimBootstrapException.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimBootstrapException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBootstrapException.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBootstrapException.Constructor">
            <summary>BootstrapException.BootstrapException()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBootstrapException.ConstructorSerializationInfoStreamingContext">
            <summary>BootstrapException.BootstrapException(SerializationInfo info, StreamingContext context)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBootstrapException.ConstructorString">
            <summary>BootstrapException.BootstrapException(String message)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBootstrapException.ConstructorStringException">
            <summary>BootstrapException.BootstrapException(String message, Exception innerException)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimBootstrapException.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig">
            <summary>Couchbase.Configuration.Server.Serialization.BucketConfig의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.#ctor(Couchbase.Configuration.Server.Serialization.BucketConfig)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.Bind(Couchbase.Configuration.Server.Serialization.IBucketConfig)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.Bind(System.IEquatable{Couchbase.Configuration.Server.Serialization.BucketConfig})">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AreNodesEqualIBucketConfig">
            <summary>BucketConfig.AreNodesEqual(IBucketConfig other)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AuthTypeGet">
            <summary>BucketConfig.get_AuthType()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AuthTypeSetString">
            <summary>BucketConfig.set_AuthType(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.BasicStatsGet">
            <summary>BucketConfig.get_BasicStats()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.BasicStatsSetBasicStats">
            <summary>BucketConfig.set_BasicStats(BasicStats value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.BucketCapabilitiesGet">
            <summary>BucketConfig.get_BucketCapabilities()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.BucketCapabilitiesSetStringArray">
            <summary>BucketConfig.set_BucketCapabilities(String[] value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.BucketCapabilitiesVerGet">
            <summary>BucketConfig.get_BucketCapabilitiesVer()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.BucketCapabilitiesVerSetString">
            <summary>BucketConfig.set_BucketCapabilitiesVer(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.BucketTypeGet">
            <summary>BucketConfig.get_BucketType()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.BucketTypeSetString">
            <summary>BucketConfig.set_BucketType(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.Constructor">
            <summary>BucketConfig.BucketConfig()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.ControllersGet">
            <summary>BucketConfig.get_Controllers()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.ControllersSetControllers">
            <summary>BucketConfig.set_Controllers(Controllers value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.DdocsGet">
            <summary>BucketConfig.get_Ddocs()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.DdocsSetDdocs">
            <summary>BucketConfig.set_Ddocs(Ddocs value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.EqualsBucketConfig">
            <summary>BucketConfig.Equals(BucketConfig other)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.EqualsObject">
            <summary>BucketConfig.Equals(Object obj)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.GetHashCode">
            <summary>BucketConfig.GetHashCode()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.GetRandomNode">
            <summary>BucketConfig.GetRandomNode()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.GetTerseStreamingUriNodeBoolean">
            <summary>BucketConfig.GetTerseStreamingUri(Node node, Boolean useSsl)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.GetTerseUriNodeBoolean">
            <summary>BucketConfig.GetTerseUri(Node node, Boolean useSsl)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.IsVBucketServerMapEqualIBucketConfig">
            <summary>BucketConfig.IsVBucketServerMapEqual(IBucketConfig other)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.LocalRandomKeyUriGet">
            <summary>BucketConfig.get_LocalRandomKeyUri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.LocalRandomKeyUriSetString">
            <summary>BucketConfig.set_LocalRandomKeyUri(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.NameGet">
            <summary>BucketConfig.get_Name()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.NameSetString">
            <summary>BucketConfig.set_Name(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.NodeLocatorGet">
            <summary>BucketConfig.get_NodeLocator()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.NodeLocatorSetString">
            <summary>BucketConfig.set_NodeLocator(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.NodesExtGet">
            <summary>BucketConfig.get_NodesExt()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.NodesExtSetNodeExtArray">
            <summary>BucketConfig.set_NodesExt(NodeExt[] value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.NodesGet">
            <summary>BucketConfig.get_Nodes()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.NodesSetNodeArray">
            <summary>BucketConfig.set_Nodes(Node[] value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.PasswordGet">
            <summary>BucketConfig.get_Password()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.PasswordSetString">
            <summary>BucketConfig.set_Password(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.ProxyPortGet">
            <summary>BucketConfig.get_ProxyPort()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.ProxyPortSetInt32">
            <summary>BucketConfig.set_ProxyPort(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.QuotaGet">
            <summary>BucketConfig.get_Quota()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.QuotaSetQuota">
            <summary>BucketConfig.set_Quota(Quota value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.ReplicaIndexGet">
            <summary>BucketConfig.get_ReplicaIndex()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.ReplicaIndexSetBoolean">
            <summary>BucketConfig.set_ReplicaIndex(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.ReplicaNumberGet">
            <summary>BucketConfig.get_ReplicaNumber()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.ReplicaNumberSetInt32">
            <summary>BucketConfig.set_ReplicaNumber(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.RevGet">
            <summary>BucketConfig.get_Rev()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.RevSetUInt32">
            <summary>BucketConfig.set_Rev(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.SaslPasswordGet">
            <summary>BucketConfig.get_SaslPassword()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.SaslPasswordSetString">
            <summary>BucketConfig.set_SaslPassword(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.StatsGet">
            <summary>BucketConfig.get_Stats()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.StatsSetStats">
            <summary>BucketConfig.set_Stats(Stats value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.StreamingUriGet">
            <summary>BucketConfig.get_StreamingUri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.StreamingUriSetString">
            <summary>BucketConfig.set_StreamingUri(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.SurrogateHostGet">
            <summary>BucketConfig.get_SurrogateHost()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.SurrogateHostSetString">
            <summary>BucketConfig.set_SurrogateHost(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.TerseStreamingUriGet">
            <summary>BucketConfig.get_TerseStreamingUri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.TerseStreamingUriSetString">
            <summary>BucketConfig.set_TerseStreamingUri(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.TerseUriGet">
            <summary>BucketConfig.get_TerseUri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.TerseUriSetString">
            <summary>BucketConfig.set_TerseUri(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.ThreadsNumberGet">
            <summary>BucketConfig.get_ThreadsNumber()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.ThreadsNumberSetInt32">
            <summary>BucketConfig.set_ThreadsNumber(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.ToString">
            <summary>BucketConfig.ToString()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.UriGet">
            <summary>BucketConfig.get_Uri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.UriSetString">
            <summary>BucketConfig.set_Uri(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.UseSslGet">
            <summary>BucketConfig.get_UseSsl()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.UseSslSetBoolean">
            <summary>BucketConfig.set_UseSsl(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.UuidGet">
            <summary>BucketConfig.get_Uuid()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.UuidSetString">
            <summary>BucketConfig.set_Uuid(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.VBucketServerMapGet">
            <summary>BucketConfig.get_VBucketServerMap()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.VBucketServerMapSetVBucketServerMap">
            <summary>BucketConfig.set_VBucketServerMap(VBucketServerMap value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.AreNodesEqualIBucketConfig">
            <summary>BucketConfig.AreNodesEqual(IBucketConfig other)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.AuthTypeGet">
            <summary>BucketConfig.get_AuthType()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.AuthTypeSetString">
            <summary>BucketConfig.set_AuthType(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.BasicStatsGet">
            <summary>BucketConfig.get_BasicStats()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.BasicStatsSetBasicStats">
            <summary>BucketConfig.set_BasicStats(BasicStats value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.BucketCapabilitiesGet">
            <summary>BucketConfig.get_BucketCapabilities()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.BucketCapabilitiesSetStringArray">
            <summary>BucketConfig.set_BucketCapabilities(String[] value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.BucketCapabilitiesVerGet">
            <summary>BucketConfig.get_BucketCapabilitiesVer()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.BucketCapabilitiesVerSetString">
            <summary>BucketConfig.set_BucketCapabilitiesVer(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.BucketTypeGet">
            <summary>BucketConfig.get_BucketType()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.BucketTypeSetString">
            <summary>BucketConfig.set_BucketType(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.ControllersGet">
            <summary>BucketConfig.get_Controllers()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.ControllersSetControllers">
            <summary>BucketConfig.set_Controllers(Controllers value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.DdocsGet">
            <summary>BucketConfig.get_Ddocs()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.DdocsSetDdocs">
            <summary>BucketConfig.set_Ddocs(Ddocs value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.EqualsBucketConfig">
            <summary>BucketConfig.Equals(BucketConfig other)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.EqualsObject">
            <summary>BucketConfig.Equals(Object obj)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.GetHashCode01">
            <summary>BucketConfig.GetHashCode()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.GetRandomNode">
            <summary>BucketConfig.GetRandomNode()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.GetTerseStreamingUriNodeBoolean">
            <summary>BucketConfig.GetTerseStreamingUri(Node node, Boolean useSsl)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.GetTerseUriNodeBoolean">
            <summary>BucketConfig.GetTerseUri(Node node, Boolean useSsl)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.IsVBucketServerMapEqualIBucketConfig">
            <summary>BucketConfig.IsVBucketServerMapEqual(IBucketConfig other)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.LocalRandomKeyUriGet">
            <summary>BucketConfig.get_LocalRandomKeyUri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.LocalRandomKeyUriSetString">
            <summary>BucketConfig.set_LocalRandomKeyUri(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.NameGet">
            <summary>BucketConfig.get_Name()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.NameSetString">
            <summary>BucketConfig.set_Name(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.NodeLocatorGet">
            <summary>BucketConfig.get_NodeLocator()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.NodeLocatorSetString">
            <summary>BucketConfig.set_NodeLocator(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.NodesExtGet">
            <summary>BucketConfig.get_NodesExt()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.NodesExtSetNodeExtArray">
            <summary>BucketConfig.set_NodesExt(NodeExt[] value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.NodesGet">
            <summary>BucketConfig.get_Nodes()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.NodesSetNodeArray">
            <summary>BucketConfig.set_Nodes(Node[] value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.PasswordGet">
            <summary>BucketConfig.get_Password()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.PasswordSetString">
            <summary>BucketConfig.set_Password(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.ProxyPortGet">
            <summary>BucketConfig.get_ProxyPort()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.ProxyPortSetInt32">
            <summary>BucketConfig.set_ProxyPort(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.QuotaGet">
            <summary>BucketConfig.get_Quota()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.QuotaSetQuota">
            <summary>BucketConfig.set_Quota(Quota value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.ReplicaIndexGet">
            <summary>BucketConfig.get_ReplicaIndex()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.ReplicaIndexSetBoolean">
            <summary>BucketConfig.set_ReplicaIndex(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.ReplicaNumberGet">
            <summary>BucketConfig.get_ReplicaNumber()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.ReplicaNumberSetInt32">
            <summary>BucketConfig.set_ReplicaNumber(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.RevGet">
            <summary>BucketConfig.get_Rev()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.RevSetUInt32">
            <summary>BucketConfig.set_Rev(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.SaslPasswordGet">
            <summary>BucketConfig.get_SaslPassword()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.SaslPasswordSetString">
            <summary>BucketConfig.set_SaslPassword(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.StatsGet">
            <summary>BucketConfig.get_Stats()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.StatsSetStats">
            <summary>BucketConfig.set_Stats(Stats value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.StreamingUriGet">
            <summary>BucketConfig.get_StreamingUri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.StreamingUriSetString">
            <summary>BucketConfig.set_StreamingUri(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.SurrogateHostGet">
            <summary>BucketConfig.get_SurrogateHost()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.SurrogateHostSetString">
            <summary>BucketConfig.set_SurrogateHost(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.TerseStreamingUriGet">
            <summary>BucketConfig.get_TerseStreamingUri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.TerseStreamingUriSetString">
            <summary>BucketConfig.set_TerseStreamingUri(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.TerseUriGet">
            <summary>BucketConfig.get_TerseUri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.TerseUriSetString">
            <summary>BucketConfig.set_TerseUri(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.ThreadsNumberGet">
            <summary>BucketConfig.get_ThreadsNumber()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.ThreadsNumberSetInt32">
            <summary>BucketConfig.set_ThreadsNumber(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.ToString01">
            <summary>BucketConfig.ToString()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.UriGet">
            <summary>BucketConfig.get_Uri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.UriSetString">
            <summary>BucketConfig.set_Uri(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.UseSslGet">
            <summary>BucketConfig.get_UseSsl()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.UseSslSetBoolean">
            <summary>BucketConfig.set_UseSsl(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.UuidGet">
            <summary>BucketConfig.get_Uuid()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.UuidSetString">
            <summary>BucketConfig.set_Uuid(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.VBucketServerMapGet">
            <summary>BucketConfig.get_VBucketServerMap()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBucketConfig.AllInstances.VBucketServerMapSetVBucketServerMap">
            <summary>BucketConfig.set_VBucketServerMap(VBucketServerMap value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimBuckets">
            <summary>Couchbase.Configuration.Server.Serialization.Buckets의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimBuckets.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimBuckets.#ctor(Couchbase.Configuration.Server.Serialization.Buckets)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimBuckets.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimBuckets.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBuckets.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBuckets.Constructor">
            <summary>Buckets.Buckets()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBuckets.StreamingUriGet">
            <summary>Buckets.get_StreamingUri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBuckets.StreamingUriSetString">
            <summary>Buckets.set_StreamingUri(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBuckets.TerseBucketsBaseGet">
            <summary>Buckets.get_TerseBucketsBase()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBuckets.TerseBucketsBaseSetString">
            <summary>Buckets.set_TerseBucketsBase(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBuckets.TerseStreamingBucketsBaseGet">
            <summary>Buckets.get_TerseStreamingBucketsBase()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBuckets.TerseStreamingBucketsBaseSetString">
            <summary>Buckets.set_TerseStreamingBucketsBase(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBuckets.UriGet">
            <summary>Buckets.get_Uri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBuckets.UriSetString">
            <summary>Buckets.set_Uri(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimBuckets.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBuckets.AllInstances.StreamingUriGet">
            <summary>Buckets.get_StreamingUri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBuckets.AllInstances.StreamingUriSetString">
            <summary>Buckets.set_StreamingUri(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBuckets.AllInstances.TerseBucketsBaseGet">
            <summary>Buckets.get_TerseBucketsBase()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBuckets.AllInstances.TerseBucketsBaseSetString">
            <summary>Buckets.set_TerseBucketsBase(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBuckets.AllInstances.TerseStreamingBucketsBaseGet">
            <summary>Buckets.get_TerseStreamingBucketsBase()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBuckets.AllInstances.TerseStreamingBucketsBaseSetString">
            <summary>Buckets.set_TerseStreamingBucketsBase(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBuckets.AllInstances.UriGet">
            <summary>Buckets.get_Uri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimBuckets.AllInstances.UriSetString">
            <summary>Buckets.set_Uri(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimController">
            <summary>Couchbase.Configuration.Server.Serialization.Controller의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimController.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimController.#ctor(Couchbase.Configuration.Server.Serialization.Controller)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimController.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimController.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimController.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimController.CancelUriGet">
            <summary>Controller.get_CancelUri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimController.CancelUriSetString">
            <summary>Controller.set_CancelUri(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimController.Constructor">
            <summary>Controller.Controller()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimController.StartUriGet">
            <summary>Controller.get_StartUri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimController.StartUriSetString">
            <summary>Controller.set_StartUri(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimController.UriGet">
            <summary>Controller.get_Uri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimController.UriSetString">
            <summary>Controller.set_Uri(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimController.ValidateUriGet">
            <summary>Controller.get_ValidateUri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimController.ValidateUriSetString">
            <summary>Controller.set_ValidateUri(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimController.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimController.AllInstances.CancelUriGet">
            <summary>Controller.get_CancelUri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimController.AllInstances.CancelUriSetString">
            <summary>Controller.set_CancelUri(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimController.AllInstances.StartUriGet">
            <summary>Controller.get_StartUri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimController.AllInstances.StartUriSetString">
            <summary>Controller.set_StartUri(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimController.AllInstances.UriGet">
            <summary>Controller.get_Uri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimController.AllInstances.UriSetString">
            <summary>Controller.set_Uri(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimController.AllInstances.ValidateUriGet">
            <summary>Controller.get_ValidateUri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimController.AllInstances.ValidateUriSetString">
            <summary>Controller.set_ValidateUri(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimControllers">
            <summary>Couchbase.Configuration.Server.Serialization.Controllers의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimControllers.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimControllers.#ctor(Couchbase.Configuration.Server.Serialization.Controllers)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimControllers.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimControllers.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimControllers.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimControllers.CompactAllGet">
            <summary>Controllers.get_CompactAll()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimControllers.CompactAllSetString">
            <summary>Controllers.set_CompactAll(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimControllers.CompactDBGet">
            <summary>Controllers.get_CompactDB()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimControllers.CompactDBSetString">
            <summary>Controllers.set_CompactDB(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimControllers.Constructor">
            <summary>Controllers.Controllers()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimControllers.FlushGet">
            <summary>Controllers.get_Flush()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimControllers.FlushSetString">
            <summary>Controllers.set_Flush(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimControllers.PurgeDeletesGet">
            <summary>Controllers.get_PurgeDeletes()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimControllers.PurgeDeletesSetString">
            <summary>Controllers.set_PurgeDeletes(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimControllers.StartRecoveryGet">
            <summary>Controllers.get_StartRecovery()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimControllers.StartRecoverySetString">
            <summary>Controllers.set_StartRecovery(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimControllers.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimControllers.AllInstances.CompactAllGet">
            <summary>Controllers.get_CompactAll()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimControllers.AllInstances.CompactAllSetString">
            <summary>Controllers.set_CompactAll(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimControllers.AllInstances.CompactDBGet">
            <summary>Controllers.get_CompactDB()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimControllers.AllInstances.CompactDBSetString">
            <summary>Controllers.set_CompactDB(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimControllers.AllInstances.FlushGet">
            <summary>Controllers.get_Flush()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimControllers.AllInstances.FlushSetString">
            <summary>Controllers.set_Flush(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimControllers.AllInstances.PurgeDeletesGet">
            <summary>Controllers.get_PurgeDeletes()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimControllers.AllInstances.PurgeDeletesSetString">
            <summary>Controllers.set_PurgeDeletes(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimControllers.AllInstances.StartRecoveryGet">
            <summary>Controllers.get_StartRecovery()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimControllers.AllInstances.StartRecoverySetString">
            <summary>Controllers.set_StartRecovery(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimCounters">
            <summary>Couchbase.Configuration.Server.Serialization.Counters의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimCounters.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimCounters.#ctor(Couchbase.Configuration.Server.Serialization.Counters)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimCounters.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimCounters.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimCounters.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimCounters.Constructor">
            <summary>Counters.Counters()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimCounters.RebalanceStartGet">
            <summary>Counters.get_RebalanceStart()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimCounters.RebalanceStartSetInt32">
            <summary>Counters.set_RebalanceStart(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimCounters.RebalanceSuccessGet">
            <summary>Counters.get_RebalanceSuccess()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimCounters.RebalanceSuccessSetInt32">
            <summary>Counters.set_RebalanceSuccess(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimCounters.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimCounters.AllInstances.RebalanceStartGet">
            <summary>Counters.get_RebalanceStart()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimCounters.AllInstances.RebalanceStartSetInt32">
            <summary>Counters.set_RebalanceStart(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimCounters.AllInstances.RebalanceSuccessGet">
            <summary>Counters.get_RebalanceSuccess()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimCounters.AllInstances.RebalanceSuccessSetInt32">
            <summary>Counters.set_RebalanceSuccess(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimDatabaseFragmentationThreshold">
            <summary>Couchbase.Configuration.Server.Serialization.DatabaseFragmentationThreshold의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimDatabaseFragmentationThreshold.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimDatabaseFragmentationThreshold.#ctor(Couchbase.Configuration.Server.Serialization.DatabaseFragmentationThreshold)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimDatabaseFragmentationThreshold.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimDatabaseFragmentationThreshold.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimDatabaseFragmentationThreshold.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimDatabaseFragmentationThreshold.Constructor">
            <summary>DatabaseFragmentationThreshold.DatabaseFragmentationThreshold()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimDatabaseFragmentationThreshold.PercentageGet">
            <summary>DatabaseFragmentationThreshold.get_Percentage()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimDatabaseFragmentationThreshold.PercentageSetString">
            <summary>DatabaseFragmentationThreshold.set_Percentage(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimDatabaseFragmentationThreshold.SizeGet">
            <summary>DatabaseFragmentationThreshold.get_Size()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimDatabaseFragmentationThreshold.SizeSetString">
            <summary>DatabaseFragmentationThreshold.set_Size(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimDatabaseFragmentationThreshold.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimDatabaseFragmentationThreshold.AllInstances.PercentageGet">
            <summary>DatabaseFragmentationThreshold.get_Percentage()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimDatabaseFragmentationThreshold.AllInstances.PercentageSetString">
            <summary>DatabaseFragmentationThreshold.set_Percentage(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimDatabaseFragmentationThreshold.AllInstances.SizeGet">
            <summary>DatabaseFragmentationThreshold.get_Size()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimDatabaseFragmentationThreshold.AllInstances.SizeSetString">
            <summary>DatabaseFragmentationThreshold.set_Size(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimDdocs">
            <summary>Couchbase.Configuration.Server.Serialization.Ddocs의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimDdocs.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimDdocs.#ctor(Couchbase.Configuration.Server.Serialization.Ddocs)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimDdocs.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimDdocs.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimDdocs.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimDdocs.Constructor">
            <summary>Ddocs.Ddocs()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimDdocs.UriGet">
            <summary>Ddocs.get_Uri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimDdocs.UriSetString">
            <summary>Ddocs.set_Uri(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimDdocs.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimDdocs.AllInstances.UriGet">
            <summary>Ddocs.get_Uri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimDdocs.AllInstances.UriSetString">
            <summary>Ddocs.set_Uri(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimFastWarmupSettings">
            <summary>Couchbase.Configuration.Server.Serialization.FastWarmupSettings의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimFastWarmupSettings.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimFastWarmupSettings.#ctor(Couchbase.Configuration.Server.Serialization.FastWarmupSettings)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimFastWarmupSettings.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimFastWarmupSettings.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimFastWarmupSettings.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimFastWarmupSettings.Constructor">
            <summary>FastWarmupSettings.FastWarmupSettings()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimFastWarmupSettings.FastWarmupEnabledGet">
            <summary>FastWarmupSettings.get_FastWarmupEnabled()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimFastWarmupSettings.FastWarmupEnabledSetBoolean">
            <summary>FastWarmupSettings.set_FastWarmupEnabled(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimFastWarmupSettings.MinItemsThresholdGet">
            <summary>FastWarmupSettings.get_MinItemsThreshold()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimFastWarmupSettings.MinItemsThresholdSetInt32">
            <summary>FastWarmupSettings.set_MinItemsThreshold(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimFastWarmupSettings.MinMemoryThresholdGet">
            <summary>FastWarmupSettings.get_MinMemoryThreshold()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimFastWarmupSettings.MinMemoryThresholdSetInt32">
            <summary>FastWarmupSettings.set_MinMemoryThreshold(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimFastWarmupSettings.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimFastWarmupSettings.AllInstances.FastWarmupEnabledGet">
            <summary>FastWarmupSettings.get_FastWarmupEnabled()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimFastWarmupSettings.AllInstances.FastWarmupEnabledSetBoolean">
            <summary>FastWarmupSettings.set_FastWarmupEnabled(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimFastWarmupSettings.AllInstances.MinItemsThresholdGet">
            <summary>FastWarmupSettings.get_MinItemsThreshold()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimFastWarmupSettings.AllInstances.MinItemsThresholdSetInt32">
            <summary>FastWarmupSettings.set_MinItemsThreshold(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimFastWarmupSettings.AllInstances.MinMemoryThresholdGet">
            <summary>FastWarmupSettings.get_MinMemoryThreshold()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimFastWarmupSettings.AllInstances.MinMemoryThresholdSetInt32">
            <summary>FastWarmupSettings.set_MinMemoryThreshold(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimGroup">
            <summary>Couchbase.Configuration.Server.Serialization.Group의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimGroup.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimGroup.#ctor(Couchbase.Configuration.Server.Serialization.Group)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimGroup.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimGroup.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimGroup.AddNodeUriGet">
            <summary>Group.get_AddNodeUri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimGroup.AddNodeUriSetString">
            <summary>Group.set_AddNodeUri(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimGroup.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimGroup.Constructor">
            <summary>Group.Group()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimGroup.NameGet">
            <summary>Group.get_Name()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimGroup.NameSetString">
            <summary>Group.set_Name(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimGroup.NodesGet">
            <summary>Group.get_Nodes()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimGroup.NodesSetListOfNode">
            <summary>Group.set_Nodes(List`1&lt;Node&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimGroup.UriGet">
            <summary>Group.get_Uri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimGroup.UriSetString">
            <summary>Group.set_Uri(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimGroup.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimGroup.AllInstances.AddNodeUriGet">
            <summary>Group.get_AddNodeUri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimGroup.AllInstances.AddNodeUriSetString">
            <summary>Group.set_AddNodeUri(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimGroup.AllInstances.NameGet">
            <summary>Group.get_Name()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimGroup.AllInstances.NameSetString">
            <summary>Group.set_Name(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimGroup.AllInstances.NodesGet">
            <summary>Group.get_Nodes()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimGroup.AllInstances.NodesSetListOfNode">
            <summary>Group.set_Nodes(List`1&lt;Node&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimGroup.AllInstances.UriGet">
            <summary>Group.get_Uri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimGroup.AllInstances.UriSetString">
            <summary>Group.set_Uri(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimHdd">
            <summary>Couchbase.Configuration.Server.Serialization.Hdd의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimHdd.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimHdd.#ctor(Couchbase.Configuration.Server.Serialization.Hdd)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimHdd.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimHdd.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimHdd.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimHdd.Constructor">
            <summary>Hdd.Hdd()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimHdd.FreeGet">
            <summary>Hdd.get_Free()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimHdd.FreeSetInt64">
            <summary>Hdd.set_Free(Int64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimHdd.QuotaTotalGet">
            <summary>Hdd.get_QuotaTotal()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimHdd.QuotaTotalSetInt64">
            <summary>Hdd.set_QuotaTotal(Int64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimHdd.TotalGet">
            <summary>Hdd.get_Total()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimHdd.TotalSetInt64">
            <summary>Hdd.set_Total(Int64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimHdd.UsedByDataGet">
            <summary>Hdd.get_UsedByData()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimHdd.UsedByDataSetInt64">
            <summary>Hdd.set_UsedByData(Int64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimHdd.UsedGet">
            <summary>Hdd.get_Used()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimHdd.UsedSetInt64">
            <summary>Hdd.set_Used(Int64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimHdd.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimHdd.AllInstances.FreeGet">
            <summary>Hdd.get_Free()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimHdd.AllInstances.FreeSetInt64">
            <summary>Hdd.set_Free(Int64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimHdd.AllInstances.QuotaTotalGet">
            <summary>Hdd.get_QuotaTotal()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimHdd.AllInstances.QuotaTotalSetInt64">
            <summary>Hdd.set_QuotaTotal(Int64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimHdd.AllInstances.TotalGet">
            <summary>Hdd.get_Total()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimHdd.AllInstances.TotalSetInt64">
            <summary>Hdd.set_Total(Int64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimHdd.AllInstances.UsedByDataGet">
            <summary>Hdd.get_UsedByData()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimHdd.AllInstances.UsedByDataSetInt64">
            <summary>Hdd.set_UsedByData(Int64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimHdd.AllInstances.UsedGet">
            <summary>Hdd.get_Used()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimHdd.AllInstances.UsedSetInt64">
            <summary>Hdd.set_Used(Int64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode">
            <summary>Couchbase.Configuration.Server.Serialization.Node의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.#ctor(Couchbase.Configuration.Server.Serialization.Node)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.Bind(System.IEquatable{Couchbase.Configuration.Server.Serialization.Node})">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.ClusterCompatibilityGet">
            <summary>Node.get_ClusterCompatibility()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.ClusterCompatibilitySetInt32">
            <summary>Node.set_ClusterCompatibility(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.ClusterMembershipGet">
            <summary>Node.get_ClusterMembership()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.ClusterMembershipSetString">
            <summary>Node.set_ClusterMembership(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.Constructor">
            <summary>Node.Node()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.CouchApiBaseGet">
            <summary>Node.get_CouchApiBase()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.CouchApiBaseHttpsGet">
            <summary>Node.get_CouchApiBaseHttps()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.CouchApiBaseHttpsSetString">
            <summary>Node.set_CouchApiBaseHttps(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.CouchApiBaseSetString">
            <summary>Node.set_CouchApiBase(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.EqualsNode">
            <summary>Node.Equals(Node other)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.EqualsObject">
            <summary>Node.Equals(Object obj)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.GetHashCode">
            <summary>Node.GetHashCode()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.GetMemcachedEndPointBoolean">
            <summary>Node.GetMemcachedEndPoint(Boolean useInterNetworkV6Addresses)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.HostnameGet">
            <summary>Node.get_Hostname()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.HostnameSetString">
            <summary>Node.set_Hostname(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.OsGet">
            <summary>Node.get_Os()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.OsSetString">
            <summary>Node.set_Os(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.OtpNodeGet">
            <summary>Node.get_OtpNode()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.OtpNodeSetString">
            <summary>Node.set_OtpNode(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.PortsGet">
            <summary>Node.get_Ports()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.PortsSetPorts">
            <summary>Node.set_Ports(Ports value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.ReplicationGet">
            <summary>Node.get_Replication()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.ReplicationSetDouble">
            <summary>Node.set_Replication(Double value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.ServicesGet">
            <summary>Node.get_Services()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.ServicesSetListOfString">
            <summary>Node.set_Services(List`1&lt;String&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.StatusGet">
            <summary>Node.get_Status()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.StatusSetString">
            <summary>Node.set_Status(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.ThisNodeGet">
            <summary>Node.get_ThisNode()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.ThisNodeSetBoolean">
            <summary>Node.set_ThisNode(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.VersionGet">
            <summary>Node.get_Version()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.VersionSetString">
            <summary>Node.set_Version(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.AllInstances.ClusterCompatibilityGet">
            <summary>Node.get_ClusterCompatibility()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.AllInstances.ClusterCompatibilitySetInt32">
            <summary>Node.set_ClusterCompatibility(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.AllInstances.ClusterMembershipGet">
            <summary>Node.get_ClusterMembership()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.AllInstances.ClusterMembershipSetString">
            <summary>Node.set_ClusterMembership(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.AllInstances.CouchApiBaseGet">
            <summary>Node.get_CouchApiBase()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.AllInstances.CouchApiBaseHttpsGet">
            <summary>Node.get_CouchApiBaseHttps()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.AllInstances.CouchApiBaseHttpsSetString">
            <summary>Node.set_CouchApiBaseHttps(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.AllInstances.CouchApiBaseSetString">
            <summary>Node.set_CouchApiBase(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.AllInstances.EqualsNode">
            <summary>Node.Equals(Node other)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.AllInstances.EqualsObject">
            <summary>Node.Equals(Object obj)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.AllInstances.GetHashCode01">
            <summary>Node.GetHashCode()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.AllInstances.GetMemcachedEndPointBoolean">
            <summary>Node.GetMemcachedEndPoint(Boolean useInterNetworkV6Addresses)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.AllInstances.HostnameGet">
            <summary>Node.get_Hostname()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.AllInstances.HostnameSetString">
            <summary>Node.set_Hostname(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.AllInstances.OsGet">
            <summary>Node.get_Os()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.AllInstances.OsSetString">
            <summary>Node.set_Os(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.AllInstances.OtpNodeGet">
            <summary>Node.get_OtpNode()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.AllInstances.OtpNodeSetString">
            <summary>Node.set_OtpNode(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.AllInstances.PortsGet">
            <summary>Node.get_Ports()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.AllInstances.PortsSetPorts">
            <summary>Node.set_Ports(Ports value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.AllInstances.ReplicationGet">
            <summary>Node.get_Replication()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.AllInstances.ReplicationSetDouble">
            <summary>Node.set_Replication(Double value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.AllInstances.ServicesGet">
            <summary>Node.get_Services()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.AllInstances.ServicesSetListOfString">
            <summary>Node.set_Services(List`1&lt;String&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.AllInstances.StatusGet">
            <summary>Node.get_Status()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.AllInstances.StatusSetString">
            <summary>Node.set_Status(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.AllInstances.ThisNodeGet">
            <summary>Node.get_ThisNode()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.AllInstances.ThisNodeSetBoolean">
            <summary>Node.set_ThisNode(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.AllInstances.VersionGet">
            <summary>Node.get_Version()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNode.AllInstances.VersionSetString">
            <summary>Node.set_Version(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimNodeArrayExtensions">
            <summary>Couchbase.Configuration.Server.Serialization.NodeArrayExtensions의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimNodeArrayExtensions.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimNodeArrayExtensions.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimNodeArrayExtensions.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNodeArrayExtensions.AreEqualNodeArrayNodeArray">
            <summary>NodeArrayExtensions.AreEqual(Node[] nodes, Node[] other)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNodeArrayExtensions.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNodeArrayExtensions.ReorderToServerListNodeArrayVBucketServerMap">
            <summary>NodeArrayExtensions.ReorderToServerList(Node[] nodes, VBucketServerMap serverMap)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNodeArrayExtensions.ReorderToServerListNodeExtArrayVBucketServerMap">
            <summary>NodeArrayExtensions.ReorderToServerList(NodeExt[] nodes, VBucketServerMap serverMap)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimNodeExt">
            <summary>Couchbase.Configuration.Server.Serialization.NodeExt의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimNodeExt.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimNodeExt.#ctor(Couchbase.Configuration.Server.Serialization.NodeExt)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimNodeExt.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimNodeExt.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNodeExt.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNodeExt.Constructor">
            <summary>NodeExt.NodeExt()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNodeExt.HostnameGet">
            <summary>NodeExt.get_Hostname()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNodeExt.HostnameSetString">
            <summary>NodeExt.set_Hostname(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNodeExt.ServicesGet">
            <summary>NodeExt.get_Services()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNodeExt.ServicesSetServices">
            <summary>NodeExt.set_Services(Services value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimNodeExt.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNodeExt.AllInstances.HostnameGet">
            <summary>NodeExt.get_Hostname()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNodeExt.AllInstances.HostnameSetString">
            <summary>NodeExt.set_Hostname(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNodeExt.AllInstances.ServicesGet">
            <summary>NodeExt.get_Services()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimNodeExt.AllInstances.ServicesSetServices">
            <summary>NodeExt.set_Services(Services value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools">
            <summary>Couchbase.Configuration.Server.Serialization.Pools의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.#ctor(Couchbase.Configuration.Server.Serialization.Pools)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.AlertsGet">
            <summary>Pools.get_Alerts()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.AlertsSetObjectArray">
            <summary>Pools.set_Alerts(Object[] value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.AlertsSilenceURLGet">
            <summary>Pools.get_AlertsSilenceURL()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.AlertsSilenceURLSetString">
            <summary>Pools.set_AlertsSilenceURL(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.BalancedGet">
            <summary>Pools.get_Balanced()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.BalancedSetBoolean">
            <summary>Pools.set_Balanced(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.BucketsGet">
            <summary>Pools.get_Buckets()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.BucketsSetBuckets">
            <summary>Pools.set_Buckets(Buckets value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.Constructor">
            <summary>Pools.Pools()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.ControllersGet">
            <summary>Pools.get_Controllers()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.ControllersSetDictionaryOfStringController">
            <summary>Pools.set_Controllers(Dictionary`2&lt;String,Controller&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.CountersGet">
            <summary>Pools.get_Counters()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.CountersSetCounters">
            <summary>Pools.set_Counters(Counters value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.FailoverWarningsGet">
            <summary>Pools.get_FailoverWarnings()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.FailoverWarningsSetObjectArray">
            <summary>Pools.set_FailoverWarnings(Object[] value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.MaxBucketCountGet">
            <summary>Pools.get_MaxBucketCount()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.MaxBucketCountSetInt32">
            <summary>Pools.set_MaxBucketCount(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.NameGet">
            <summary>Pools.get_Name()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.NameSetString">
            <summary>Pools.set_Name(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.NodeStatusesUriGet">
            <summary>Pools.get_NodeStatusesUri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.NodeStatusesUriSetString">
            <summary>Pools.set_NodeStatusesUri(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.NodesGet">
            <summary>Pools.get_Nodes()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.NodesSetNodeArray">
            <summary>Pools.set_Nodes(Node[] value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.RebalanceProgressUriGet">
            <summary>Pools.get_RebalanceProgressUri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.RebalanceProgressUriSetString">
            <summary>Pools.set_RebalanceProgressUri(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.RebalanceStatusGet">
            <summary>Pools.get_RebalanceStatus()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.RebalanceStatusSetString">
            <summary>Pools.set_RebalanceStatus(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.RemoteClustersGet">
            <summary>Pools.get_RemoteClusters()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.RemoteClustersSetRemoteClusters">
            <summary>Pools.set_RemoteClusters(RemoteClusters value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.ServerGroupsUriGet">
            <summary>Pools.get_ServerGroupsUri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.ServerGroupsUriSetString">
            <summary>Pools.set_ServerGroupsUri(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.StopRebalanceIsSafeGet">
            <summary>Pools.get_StopRebalanceIsSafe()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.StopRebalanceIsSafeSetBoolean">
            <summary>Pools.set_StopRebalanceIsSafe(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.StopRebalanceUriGet">
            <summary>Pools.get_StopRebalanceUri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.StopRebalanceUriSetString">
            <summary>Pools.set_StopRebalanceUri(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.StorageTotalsGet">
            <summary>Pools.get_StorageTotals()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.StorageTotalsSetStorageTotals">
            <summary>Pools.set_StorageTotals(StorageTotals value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.TasksGet">
            <summary>Pools.get_Tasks()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.TasksSetTasks">
            <summary>Pools.set_Tasks(Tasks value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.AllInstances.AlertsGet">
            <summary>Pools.get_Alerts()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.AllInstances.AlertsSetObjectArray">
            <summary>Pools.set_Alerts(Object[] value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.AllInstances.AlertsSilenceURLGet">
            <summary>Pools.get_AlertsSilenceURL()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.AllInstances.AlertsSilenceURLSetString">
            <summary>Pools.set_AlertsSilenceURL(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.AllInstances.BalancedGet">
            <summary>Pools.get_Balanced()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.AllInstances.BalancedSetBoolean">
            <summary>Pools.set_Balanced(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.AllInstances.BucketsGet">
            <summary>Pools.get_Buckets()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.AllInstances.BucketsSetBuckets">
            <summary>Pools.set_Buckets(Buckets value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.AllInstances.ControllersGet">
            <summary>Pools.get_Controllers()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.AllInstances.ControllersSetDictionaryOfStringController">
            <summary>Pools.set_Controllers(Dictionary`2&lt;String,Controller&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.AllInstances.CountersGet">
            <summary>Pools.get_Counters()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.AllInstances.CountersSetCounters">
            <summary>Pools.set_Counters(Counters value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.AllInstances.FailoverWarningsGet">
            <summary>Pools.get_FailoverWarnings()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.AllInstances.FailoverWarningsSetObjectArray">
            <summary>Pools.set_FailoverWarnings(Object[] value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.AllInstances.MaxBucketCountGet">
            <summary>Pools.get_MaxBucketCount()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.AllInstances.MaxBucketCountSetInt32">
            <summary>Pools.set_MaxBucketCount(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.AllInstances.NameGet">
            <summary>Pools.get_Name()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.AllInstances.NameSetString">
            <summary>Pools.set_Name(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.AllInstances.NodeStatusesUriGet">
            <summary>Pools.get_NodeStatusesUri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.AllInstances.NodeStatusesUriSetString">
            <summary>Pools.set_NodeStatusesUri(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.AllInstances.NodesGet">
            <summary>Pools.get_Nodes()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.AllInstances.NodesSetNodeArray">
            <summary>Pools.set_Nodes(Node[] value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.AllInstances.RebalanceProgressUriGet">
            <summary>Pools.get_RebalanceProgressUri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.AllInstances.RebalanceProgressUriSetString">
            <summary>Pools.set_RebalanceProgressUri(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.AllInstances.RebalanceStatusGet">
            <summary>Pools.get_RebalanceStatus()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.AllInstances.RebalanceStatusSetString">
            <summary>Pools.set_RebalanceStatus(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.AllInstances.RemoteClustersGet">
            <summary>Pools.get_RemoteClusters()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.AllInstances.RemoteClustersSetRemoteClusters">
            <summary>Pools.set_RemoteClusters(RemoteClusters value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.AllInstances.ServerGroupsUriGet">
            <summary>Pools.get_ServerGroupsUri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.AllInstances.ServerGroupsUriSetString">
            <summary>Pools.set_ServerGroupsUri(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.AllInstances.StopRebalanceIsSafeGet">
            <summary>Pools.get_StopRebalanceIsSafe()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.AllInstances.StopRebalanceIsSafeSetBoolean">
            <summary>Pools.set_StopRebalanceIsSafe(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.AllInstances.StopRebalanceUriGet">
            <summary>Pools.get_StopRebalanceUri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.AllInstances.StopRebalanceUriSetString">
            <summary>Pools.set_StopRebalanceUri(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.AllInstances.StorageTotalsGet">
            <summary>Pools.get_StorageTotals()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.AllInstances.StorageTotalsSetStorageTotals">
            <summary>Pools.set_StorageTotals(StorageTotals value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.AllInstances.TasksGet">
            <summary>Pools.get_Tasks()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPools.AllInstances.TasksSetTasks">
            <summary>Pools.set_Tasks(Tasks value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimPorts">
            <summary>Couchbase.Configuration.Server.Serialization.Ports의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimPorts.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimPorts.#ctor(Couchbase.Configuration.Server.Serialization.Ports)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimPorts.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimPorts.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPorts.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPorts.Constructor">
            <summary>Ports.Ports()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPorts.DirectGet">
            <summary>Ports.get_Direct()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPorts.DirectSetInt32">
            <summary>Ports.set_Direct(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPorts.HttpsCapiGet">
            <summary>Ports.get_HttpsCapi()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPorts.HttpsCapiSetInt32">
            <summary>Ports.set_HttpsCapi(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPorts.HttpsMgmtGet">
            <summary>Ports.get_HttpsMgmt()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPorts.HttpsMgmtSetInt32">
            <summary>Ports.set_HttpsMgmt(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPorts.ProxyGet">
            <summary>Ports.get_Proxy()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPorts.ProxySetInt32">
            <summary>Ports.set_Proxy(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPorts.SslDirectGet">
            <summary>Ports.get_SslDirect()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPorts.SslDirectSetInt32">
            <summary>Ports.set_SslDirect(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimPorts.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPorts.AllInstances.DirectGet">
            <summary>Ports.get_Direct()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPorts.AllInstances.DirectSetInt32">
            <summary>Ports.set_Direct(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPorts.AllInstances.HttpsCapiGet">
            <summary>Ports.get_HttpsCapi()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPorts.AllInstances.HttpsCapiSetInt32">
            <summary>Ports.set_HttpsCapi(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPorts.AllInstances.HttpsMgmtGet">
            <summary>Ports.get_HttpsMgmt()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPorts.AllInstances.HttpsMgmtSetInt32">
            <summary>Ports.set_HttpsMgmt(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPorts.AllInstances.ProxyGet">
            <summary>Ports.get_Proxy()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPorts.AllInstances.ProxySetInt32">
            <summary>Ports.set_Proxy(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPorts.AllInstances.SslDirectGet">
            <summary>Ports.get_SslDirect()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimPorts.AllInstances.SslDirectSetInt32">
            <summary>Ports.set_SslDirect(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimQuota">
            <summary>Couchbase.Configuration.Server.Serialization.Quota의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimQuota.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimQuota.#ctor(Couchbase.Configuration.Server.Serialization.Quota)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimQuota.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimQuota.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimQuota.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimQuota.Constructor">
            <summary>Quota.Quota()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimQuota.RamGet">
            <summary>Quota.get_Ram()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimQuota.RamSetUInt64">
            <summary>Quota.set_Ram(UInt64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimQuota.RawRAMGet">
            <summary>Quota.get_RawRAM()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimQuota.RawRAMSetUInt64">
            <summary>Quota.set_RawRAM(UInt64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimQuota.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimQuota.AllInstances.RamGet">
            <summary>Quota.get_Ram()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimQuota.AllInstances.RamSetUInt64">
            <summary>Quota.set_Ram(UInt64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimQuota.AllInstances.RawRAMGet">
            <summary>Quota.get_RawRAM()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimQuota.AllInstances.RawRAMSetUInt64">
            <summary>Quota.set_RawRAM(UInt64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimRam">
            <summary>Couchbase.Configuration.Server.Serialization.Ram의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimRam.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimRam.#ctor(Couchbase.Configuration.Server.Serialization.Ram)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimRam.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimRam.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimRam.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimRam.Constructor">
            <summary>Ram.Ram()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimRam.QuotaTotalGet">
            <summary>Ram.get_QuotaTotal()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimRam.QuotaTotalSetInt64">
            <summary>Ram.set_QuotaTotal(Int64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimRam.QuotaUsedGet">
            <summary>Ram.get_QuotaUsed()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimRam.QuotaUsedSetInt64">
            <summary>Ram.set_QuotaUsed(Int64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimRam.TotalGet">
            <summary>Ram.get_Total()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimRam.TotalSetInt64">
            <summary>Ram.set_Total(Int64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimRam.UsedByDataGet">
            <summary>Ram.get_UsedByData()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimRam.UsedByDataSetInt64">
            <summary>Ram.set_UsedByData(Int64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimRam.UsedGet">
            <summary>Ram.get_Used()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimRam.UsedSetInt64">
            <summary>Ram.set_Used(Int64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimRam.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimRam.AllInstances.QuotaTotalGet">
            <summary>Ram.get_QuotaTotal()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimRam.AllInstances.QuotaTotalSetInt64">
            <summary>Ram.set_QuotaTotal(Int64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimRam.AllInstances.QuotaUsedGet">
            <summary>Ram.get_QuotaUsed()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimRam.AllInstances.QuotaUsedSetInt64">
            <summary>Ram.set_QuotaUsed(Int64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimRam.AllInstances.TotalGet">
            <summary>Ram.get_Total()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimRam.AllInstances.TotalSetInt64">
            <summary>Ram.set_Total(Int64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimRam.AllInstances.UsedByDataGet">
            <summary>Ram.get_UsedByData()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimRam.AllInstances.UsedByDataSetInt64">
            <summary>Ram.set_UsedByData(Int64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimRam.AllInstances.UsedGet">
            <summary>Ram.get_Used()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimRam.AllInstances.UsedSetInt64">
            <summary>Ram.set_Used(Int64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimRemoteClusters">
            <summary>Couchbase.Configuration.Server.Serialization.RemoteClusters의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimRemoteClusters.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimRemoteClusters.#ctor(Couchbase.Configuration.Server.Serialization.RemoteClusters)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimRemoteClusters.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimRemoteClusters.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimRemoteClusters.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimRemoteClusters.Constructor">
            <summary>RemoteClusters.RemoteClusters()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimRemoteClusters.UriGet">
            <summary>RemoteClusters.get_Uri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimRemoteClusters.UriSetString">
            <summary>RemoteClusters.set_Uri(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimRemoteClusters.ValidateURIGet">
            <summary>RemoteClusters.get_ValidateURI()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimRemoteClusters.ValidateURISetString">
            <summary>RemoteClusters.set_ValidateURI(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimRemoteClusters.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimRemoteClusters.AllInstances.UriGet">
            <summary>RemoteClusters.get_Uri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimRemoteClusters.AllInstances.UriSetString">
            <summary>RemoteClusters.set_Uri(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimRemoteClusters.AllInstances.ValidateURIGet">
            <summary>RemoteClusters.get_ValidateURI()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimRemoteClusters.AllInstances.ValidateURISetString">
            <summary>RemoteClusters.set_ValidateURI(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimServerGroups">
            <summary>Couchbase.Configuration.Server.Serialization.ServerGroups의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimServerGroups.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimServerGroups.#ctor(Couchbase.Configuration.Server.Serialization.ServerGroups)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimServerGroups.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimServerGroups.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServerGroups.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServerGroups.Constructor">
            <summary>ServerGroups.ServerGroups()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServerGroups.GroupsGet">
            <summary>ServerGroups.get_Groups()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServerGroups.GroupsSetListOfGroup">
            <summary>ServerGroups.set_Groups(List`1&lt;Group&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServerGroups.UriGet">
            <summary>ServerGroups.get_Uri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServerGroups.UriSetString">
            <summary>ServerGroups.set_Uri(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimServerGroups.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServerGroups.AllInstances.GroupsGet">
            <summary>ServerGroups.get_Groups()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServerGroups.AllInstances.GroupsSetListOfGroup">
            <summary>ServerGroups.set_Groups(List`1&lt;Group&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServerGroups.AllInstances.UriGet">
            <summary>ServerGroups.get_Uri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServerGroups.AllInstances.UriSetString">
            <summary>ServerGroups.set_Uri(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices">
            <summary>Couchbase.Configuration.Server.Serialization.Services의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.#ctor(Couchbase.Configuration.Server.Serialization.Services)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.CapiGet">
            <summary>Services.get_Capi()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.CapiSSLGet">
            <summary>Services.get_CapiSSL()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.CapiSSLSetInt32">
            <summary>Services.set_CapiSSL(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.CapiSetInt32">
            <summary>Services.set_Capi(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.Constructor">
            <summary>Services.Services()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.FtsGet">
            <summary>Services.get_Fts()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.FtsSetInt32">
            <summary>Services.set_Fts(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.IndexAdminGet">
            <summary>Services.get_IndexAdmin()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.IndexAdminSetInt32">
            <summary>Services.set_IndexAdmin(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.IndexHttpGet">
            <summary>Services.get_IndexHttp()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.IndexHttpSetInt32">
            <summary>Services.set_IndexHttp(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.IndexScanGet">
            <summary>Services.get_IndexScan()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.IndexScanSetInt32">
            <summary>Services.set_IndexScan(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.IndexStreamCatchupGet">
            <summary>Services.get_IndexStreamCatchup()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.IndexStreamCatchupSetInt32">
            <summary>Services.set_IndexStreamCatchup(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.IndexStreamInitGet">
            <summary>Services.get_IndexStreamInit()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.IndexStreamInitSetInt32">
            <summary>Services.set_IndexStreamInit(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.IndexStreamMaintGet">
            <summary>Services.get_IndexStreamMaint()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.IndexStreamMaintSetInt32">
            <summary>Services.set_IndexStreamMaint(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.KVGet">
            <summary>Services.get_KV()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.KVSetInt32">
            <summary>Services.set_KV(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.KvSSLGet">
            <summary>Services.get_KvSSL()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.KvSSLSetInt32">
            <summary>Services.set_KvSSL(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.MgmtGet">
            <summary>Services.get_Mgmt()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.MgmtSSLGet">
            <summary>Services.get_MgmtSSL()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.MgmtSSLSetInt32">
            <summary>Services.set_MgmtSSL(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.MgmtSetInt32">
            <summary>Services.set_Mgmt(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.MoxiGet">
            <summary>Services.get_Moxi()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.MoxiSetInt32">
            <summary>Services.set_Moxi(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.N1QLGet">
            <summary>Services.get_N1QL()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.N1QLSetInt32">
            <summary>Services.set_N1QL(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.N1QLSslGet">
            <summary>Services.get_N1QLSsl()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.N1QLSslSetInt32">
            <summary>Services.set_N1QLSsl(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.ProjectorGet">
            <summary>Services.get_Projector()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.ProjectorSetInt32">
            <summary>Services.set_Projector(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.AllInstances.CapiGet">
            <summary>Services.get_Capi()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.AllInstances.CapiSSLGet">
            <summary>Services.get_CapiSSL()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.AllInstances.CapiSSLSetInt32">
            <summary>Services.set_CapiSSL(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.AllInstances.CapiSetInt32">
            <summary>Services.set_Capi(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.AllInstances.FtsGet">
            <summary>Services.get_Fts()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.AllInstances.FtsSetInt32">
            <summary>Services.set_Fts(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.AllInstances.IndexAdminGet">
            <summary>Services.get_IndexAdmin()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.AllInstances.IndexAdminSetInt32">
            <summary>Services.set_IndexAdmin(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.AllInstances.IndexHttpGet">
            <summary>Services.get_IndexHttp()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.AllInstances.IndexHttpSetInt32">
            <summary>Services.set_IndexHttp(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.AllInstances.IndexScanGet">
            <summary>Services.get_IndexScan()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.AllInstances.IndexScanSetInt32">
            <summary>Services.set_IndexScan(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.AllInstances.IndexStreamCatchupGet">
            <summary>Services.get_IndexStreamCatchup()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.AllInstances.IndexStreamCatchupSetInt32">
            <summary>Services.set_IndexStreamCatchup(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.AllInstances.IndexStreamInitGet">
            <summary>Services.get_IndexStreamInit()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.AllInstances.IndexStreamInitSetInt32">
            <summary>Services.set_IndexStreamInit(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.AllInstances.IndexStreamMaintGet">
            <summary>Services.get_IndexStreamMaint()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.AllInstances.IndexStreamMaintSetInt32">
            <summary>Services.set_IndexStreamMaint(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.AllInstances.KVGet">
            <summary>Services.get_KV()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.AllInstances.KVSetInt32">
            <summary>Services.set_KV(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.AllInstances.KvSSLGet">
            <summary>Services.get_KvSSL()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.AllInstances.KvSSLSetInt32">
            <summary>Services.set_KvSSL(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.AllInstances.MgmtGet">
            <summary>Services.get_Mgmt()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.AllInstances.MgmtSSLGet">
            <summary>Services.get_MgmtSSL()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.AllInstances.MgmtSSLSetInt32">
            <summary>Services.set_MgmtSSL(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.AllInstances.MgmtSetInt32">
            <summary>Services.set_Mgmt(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.AllInstances.MoxiGet">
            <summary>Services.get_Moxi()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.AllInstances.MoxiSetInt32">
            <summary>Services.set_Moxi(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.AllInstances.N1QLGet">
            <summary>Services.get_N1QL()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.AllInstances.N1QLSetInt32">
            <summary>Services.set_N1QL(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.AllInstances.N1QLSslGet">
            <summary>Services.get_N1QLSsl()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.AllInstances.N1QLSslSetInt32">
            <summary>Services.set_N1QLSsl(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.AllInstances.ProjectorGet">
            <summary>Services.get_Projector()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimServices.AllInstances.ProjectorSetInt32">
            <summary>Services.set_Projector(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimStats">
            <summary>Couchbase.Configuration.Server.Serialization.Stats의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimStats.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimStats.#ctor(Couchbase.Configuration.Server.Serialization.Stats)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimStats.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimStats.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimStats.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimStats.Constructor">
            <summary>Stats.Stats()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimStats.DirectoryURIGet">
            <summary>Stats.get_DirectoryURI()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimStats.DirectoryURISetString">
            <summary>Stats.set_DirectoryURI(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimStats.NodeStatsListURIGet">
            <summary>Stats.get_NodeStatsListURI()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimStats.NodeStatsListURISetString">
            <summary>Stats.set_NodeStatsListURI(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimStats.UriGet">
            <summary>Stats.get_Uri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimStats.UriSetString">
            <summary>Stats.set_Uri(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimStats.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimStats.AllInstances.DirectoryURIGet">
            <summary>Stats.get_DirectoryURI()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimStats.AllInstances.DirectoryURISetString">
            <summary>Stats.set_DirectoryURI(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimStats.AllInstances.NodeStatsListURIGet">
            <summary>Stats.get_NodeStatsListURI()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimStats.AllInstances.NodeStatsListURISetString">
            <summary>Stats.set_NodeStatsListURI(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimStats.AllInstances.UriGet">
            <summary>Stats.get_Uri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimStats.AllInstances.UriSetString">
            <summary>Stats.set_Uri(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimStorageTotals">
            <summary>Couchbase.Configuration.Server.Serialization.StorageTotals의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimStorageTotals.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimStorageTotals.#ctor(Couchbase.Configuration.Server.Serialization.StorageTotals)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimStorageTotals.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimStorageTotals.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimStorageTotals.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimStorageTotals.Constructor">
            <summary>StorageTotals.StorageTotals()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimStorageTotals.HddGet">
            <summary>StorageTotals.get_Hdd()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimStorageTotals.HddSetHdd">
            <summary>StorageTotals.set_Hdd(Hdd value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimStorageTotals.RamGet">
            <summary>StorageTotals.get_Ram()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimStorageTotals.RamSetRam">
            <summary>StorageTotals.set_Ram(Ram value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimStorageTotals.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimStorageTotals.AllInstances.HddGet">
            <summary>StorageTotals.get_Hdd()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimStorageTotals.AllInstances.HddSetHdd">
            <summary>StorageTotals.set_Hdd(Hdd value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimStorageTotals.AllInstances.RamGet">
            <summary>StorageTotals.get_Ram()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimStorageTotals.AllInstances.RamSetRam">
            <summary>StorageTotals.set_Ram(Ram value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimTasks">
            <summary>Couchbase.Configuration.Server.Serialization.Tasks의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimTasks.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimTasks.#ctor(Couchbase.Configuration.Server.Serialization.Tasks)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimTasks.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimTasks.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimTasks.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimTasks.Constructor">
            <summary>Tasks.Tasks()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimTasks.UriGet">
            <summary>Tasks.get_Uri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimTasks.UriSetString">
            <summary>Tasks.set_Uri(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimTasks.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimTasks.AllInstances.UriGet">
            <summary>Tasks.get_Uri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimTasks.AllInstances.UriSetString">
            <summary>Tasks.set_Uri(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimVBucketServerMap">
            <summary>Couchbase.Configuration.Server.Serialization.VBucketServerMap의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimVBucketServerMap.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimVBucketServerMap.#ctor(Couchbase.Configuration.Server.Serialization.VBucketServerMap)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimVBucketServerMap.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimVBucketServerMap.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimVBucketServerMap.Bind(System.IEquatable{Couchbase.Configuration.Server.Serialization.VBucketServerMap})">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimVBucketServerMap.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimVBucketServerMap.Constructor">
            <summary>VBucketServerMap.VBucketServerMap()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimVBucketServerMap.EqualsObject">
            <summary>VBucketServerMap.Equals(Object obj)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimVBucketServerMap.EqualsVBucketServerMap">
            <summary>VBucketServerMap.Equals(VBucketServerMap other)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimVBucketServerMap.GetHashCode">
            <summary>VBucketServerMap.GetHashCode()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimVBucketServerMap.HashAlgorithmGet">
            <summary>VBucketServerMap.get_HashAlgorithm()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimVBucketServerMap.HashAlgorithmSetString">
            <summary>VBucketServerMap.set_HashAlgorithm(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimVBucketServerMap.IPEndPointsGet">
            <summary>VBucketServerMap.get_IPEndPoints()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimVBucketServerMap.NumReplicasGet">
            <summary>VBucketServerMap.get_NumReplicas()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimVBucketServerMap.NumReplicasSetInt32">
            <summary>VBucketServerMap.set_NumReplicas(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimVBucketServerMap.ServerListGet">
            <summary>VBucketServerMap.get_ServerList()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimVBucketServerMap.ServerListSetStringArray">
            <summary>VBucketServerMap.set_ServerList(String[] value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimVBucketServerMap.VBucketMapForwardGet">
            <summary>VBucketServerMap.get_VBucketMapForward()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimVBucketServerMap.VBucketMapForwardSetInt32ArrayArray">
            <summary>VBucketServerMap.set_VBucketMapForward(Int32[][] value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimVBucketServerMap.VBucketMapGet">
            <summary>VBucketServerMap.get_VBucketMap()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimVBucketServerMap.VBucketMapSetInt32ArrayArray">
            <summary>VBucketServerMap.set_VBucketMap(Int32[][] value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimVBucketServerMap.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimVBucketServerMap.AllInstances.EqualsObject">
            <summary>VBucketServerMap.Equals(Object obj)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimVBucketServerMap.AllInstances.EqualsVBucketServerMap">
            <summary>VBucketServerMap.Equals(VBucketServerMap other)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimVBucketServerMap.AllInstances.GetHashCode01">
            <summary>VBucketServerMap.GetHashCode()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimVBucketServerMap.AllInstances.HashAlgorithmGet">
            <summary>VBucketServerMap.get_HashAlgorithm()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimVBucketServerMap.AllInstances.HashAlgorithmSetString">
            <summary>VBucketServerMap.set_HashAlgorithm(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimVBucketServerMap.AllInstances.IPEndPointsGet">
            <summary>VBucketServerMap.get_IPEndPoints()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimVBucketServerMap.AllInstances.NumReplicasGet">
            <summary>VBucketServerMap.get_NumReplicas()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimVBucketServerMap.AllInstances.NumReplicasSetInt32">
            <summary>VBucketServerMap.set_NumReplicas(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimVBucketServerMap.AllInstances.ServerListGet">
            <summary>VBucketServerMap.get_ServerList()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimVBucketServerMap.AllInstances.ServerListSetStringArray">
            <summary>VBucketServerMap.set_ServerList(String[] value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimVBucketServerMap.AllInstances.VBucketMapForwardGet">
            <summary>VBucketServerMap.get_VBucketMapForward()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimVBucketServerMap.AllInstances.VBucketMapForwardSetInt32ArrayArray">
            <summary>VBucketServerMap.set_VBucketMapForward(Int32[][] value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimVBucketServerMap.AllInstances.VBucketMapGet">
            <summary>VBucketServerMap.get_VBucketMap()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimVBucketServerMap.AllInstances.VBucketMapSetInt32ArrayArray">
            <summary>VBucketServerMap.set_VBucketMap(Int32[][] value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimViewFragmentationThreshold">
            <summary>Couchbase.Configuration.Server.Serialization.ViewFragmentationThreshold의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimViewFragmentationThreshold.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimViewFragmentationThreshold.#ctor(Couchbase.Configuration.Server.Serialization.ViewFragmentationThreshold)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimViewFragmentationThreshold.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.ShimViewFragmentationThreshold.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimViewFragmentationThreshold.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimViewFragmentationThreshold.Constructor">
            <summary>ViewFragmentationThreshold.ViewFragmentationThreshold()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimViewFragmentationThreshold.PercentageGet">
            <summary>ViewFragmentationThreshold.get_Percentage()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimViewFragmentationThreshold.PercentageSetString">
            <summary>ViewFragmentationThreshold.set_Percentage(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimViewFragmentationThreshold.SizeGet">
            <summary>ViewFragmentationThreshold.get_Size()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimViewFragmentationThreshold.SizeSetString">
            <summary>ViewFragmentationThreshold.set_Size(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.ShimViewFragmentationThreshold.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimViewFragmentationThreshold.AllInstances.PercentageGet">
            <summary>ViewFragmentationThreshold.get_Percentage()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimViewFragmentationThreshold.AllInstances.PercentageSetString">
            <summary>ViewFragmentationThreshold.set_Percentage(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimViewFragmentationThreshold.AllInstances.SizeGet">
            <summary>ViewFragmentationThreshold.get_Size()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.ShimViewFragmentationThreshold.AllInstances.SizeSetString">
            <summary>ViewFragmentationThreshold.set_Size(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.StubBootstrapException">
            <summary>Couchbase.Configuration.Server.Serialization.BootstrapException의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubBootstrapException.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubBootstrapException.#ctor(System.String)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubBootstrapException.#ctor(System.String,System.Exception)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubBootstrapException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubBootstrapException.AttachBackingFieldToHelpLink">
            <summary>대리자를 연결하여 StubBootstrapException.HelpLink을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubBootstrapException.AttachBackingFieldToSource">
            <summary>대리자를 연결하여 StubBootstrapException.Source을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubBootstrapException.DataGet">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubBootstrapException.GetBaseException">
            <summary>Exception.GetBaseException()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubBootstrapException.GetBaseException01">
            <summary>Exception.GetBaseException()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubBootstrapException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Exception.GetObjectData(SerializationInfo info, StreamingContext context)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubBootstrapException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Exception.GetObjectData(SerializationInfo info, StreamingContext context)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubBootstrapException.HelpLinkGet">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubBootstrapException.HelpLinkSetString">
            <summary>Exception.set_HelpLink(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubBootstrapException.InitializeStub">
            <summary>type StubBootstrapException의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubBootstrapException.MessageGet">
            <summary>Exception.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubBootstrapException.SourceGet">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubBootstrapException.SourceSetString">
            <summary>Exception.set_Source(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubBootstrapException.StackTraceGet">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubBootstrapException.ToString">
            <summary>Exception.ToString()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubBootstrapException.ToString01">
            <summary>Exception.ToString()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubBootstrapException.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubBootstrapException.Data">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubBootstrapException.HelpLink">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubBootstrapException.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubBootstrapException.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubBootstrapException.Message">
            <summary>Exception.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubBootstrapException.Source">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubBootstrapException.StackTrace">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.StubController">
            <summary>Couchbase.Configuration.Server.Serialization.Controller의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubController.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubController.InitializeStub">
            <summary>type StubController의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubController.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubController.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubController.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.StubDdocs">
            <summary>Couchbase.Configuration.Server.Serialization.Ddocs의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubDdocs.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubDdocs.InitializeStub">
            <summary>type StubDdocs의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubDdocs.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubDdocs.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubDdocs.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.StubGroup">
            <summary>Couchbase.Configuration.Server.Serialization.Group의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubGroup.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubGroup.InitializeStub">
            <summary>type StubGroup의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubGroup.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubGroup.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubGroup.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig">
            <summary>Couchbase.Configuration.Server.Serialization.IBucketConfig의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.#ctor">
            <summary>type StubIBucketConfig의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.AreNodesEqualIBucketConfig">
            <summary>IBucketConfig.AreNodesEqual(IBucketConfig other)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.AttachBackingFieldToAuthType">
            <summary>대리자를 연결하여 StubIBucketConfig.AuthType을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.AttachBackingFieldToBasicStats">
            <summary>대리자를 연결하여 StubIBucketConfig.BasicStats을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.AttachBackingFieldToBucketCapabilities">
            <summary>대리자를 연결하여 StubIBucketConfig.BucketCapabilities을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.AttachBackingFieldToBucketCapabilitiesVer">
            <summary>대리자를 연결하여 StubIBucketConfig.BucketCapabilitiesVer을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.AttachBackingFieldToBucketType">
            <summary>대리자를 연결하여 StubIBucketConfig.BucketType을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.AttachBackingFieldToControllers">
            <summary>대리자를 연결하여 StubIBucketConfig.Controllers을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.AttachBackingFieldToDdocs">
            <summary>대리자를 연결하여 StubIBucketConfig.Ddocs을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.AttachBackingFieldToLocalRandomKeyUri">
            <summary>대리자를 연결하여 StubIBucketConfig.LocalRandomKeyUri을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.AttachBackingFieldToName">
            <summary>대리자를 연결하여 StubIBucketConfig.Name을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.AttachBackingFieldToNodeLocator">
            <summary>대리자를 연결하여 StubIBucketConfig.NodeLocator을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.AttachBackingFieldToNodes">
            <summary>대리자를 연결하여 StubIBucketConfig.Nodes을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.AttachBackingFieldToNodesExt">
            <summary>대리자를 연결하여 StubIBucketConfig.NodesExt을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.AttachBackingFieldToPassword">
            <summary>대리자를 연결하여 StubIBucketConfig.Password을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.AttachBackingFieldToProxyPort">
            <summary>대리자를 연결하여 StubIBucketConfig.ProxyPort을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.AttachBackingFieldToQuota">
            <summary>대리자를 연결하여 StubIBucketConfig.Quota을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.AttachBackingFieldToReplicaIndex">
            <summary>대리자를 연결하여 StubIBucketConfig.ReplicaIndex을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.AttachBackingFieldToReplicaNumber">
            <summary>대리자를 연결하여 StubIBucketConfig.ReplicaNumber을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.AttachBackingFieldToRev">
            <summary>대리자를 연결하여 StubIBucketConfig.Rev을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.AttachBackingFieldToSaslPassword">
            <summary>대리자를 연결하여 StubIBucketConfig.SaslPassword을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.AttachBackingFieldToStats">
            <summary>대리자를 연결하여 StubIBucketConfig.Stats을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.AttachBackingFieldToStreamingUri">
            <summary>대리자를 연결하여 StubIBucketConfig.StreamingUri을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.AttachBackingFieldToSurrogateHost">
            <summary>대리자를 연결하여 StubIBucketConfig.SurrogateHost을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.AttachBackingFieldToTerseStreamingUri">
            <summary>대리자를 연결하여 StubIBucketConfig.TerseStreamingUri을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.AttachBackingFieldToTerseUri">
            <summary>대리자를 연결하여 StubIBucketConfig.TerseUri을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.AttachBackingFieldToThreadsNumber">
            <summary>대리자를 연결하여 StubIBucketConfig.ThreadsNumber을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.AttachBackingFieldToUri">
            <summary>대리자를 연결하여 StubIBucketConfig.Uri을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.AttachBackingFieldToUseSsl">
            <summary>대리자를 연결하여 StubIBucketConfig.UseSsl을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.AttachBackingFieldToUuid">
            <summary>대리자를 연결하여 StubIBucketConfig.Uuid을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.AttachBackingFieldToVBucketServerMap">
            <summary>대리자를 연결하여 StubIBucketConfig.VBucketServerMap을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.AuthTypeGet">
            <summary>IBucketConfig.get_AuthType()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.AuthTypeSetString">
            <summary>IBucketConfig.set_AuthType(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.BasicStatsGet">
            <summary>IBucketConfig.get_BasicStats()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.BasicStatsSetBasicStats">
            <summary>IBucketConfig.set_BasicStats(BasicStats value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.BucketCapabilitiesGet">
            <summary>IBucketConfig.get_BucketCapabilities()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.BucketCapabilitiesSetStringArray">
            <summary>IBucketConfig.set_BucketCapabilities(String[] value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.BucketCapabilitiesVerGet">
            <summary>IBucketConfig.get_BucketCapabilitiesVer()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.BucketCapabilitiesVerSetString">
            <summary>IBucketConfig.set_BucketCapabilitiesVer(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.BucketTypeGet">
            <summary>IBucketConfig.get_BucketType()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.BucketTypeSetString">
            <summary>IBucketConfig.set_BucketType(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.ControllersGet">
            <summary>IBucketConfig.get_Controllers()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.ControllersSetControllers">
            <summary>IBucketConfig.set_Controllers(Controllers value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.cnc::Couchbase#Configuration#Server#Serialization#IBucketConfig#AreNodesEqual(Couchbase.Configuration.Server.Serialization.IBucketConfig)">
            <summary>IBucketConfig.AreNodesEqual(IBucketConfig other)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.cnc::Couchbase#Configuration#Server#Serialization#IBucketConfig#GetRandomNode">
            <summary>IBucketConfig.GetRandomNode()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.cnc::Couchbase#Configuration#Server#Serialization#IBucketConfig#GetTerseStreamingUri(Couchbase.Configuration.Server.Serialization.Node,System.Boolean)">
            <summary>IBucketConfig.GetTerseStreamingUri(Node node, Boolean useSsl)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.cnc::Couchbase#Configuration#Server#Serialization#IBucketConfig#GetTerseUri(Couchbase.Configuration.Server.Serialization.Node,System.Boolean)">
            <summary>IBucketConfig.GetTerseUri(Node node, Boolean useSsl)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.cnc::Couchbase#Configuration#Server#Serialization#IBucketConfig#IsVBucketServerMapEqual(Couchbase.Configuration.Server.Serialization.IBucketConfig)">
            <summary>IBucketConfig.IsVBucketServerMapEqual(IBucketConfig other)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.DdocsGet">
            <summary>IBucketConfig.get_Ddocs()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.DdocsSetDdocs">
            <summary>IBucketConfig.set_Ddocs(Ddocs value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.EqualsBucketConfig">
            <summary>IEquatable`1.Equals(!0 other)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.GetRandomNode">
            <summary>IBucketConfig.GetRandomNode()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.GetTerseStreamingUriNodeBoolean">
            <summary>IBucketConfig.GetTerseStreamingUri(Node node, Boolean useSsl)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.GetTerseUriNodeBoolean">
            <summary>IBucketConfig.GetTerseUri(Node node, Boolean useSsl)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.IsVBucketServerMapEqualIBucketConfig">
            <summary>IBucketConfig.IsVBucketServerMapEqual(IBucketConfig other)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.LocalRandomKeyUriGet">
            <summary>IBucketConfig.get_LocalRandomKeyUri()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.LocalRandomKeyUriSetString">
            <summary>IBucketConfig.set_LocalRandomKeyUri(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.NameGet">
            <summary>IBucketConfig.get_Name()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.NameSetString">
            <summary>IBucketConfig.set_Name(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.NodeLocatorGet">
            <summary>IBucketConfig.get_NodeLocator()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.NodeLocatorSetString">
            <summary>IBucketConfig.set_NodeLocator(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.NodesExtGet">
            <summary>IBucketConfig.get_NodesExt()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.NodesExtSetNodeExtArray">
            <summary>IBucketConfig.set_NodesExt(NodeExt[] value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.NodesGet">
            <summary>IBucketConfig.get_Nodes()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.NodesSetNodeArray">
            <summary>IBucketConfig.set_Nodes(Node[] value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.PasswordGet">
            <summary>IBucketConfig.get_Password()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.PasswordSetString">
            <summary>IBucketConfig.set_Password(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.ProxyPortGet">
            <summary>IBucketConfig.get_ProxyPort()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.ProxyPortSetInt32">
            <summary>IBucketConfig.set_ProxyPort(Int32 value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.QuotaGet">
            <summary>IBucketConfig.get_Quota()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.QuotaSetQuota">
            <summary>IBucketConfig.set_Quota(Quota value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.ReplicaIndexGet">
            <summary>IBucketConfig.get_ReplicaIndex()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.ReplicaIndexSetBoolean">
            <summary>IBucketConfig.set_ReplicaIndex(Boolean value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.ReplicaNumberGet">
            <summary>IBucketConfig.get_ReplicaNumber()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.ReplicaNumberSetInt32">
            <summary>IBucketConfig.set_ReplicaNumber(Int32 value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.RevGet">
            <summary>IBucketConfig.get_Rev()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.RevSetUInt32">
            <summary>IBucketConfig.set_Rev(UInt32 value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.SaslPasswordGet">
            <summary>IBucketConfig.get_SaslPassword()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.SaslPasswordSetString">
            <summary>IBucketConfig.set_SaslPassword(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.StatsGet">
            <summary>IBucketConfig.get_Stats()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.StatsSetStats">
            <summary>IBucketConfig.set_Stats(Stats value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.StreamingUriGet">
            <summary>IBucketConfig.get_StreamingUri()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.StreamingUriSetString">
            <summary>IBucketConfig.set_StreamingUri(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.SurrogateHostGet">
            <summary>IBucketConfig.get_SurrogateHost()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.SurrogateHostSetString">
            <summary>IBucketConfig.set_SurrogateHost(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.global::System#IEquatable{Couchbase#Configuration#Server#Serialization#BucketConfig}#Equals(Couchbase.Configuration.Server.Serialization.BucketConfig)">
            <summary>IEquatable`1.Equals(!0 other)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.TerseStreamingUriGet">
            <summary>IBucketConfig.get_TerseStreamingUri()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.TerseStreamingUriSetString">
            <summary>IBucketConfig.set_TerseStreamingUri(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.TerseUriGet">
            <summary>IBucketConfig.get_TerseUri()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.TerseUriSetString">
            <summary>IBucketConfig.set_TerseUri(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.ThreadsNumberGet">
            <summary>IBucketConfig.get_ThreadsNumber()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.ThreadsNumberSetInt32">
            <summary>IBucketConfig.set_ThreadsNumber(Int32 value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.UriGet">
            <summary>IBucketConfig.get_Uri()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.UriSetString">
            <summary>IBucketConfig.set_Uri(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.UseSslGet">
            <summary>IBucketConfig.get_UseSsl()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.UseSslSetBoolean">
            <summary>IBucketConfig.set_UseSsl(Boolean value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.UuidGet">
            <summary>IBucketConfig.get_Uuid()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.UuidSetString">
            <summary>IBucketConfig.set_Uuid(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.VBucketServerMapGet">
            <summary>IBucketConfig.get_VBucketServerMap()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.VBucketServerMapSetVBucketServerMap">
            <summary>IBucketConfig.set_VBucketServerMap(VBucketServerMap value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.cnc::Couchbase#Configuration#Server#Serialization#IBucketConfig#AuthType">
            <summary>IBucketConfig.get_AuthType()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.cnc::Couchbase#Configuration#Server#Serialization#IBucketConfig#BasicStats">
            <summary>IBucketConfig.get_BasicStats()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.cnc::Couchbase#Configuration#Server#Serialization#IBucketConfig#BucketCapabilities">
            <summary>IBucketConfig.get_BucketCapabilities()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.cnc::Couchbase#Configuration#Server#Serialization#IBucketConfig#BucketCapabilitiesVer">
            <summary>IBucketConfig.get_BucketCapabilitiesVer()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.cnc::Couchbase#Configuration#Server#Serialization#IBucketConfig#BucketType">
            <summary>IBucketConfig.get_BucketType()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.cnc::Couchbase#Configuration#Server#Serialization#IBucketConfig#Controllers">
            <summary>IBucketConfig.get_Controllers()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.cnc::Couchbase#Configuration#Server#Serialization#IBucketConfig#Ddocs">
            <summary>IBucketConfig.get_Ddocs()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.cnc::Couchbase#Configuration#Server#Serialization#IBucketConfig#LocalRandomKeyUri">
            <summary>IBucketConfig.get_LocalRandomKeyUri()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.cnc::Couchbase#Configuration#Server#Serialization#IBucketConfig#Name">
            <summary>IBucketConfig.get_Name()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.cnc::Couchbase#Configuration#Server#Serialization#IBucketConfig#NodeLocator">
            <summary>IBucketConfig.get_NodeLocator()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.cnc::Couchbase#Configuration#Server#Serialization#IBucketConfig#Nodes">
            <summary>IBucketConfig.get_Nodes()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.cnc::Couchbase#Configuration#Server#Serialization#IBucketConfig#NodesExt">
            <summary>IBucketConfig.get_NodesExt()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.cnc::Couchbase#Configuration#Server#Serialization#IBucketConfig#Password">
            <summary>IBucketConfig.get_Password()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.cnc::Couchbase#Configuration#Server#Serialization#IBucketConfig#ProxyPort">
            <summary>IBucketConfig.get_ProxyPort()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.cnc::Couchbase#Configuration#Server#Serialization#IBucketConfig#Quota">
            <summary>IBucketConfig.get_Quota()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.cnc::Couchbase#Configuration#Server#Serialization#IBucketConfig#ReplicaIndex">
            <summary>IBucketConfig.get_ReplicaIndex()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.cnc::Couchbase#Configuration#Server#Serialization#IBucketConfig#ReplicaNumber">
            <summary>IBucketConfig.get_ReplicaNumber()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.cnc::Couchbase#Configuration#Server#Serialization#IBucketConfig#Rev">
            <summary>IBucketConfig.get_Rev()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.cnc::Couchbase#Configuration#Server#Serialization#IBucketConfig#SaslPassword">
            <summary>IBucketConfig.get_SaslPassword()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.cnc::Couchbase#Configuration#Server#Serialization#IBucketConfig#Stats">
            <summary>IBucketConfig.get_Stats()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.cnc::Couchbase#Configuration#Server#Serialization#IBucketConfig#StreamingUri">
            <summary>IBucketConfig.get_StreamingUri()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.cnc::Couchbase#Configuration#Server#Serialization#IBucketConfig#SurrogateHost">
            <summary>IBucketConfig.get_SurrogateHost()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.cnc::Couchbase#Configuration#Server#Serialization#IBucketConfig#TerseStreamingUri">
            <summary>IBucketConfig.get_TerseStreamingUri()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.cnc::Couchbase#Configuration#Server#Serialization#IBucketConfig#TerseUri">
            <summary>IBucketConfig.get_TerseUri()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.cnc::Couchbase#Configuration#Server#Serialization#IBucketConfig#ThreadsNumber">
            <summary>IBucketConfig.get_ThreadsNumber()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.cnc::Couchbase#Configuration#Server#Serialization#IBucketConfig#Uri">
            <summary>IBucketConfig.get_Uri()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.cnc::Couchbase#Configuration#Server#Serialization#IBucketConfig#UseSsl">
            <summary>IBucketConfig.get_UseSsl()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.cnc::Couchbase#Configuration#Server#Serialization#IBucketConfig#Uuid">
            <summary>IBucketConfig.get_Uuid()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubIBucketConfig.cnc::Couchbase#Configuration#Server#Serialization#IBucketConfig#VBucketServerMap">
            <summary>IBucketConfig.get_VBucketServerMap()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.StubServerGroups">
            <summary>Couchbase.Configuration.Server.Serialization.ServerGroups의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubServerGroups.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubServerGroups.InitializeStub">
            <summary>type StubServerGroups의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubServerGroups.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubServerGroups.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubServerGroups.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Configuration.Server.Serialization.Fakes.StubServices">
            <summary>Couchbase.Configuration.Server.Serialization.Services의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubServices.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Configuration.Server.Serialization.Fakes.StubServices.InitializeStub">
            <summary>type StubServices의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubServices.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubServices.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Configuration.Server.Serialization.Fakes.StubServices.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Buckets.Fakes.ShimMutationToken">
            <summary>Couchbase.Core.Buckets.MutationToken의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Buckets.Fakes.ShimMutationToken.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Buckets.Fakes.ShimMutationToken.#ctor(Couchbase.Core.Buckets.MutationToken)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Buckets.Fakes.ShimMutationToken.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Buckets.Fakes.ShimMutationToken.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Buckets.Fakes.ShimMutationToken.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Buckets.Fakes.ShimMutationToken.BucketRefGet">
            <summary>MutationToken.get_BucketRef()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Buckets.Fakes.ShimMutationToken.BucketRefSetString">
            <summary>MutationToken.set_BucketRef(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Buckets.Fakes.ShimMutationToken.ConstructorInt16Int64Int64">
            <summary>MutationToken.MutationToken(Int16 vBucketId, Int64 vBucketUUID, Int64 sequenceNumber)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Buckets.Fakes.ShimMutationToken.ConstructorStringInt16Int64Int64">
            <summary>MutationToken.MutationToken(String bucketRef, Int16 vBucketId, Int64 vBucketUUID, Int64 sequenceNumber)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Buckets.Fakes.ShimMutationToken.EqualsObject">
            <summary>MutationToken.Equals(Object obj)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Buckets.Fakes.ShimMutationToken.GetHashCode">
            <summary>MutationToken.GetHashCode()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Buckets.Fakes.ShimMutationToken.IsSetGet">
            <summary>MutationToken.get_IsSet()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Buckets.Fakes.ShimMutationToken.SequenceNumberGet">
            <summary>MutationToken.get_SequenceNumber()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Buckets.Fakes.ShimMutationToken.SequenceNumberSetInt64">
            <summary>MutationToken.set_SequenceNumber(Int64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Buckets.Fakes.ShimMutationToken.ToString">
            <summary>MutationToken.ToString()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Buckets.Fakes.ShimMutationToken.VBucketIdGet">
            <summary>MutationToken.get_VBucketId()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Buckets.Fakes.ShimMutationToken.VBucketIdSetInt16">
            <summary>MutationToken.set_VBucketId(Int16 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Buckets.Fakes.ShimMutationToken.VBucketUUIDGet">
            <summary>MutationToken.get_VBucketUUID()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Buckets.Fakes.ShimMutationToken.VBucketUUIDSetInt64">
            <summary>MutationToken.set_VBucketUUID(Int64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Buckets.Fakes.ShimMutationToken.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Core.Buckets.Fakes.ShimMutationToken.AllInstances.BucketRefGet">
            <summary>MutationToken.get_BucketRef()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Buckets.Fakes.ShimMutationToken.AllInstances.BucketRefSetString">
            <summary>MutationToken.set_BucketRef(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Buckets.Fakes.ShimMutationToken.AllInstances.EqualsObject">
            <summary>MutationToken.Equals(Object obj)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Buckets.Fakes.ShimMutationToken.AllInstances.GetHashCode01">
            <summary>MutationToken.GetHashCode()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Buckets.Fakes.ShimMutationToken.AllInstances.IsSetGet">
            <summary>MutationToken.get_IsSet()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Buckets.Fakes.ShimMutationToken.AllInstances.SequenceNumberGet">
            <summary>MutationToken.get_SequenceNumber()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Buckets.Fakes.ShimMutationToken.AllInstances.SequenceNumberSetInt64">
            <summary>MutationToken.set_SequenceNumber(Int64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Buckets.Fakes.ShimMutationToken.AllInstances.ToString01">
            <summary>MutationToken.ToString()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Buckets.Fakes.ShimMutationToken.AllInstances.VBucketIdGet">
            <summary>MutationToken.get_VBucketId()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Buckets.Fakes.ShimMutationToken.AllInstances.VBucketIdSetInt16">
            <summary>MutationToken.set_VBucketId(Int16 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Buckets.Fakes.ShimMutationToken.AllInstances.VBucketUUIDGet">
            <summary>MutationToken.get_VBucketUUID()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Buckets.Fakes.ShimMutationToken.AllInstances.VBucketUUIDSetInt64">
            <summary>MutationToken.set_VBucketUUID(Int64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Diagnostics.Fakes.ShimCommonLogStore">
            <summary>Couchbase.Core.Diagnostics.CommonLogStore의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Diagnostics.Fakes.ShimCommonLogStore.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Diagnostics.Fakes.ShimCommonLogStore.#ctor(Couchbase.Core.Diagnostics.CommonLogStore)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Diagnostics.Fakes.ShimCommonLogStore.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Diagnostics.Fakes.ShimCommonLogStore.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Diagnostics.Fakes.ShimCommonLogStore.Bind(Couchbase.Core.Diagnostics.ITimingStore)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Diagnostics.Fakes.ShimCommonLogStore.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Diagnostics.Fakes.ShimCommonLogStore.ConstructorILog">
            <summary>CommonLogStore.CommonLogStore(ILog log)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Diagnostics.Fakes.ShimCommonLogStore.EnabledGet">
            <summary>CommonLogStore.get_Enabled()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Diagnostics.Fakes.ShimCommonLogStore.WriteStringObjectArray">
            <summary>CommonLogStore.Write(String format, Object[] args)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Diagnostics.Fakes.ShimCommonLogStore.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Core.Diagnostics.Fakes.ShimCommonLogStore.AllInstances.EnabledGet">
            <summary>CommonLogStore.get_Enabled()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Diagnostics.Fakes.ShimCommonLogStore.AllInstances.WriteStringObjectArray">
            <summary>CommonLogStore.Write(String format, Object[] args)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Diagnostics.Fakes.ShimTimingFactory">
            <summary>Couchbase.Core.Diagnostics.TimingFactory의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Diagnostics.Fakes.ShimTimingFactory.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Diagnostics.Fakes.ShimTimingFactory.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Diagnostics.Fakes.ShimTimingFactory.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Diagnostics.Fakes.ShimTimingFactory.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Diagnostics.Fakes.ShimTimingFactory.GetTimerILog">
            <summary>TimingFactory.GetTimer(ILog log)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Diagnostics.Fakes.ShimTimingFactory.StaticConstructor">
            <summary>TimingFactory.TimingFactory()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Diagnostics.Fakes.StubCommonLogStore">
            <summary>Couchbase.Core.Diagnostics.CommonLogStore의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Diagnostics.Fakes.StubCommonLogStore.#ctor(Common.Logging.ILog)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Diagnostics.Fakes.StubCommonLogStore.InitializeStub">
            <summary>type StubCommonLogStore의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Diagnostics.Fakes.StubCommonLogStore.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Diagnostics.Fakes.StubCommonLogStore.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Diagnostics.Fakes.StubCommonLogStore.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Diagnostics.Fakes.StubIOperationTimer">
            <summary>Couchbase.Core.Diagnostics.IOperationTimer의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Diagnostics.Fakes.StubIOperationTimer.#ctor">
            <summary>type StubIOperationTimer의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Diagnostics.Fakes.StubIOperationTimer.AttachBackingFieldToStore">
            <summary>대리자를 연결하여 StubIOperationTimer.Store을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Diagnostics.Fakes.StubIOperationTimer.Dispose">
            <summary>IDisposable.Dispose()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Diagnostics.Fakes.StubIOperationTimer.StoreGet">
            <summary>IOperationTimer.get_Store()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Diagnostics.Fakes.StubIOperationTimer.StoreSetITimingStore">
            <summary>IOperationTimer.set_Store(ITimingStore value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Diagnostics.Fakes.StubIOperationTimer.global::System#IDisposable#Dispose">
            <summary>IDisposable.Dispose()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Diagnostics.Fakes.StubIOperationTimer.cnc::Couchbase#Core#Diagnostics#IOperationTimer#Store">
            <summary>IOperationTimer.get_Store()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Diagnostics.Fakes.StubITimingStore">
            <summary>Couchbase.Core.Diagnostics.ITimingStore의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Diagnostics.Fakes.StubITimingStore.#ctor">
            <summary>type StubITimingStore의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Diagnostics.Fakes.StubITimingStore.cnc::Couchbase#Core#Diagnostics#ITimingStore#Write(System.String,System.Object[])">
            <summary>ITimingStore.Write(String format, Object[] args)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Diagnostics.Fakes.StubITimingStore.EnabledGet">
            <summary>ITimingStore.get_Enabled()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Diagnostics.Fakes.StubITimingStore.WriteStringObjectArray">
            <summary>ITimingStore.Write(String format, Object[] args)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Diagnostics.Fakes.StubITimingStore.cnc::Couchbase#Core#Diagnostics#ITimingStore#Enabled">
            <summary>ITimingStore.get_Enabled()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Fakes.ShimBucketAlreadyOpenException">
            <summary>Couchbase.Core.BucketAlreadyOpenException의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimBucketAlreadyOpenException.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimBucketAlreadyOpenException.#ctor(Couchbase.Core.BucketAlreadyOpenException)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimBucketAlreadyOpenException.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimBucketAlreadyOpenException.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimBucketAlreadyOpenException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimBucketAlreadyOpenException.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimBucketAlreadyOpenException.Constructor">
            <summary>BucketAlreadyOpenException.BucketAlreadyOpenException()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimBucketAlreadyOpenException.ConstructorSerializationInfoStreamingContext">
            <summary>BucketAlreadyOpenException.BucketAlreadyOpenException(SerializationInfo info, StreamingContext context)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimBucketAlreadyOpenException.ConstructorString">
            <summary>BucketAlreadyOpenException.BucketAlreadyOpenException(String message)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimBucketAlreadyOpenException.ConstructorStringException">
            <summary>BucketAlreadyOpenException.BucketAlreadyOpenException(String message, Exception innerException)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Fakes.ShimBucketAlreadyOpenException.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Core.Fakes.ShimBucketNotFoundException">
            <summary>Couchbase.Core.BucketNotFoundException의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimBucketNotFoundException.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimBucketNotFoundException.#ctor(Couchbase.Core.BucketNotFoundException)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimBucketNotFoundException.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimBucketNotFoundException.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimBucketNotFoundException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimBucketNotFoundException.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimBucketNotFoundException.Constructor">
            <summary>BucketNotFoundException.BucketNotFoundException()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimBucketNotFoundException.ConstructorSerializationInfoStreamingContext">
            <summary>BucketNotFoundException.BucketNotFoundException(SerializationInfo info, StreamingContext context)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimBucketNotFoundException.ConstructorString">
            <summary>BucketNotFoundException.BucketNotFoundException(String message)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimBucketNotFoundException.ConstructorStringException">
            <summary>BucketNotFoundException.BucketNotFoundException(String message, Exception innerException)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimBucketNotFoundException.ConstructorStringString">
            <summary>BucketNotFoundException.BucketNotFoundException(String message, String paramName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimBucketNotFoundException.ConstructorStringStringException">
            <summary>BucketNotFoundException.BucketNotFoundException(String message, String paramName, Exception innerException)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Fakes.ShimBucketNotFoundException.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Core.Fakes.ShimDocumentMutationException">
            <summary>Couchbase.Core.DocumentMutationException의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimDocumentMutationException.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimDocumentMutationException.#ctor(Couchbase.Core.DocumentMutationException)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimDocumentMutationException.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimDocumentMutationException.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimDocumentMutationException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimDocumentMutationException.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimDocumentMutationException.Constructor">
            <summary>DocumentMutationException.DocumentMutationException()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimDocumentMutationException.ConstructorSerializationInfoStreamingContext">
            <summary>DocumentMutationException.DocumentMutationException(SerializationInfo info, StreamingContext context)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimDocumentMutationException.ConstructorString">
            <summary>DocumentMutationException.DocumentMutationException(String message)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimDocumentMutationException.ConstructorStringException">
            <summary>DocumentMutationException.DocumentMutationException(String message, Exception innerException)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Fakes.ShimDocumentMutationException.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Core.Fakes.ShimDocumentMutationLostException">
            <summary>Couchbase.Core.DocumentMutationLostException의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimDocumentMutationLostException.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimDocumentMutationLostException.#ctor(Couchbase.Core.DocumentMutationLostException)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimDocumentMutationLostException.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimDocumentMutationLostException.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimDocumentMutationLostException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimDocumentMutationLostException.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimDocumentMutationLostException.ConstructorString">
            <summary>DocumentMutationLostException.DocumentMutationLostException(String message)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Fakes.ShimDocumentMutationLostException.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Core.Fakes.ShimInitializationException">
            <summary>Couchbase.Core.InitializationException의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimInitializationException.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimInitializationException.#ctor(Couchbase.Core.InitializationException)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimInitializationException.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimInitializationException.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimInitializationException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimInitializationException.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimInitializationException.Constructor">
            <summary>InitializationException.InitializationException()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimInitializationException.ConstructorSerializationInfoStreamingContext">
            <summary>InitializationException.InitializationException(SerializationInfo info, StreamingContext context)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimInitializationException.ConstructorString">
            <summary>InitializationException.InitializationException(String message)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimInitializationException.ConstructorStringException">
            <summary>InitializationException.InitializationException(String message, Exception innerException)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Fakes.ShimInitializationException.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Core.Fakes.ShimInvalidBucketTypeException">
            <summary>Couchbase.Core.InvalidBucketTypeException의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimInvalidBucketTypeException.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimInvalidBucketTypeException.#ctor(Couchbase.Core.InvalidBucketTypeException)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimInvalidBucketTypeException.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimInvalidBucketTypeException.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimInvalidBucketTypeException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimInvalidBucketTypeException.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimInvalidBucketTypeException.Constructor">
            <summary>InvalidBucketTypeException.InvalidBucketTypeException()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Fakes.ShimInvalidBucketTypeException.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Core.Fakes.ShimLifespan">
            <summary>Couchbase.Core.Lifespan의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimLifespan.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimLifespan.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimLifespan.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimLifespan.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Fakes.ShimLifespan.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Core.Fakes.ShimLookupInBuilder`1">
            <summary>Couchbase.Core.LookupInBuilder`1의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimLookupInBuilder`1.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimLookupInBuilder`1.#ctor(Couchbase.Core.LookupInBuilder{`0})">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimLookupInBuilder`1.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimLookupInBuilder`1.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimLookupInBuilder`1.Bind(Couchbase.Core.ILookupInBuilder{`0})">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimLookupInBuilder`1.Bind(Couchbase.Core.ISubDocBuilder{`0})">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimLookupInBuilder`1.Bind(Couchbase.Core.Serialization.ITypeSerializerProvider)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimLookupInBuilder`1.Bind(System.ICloneable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimLookupInBuilder`1.Bind(System.IEquatable{Couchbase.Core.LookupInBuilder{`0}})">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimLookupInBuilder`1.Bind(System.Collections.IEnumerable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimLookupInBuilder`1.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimLookupInBuilder`1.Clone">
            <summary>LookupInBuilder`1.Clone()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimLookupInBuilder`1.CountGet">
            <summary>LookupInBuilder`1.get_Count()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimLookupInBuilder`1.EqualsLookupInBuilderOfT0">
            <summary>LookupInBuilder`1.Equals(LookupInBuilder`1&lt;!0&gt; other)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimLookupInBuilder`1.Execute">
            <summary>LookupInBuilder`1.Execute()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimLookupInBuilder`1.ExecuteAsync">
            <summary>LookupInBuilder`1.ExecuteAsync()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimLookupInBuilder`1.ExistsString">
            <summary>LookupInBuilder`1.Exists(String path)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimLookupInBuilder`1.GetString">
            <summary>LookupInBuilder`1.Get(String path)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimLookupInBuilder`1.KeyGet">
            <summary>LookupInBuilder`1.get_Key()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimLookupInBuilder`1.KeySetString">
            <summary>LookupInBuilder`1.set_Key(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimLookupInBuilder`1.SerializerGet">
            <summary>LookupInBuilder`1.get_Serializer()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimLookupInBuilder`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>LookupInBuilder`1.System.Collections.IEnumerable.GetEnumerator()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Fakes.ShimLookupInBuilder`1.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimLookupInBuilder`1.AllInstances.Clone">
            <summary>LookupInBuilder`1.Clone()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimLookupInBuilder`1.AllInstances.CountGet">
            <summary>LookupInBuilder`1.get_Count()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimLookupInBuilder`1.AllInstances.EqualsLookupInBuilderOfT0">
            <summary>LookupInBuilder`1.Equals(LookupInBuilder`1&lt;!0&gt; other)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimLookupInBuilder`1.AllInstances.Execute">
            <summary>LookupInBuilder`1.Execute()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimLookupInBuilder`1.AllInstances.ExecuteAsync">
            <summary>LookupInBuilder`1.ExecuteAsync()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimLookupInBuilder`1.AllInstances.ExistsString">
            <summary>LookupInBuilder`1.Exists(String path)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimLookupInBuilder`1.AllInstances.GetString">
            <summary>LookupInBuilder`1.Get(String path)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimLookupInBuilder`1.AllInstances.KeyGet">
            <summary>LookupInBuilder`1.get_Key()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimLookupInBuilder`1.AllInstances.KeySetString">
            <summary>LookupInBuilder`1.set_Key(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimLookupInBuilder`1.AllInstances.SerializerGet">
            <summary>LookupInBuilder`1.get_Serializer()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimLookupInBuilder`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>LookupInBuilder`1.System.Collections.IEnumerable.GetEnumerator()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Fakes.ShimMutateInBuilder`1">
            <summary>Couchbase.Core.MutateInBuilder`1의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimMutateInBuilder`1.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimMutateInBuilder`1.#ctor(Couchbase.Core.MutateInBuilder{`0})">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimMutateInBuilder`1.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimMutateInBuilder`1.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimMutateInBuilder`1.Bind(Couchbase.Core.IMutateInBuilder{`0})">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimMutateInBuilder`1.Bind(Couchbase.Core.ISubDocBuilder{`0})">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimMutateInBuilder`1.Bind(Couchbase.Core.Serialization.ITypeSerializerProvider)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimMutateInBuilder`1.Bind(System.ICloneable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimMutateInBuilder`1.Bind(System.IEquatable{Couchbase.Core.MutateInBuilder{`0}})">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimMutateInBuilder`1.Bind(System.Collections.IEnumerable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.ArrayAddUniqueObjectBoolean">
            <summary>MutateInBuilder`1.ArrayAddUnique(Object value, Boolean createParents)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.ArrayAddUniqueStringObjectBoolean">
            <summary>MutateInBuilder`1.ArrayAddUnique(String path, Object value, Boolean createParents)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.ArrayAppendBooleanObjectArray">
            <summary>MutateInBuilder`1.ArrayAppend(Boolean createParents, Object[] values)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.ArrayAppendObjectBoolean">
            <summary>MutateInBuilder`1.ArrayAppend(Object value, Boolean createParents)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.ArrayAppendStringBooleanObjectArray">
            <summary>MutateInBuilder`1.ArrayAppend(String path, Boolean createParents, Object[] values)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.ArrayAppendStringObjectBoolean">
            <summary>MutateInBuilder`1.ArrayAppend(String path, Object value, Boolean createParents)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.ArrayInsertStringObject">
            <summary>MutateInBuilder`1.ArrayInsert(String path, Object value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.ArrayInsertStringObjectArray">
            <summary>MutateInBuilder`1.ArrayInsert(String path, Object[] values)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.ArrayPrependBooleanObjectArray">
            <summary>MutateInBuilder`1.ArrayPrepend(Boolean createParents, Object[] values)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.ArrayPrependObjectBoolean">
            <summary>MutateInBuilder`1.ArrayPrepend(Object value, Boolean createParents)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.ArrayPrependStringBooleanObjectArray">
            <summary>MutateInBuilder`1.ArrayPrepend(String path, Boolean createParents, Object[] values)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.ArrayPrependStringObjectBoolean">
            <summary>MutateInBuilder`1.ArrayPrepend(String path, Object value, Boolean createParents)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.CasGet">
            <summary>MutateInBuilder`1.get_Cas()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.CasSetInt64">
            <summary>MutateInBuilder`1.set_Cas(Int64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.Clone">
            <summary>MutateInBuilder`1.Clone()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.CountGet">
            <summary>MutateInBuilder`1.get_Count()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.CounterStringInt64Boolean">
            <summary>MutateInBuilder`1.Counter(String path, Int64 delta, Boolean createParents)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.EqualsMutateInBuilderOfT0">
            <summary>MutateInBuilder`1.Equals(MutateInBuilder`1&lt;!0&gt; other)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.Execute">
            <summary>MutateInBuilder`1.Execute()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.ExecuteAsync">
            <summary>MutateInBuilder`1.ExecuteAsync()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.ExpiryGet">
            <summary>MutateInBuilder`1.get_Expiry()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.ExpirySetTimeSpan">
            <summary>MutateInBuilder`1.set_Expiry(TimeSpan value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.InsertStringObjectBoolean">
            <summary>MutateInBuilder`1.Insert(String path, Object value, Boolean createParents)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.KeyGet">
            <summary>MutateInBuilder`1.get_Key()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.KeySetString">
            <summary>MutateInBuilder`1.set_Key(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.PersistToGet">
            <summary>MutateInBuilder`1.get_PersistTo()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.PersistToSetPersistTo">
            <summary>MutateInBuilder`1.set_PersistTo(PersistTo value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.RemoveString">
            <summary>MutateInBuilder`1.Remove(String path)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.ReplaceStringObject">
            <summary>MutateInBuilder`1.Replace(String path, Object value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.ReplicateToGet">
            <summary>MutateInBuilder`1.get_ReplicateTo()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.ReplicateToSetReplicateTo">
            <summary>MutateInBuilder`1.set_ReplicateTo(ReplicateTo value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.SerializerGet">
            <summary>MutateInBuilder`1.get_Serializer()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>MutateInBuilder`1.System.Collections.IEnumerable.GetEnumerator()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.UpsertStringObjectBoolean">
            <summary>MutateInBuilder`1.Upsert(String path, Object value, Boolean createParents)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.WithCasInt64">
            <summary>MutateInBuilder`1.WithCas(Int64 cas)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.WithDurabilityPersistTo">
            <summary>MutateInBuilder`1.WithDurability(PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.WithDurabilityPersistToReplicateTo">
            <summary>MutateInBuilder`1.WithDurability(PersistTo persistTo, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.WithDurabilityReplicateTo">
            <summary>MutateInBuilder`1.WithDurability(ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.WithExpiryTimeSpan">
            <summary>MutateInBuilder`1.WithExpiry(TimeSpan expiry)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Fakes.ShimMutateInBuilder`1.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.AllInstances.ArrayAddUniqueObjectBoolean">
            <summary>MutateInBuilder`1.ArrayAddUnique(Object value, Boolean createParents)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.AllInstances.ArrayAddUniqueStringObjectBoolean">
            <summary>MutateInBuilder`1.ArrayAddUnique(String path, Object value, Boolean createParents)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.AllInstances.ArrayAppendBooleanObjectArray">
            <summary>MutateInBuilder`1.ArrayAppend(Boolean createParents, Object[] values)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.AllInstances.ArrayAppendObjectBoolean">
            <summary>MutateInBuilder`1.ArrayAppend(Object value, Boolean createParents)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.AllInstances.ArrayAppendStringBooleanObjectArray">
            <summary>MutateInBuilder`1.ArrayAppend(String path, Boolean createParents, Object[] values)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.AllInstances.ArrayAppendStringObjectBoolean">
            <summary>MutateInBuilder`1.ArrayAppend(String path, Object value, Boolean createParents)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.AllInstances.ArrayInsertStringObject">
            <summary>MutateInBuilder`1.ArrayInsert(String path, Object value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.AllInstances.ArrayInsertStringObjectArray">
            <summary>MutateInBuilder`1.ArrayInsert(String path, Object[] values)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.AllInstances.ArrayPrependBooleanObjectArray">
            <summary>MutateInBuilder`1.ArrayPrepend(Boolean createParents, Object[] values)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.AllInstances.ArrayPrependObjectBoolean">
            <summary>MutateInBuilder`1.ArrayPrepend(Object value, Boolean createParents)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.AllInstances.ArrayPrependStringBooleanObjectArray">
            <summary>MutateInBuilder`1.ArrayPrepend(String path, Boolean createParents, Object[] values)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.AllInstances.ArrayPrependStringObjectBoolean">
            <summary>MutateInBuilder`1.ArrayPrepend(String path, Object value, Boolean createParents)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.AllInstances.CasGet">
            <summary>MutateInBuilder`1.get_Cas()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.AllInstances.CasSetInt64">
            <summary>MutateInBuilder`1.set_Cas(Int64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.AllInstances.Clone">
            <summary>MutateInBuilder`1.Clone()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.AllInstances.CountGet">
            <summary>MutateInBuilder`1.get_Count()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.AllInstances.CounterStringInt64Boolean">
            <summary>MutateInBuilder`1.Counter(String path, Int64 delta, Boolean createParents)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.AllInstances.EqualsMutateInBuilderOfT0">
            <summary>MutateInBuilder`1.Equals(MutateInBuilder`1&lt;!0&gt; other)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.AllInstances.Execute">
            <summary>MutateInBuilder`1.Execute()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.AllInstances.ExecuteAsync">
            <summary>MutateInBuilder`1.ExecuteAsync()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.AllInstances.ExpiryGet">
            <summary>MutateInBuilder`1.get_Expiry()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.AllInstances.ExpirySetTimeSpan">
            <summary>MutateInBuilder`1.set_Expiry(TimeSpan value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.AllInstances.InsertStringObjectBoolean">
            <summary>MutateInBuilder`1.Insert(String path, Object value, Boolean createParents)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.AllInstances.KeyGet">
            <summary>MutateInBuilder`1.get_Key()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.AllInstances.KeySetString">
            <summary>MutateInBuilder`1.set_Key(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.AllInstances.PersistToGet">
            <summary>MutateInBuilder`1.get_PersistTo()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.AllInstances.PersistToSetPersistTo">
            <summary>MutateInBuilder`1.set_PersistTo(PersistTo value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.AllInstances.RemoveString">
            <summary>MutateInBuilder`1.Remove(String path)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.AllInstances.ReplaceStringObject">
            <summary>MutateInBuilder`1.Replace(String path, Object value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.AllInstances.ReplicateToGet">
            <summary>MutateInBuilder`1.get_ReplicateTo()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.AllInstances.ReplicateToSetReplicateTo">
            <summary>MutateInBuilder`1.set_ReplicateTo(ReplicateTo value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.AllInstances.SerializerGet">
            <summary>MutateInBuilder`1.get_Serializer()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>MutateInBuilder`1.System.Collections.IEnumerable.GetEnumerator()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.AllInstances.UpsertStringObjectBoolean">
            <summary>MutateInBuilder`1.Upsert(String path, Object value, Boolean createParents)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.AllInstances.WithCasInt64">
            <summary>MutateInBuilder`1.WithCas(Int64 cas)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.AllInstances.WithDurabilityPersistTo">
            <summary>MutateInBuilder`1.WithDurability(PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.AllInstances.WithDurabilityPersistToReplicateTo">
            <summary>MutateInBuilder`1.WithDurability(PersistTo persistTo, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.AllInstances.WithDurabilityReplicateTo">
            <summary>MutateInBuilder`1.WithDurability(ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimMutateInBuilder`1.AllInstances.WithExpiryTimeSpan">
            <summary>MutateInBuilder`1.WithExpiry(TimeSpan expiry)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Fakes.ShimNodeAdapterExtensions">
            <summary>Couchbase.Core.NodeAdapterExtensions의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimNodeAdapterExtensions.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimNodeAdapterExtensions.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimNodeAdapterExtensions.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimNodeAdapterExtensions.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Fakes.ShimNodeUnavailableException">
            <summary>Couchbase.Core.NodeUnavailableException의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimNodeUnavailableException.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimNodeUnavailableException.#ctor(Couchbase.Core.NodeUnavailableException)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimNodeUnavailableException.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimNodeUnavailableException.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimNodeUnavailableException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimNodeUnavailableException.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimNodeUnavailableException.Constructor">
            <summary>NodeUnavailableException.NodeUnavailableException()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimNodeUnavailableException.ConstructorString">
            <summary>NodeUnavailableException.NodeUnavailableException(String message)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimNodeUnavailableException.ConstructorStringException">
            <summary>NodeUnavailableException.NodeUnavailableException(String message, Exception innerException)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Fakes.ShimNodeUnavailableException.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Core.Fakes.ShimReplicaNotConfiguredException">
            <summary>Couchbase.Core.ReplicaNotConfiguredException의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimReplicaNotConfiguredException.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimReplicaNotConfiguredException.#ctor(Couchbase.Core.ReplicaNotConfiguredException)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimReplicaNotConfiguredException.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimReplicaNotConfiguredException.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.ShimReplicaNotConfiguredException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimReplicaNotConfiguredException.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.ShimReplicaNotConfiguredException.ConstructorString">
            <summary>ReplicaNotConfiguredException.ReplicaNotConfiguredException(String message)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Fakes.ShimReplicaNotConfiguredException.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Core.Fakes.StubBucketAlreadyOpenException">
            <summary>Couchbase.Core.BucketAlreadyOpenException의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubBucketAlreadyOpenException.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubBucketAlreadyOpenException.#ctor(System.String)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubBucketAlreadyOpenException.#ctor(System.String,System.Exception)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubBucketAlreadyOpenException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubBucketAlreadyOpenException.AttachBackingFieldToHelpLink">
            <summary>대리자를 연결하여 StubBucketAlreadyOpenException.HelpLink을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubBucketAlreadyOpenException.AttachBackingFieldToSource">
            <summary>대리자를 연결하여 StubBucketAlreadyOpenException.Source을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubBucketAlreadyOpenException.DataGet">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubBucketAlreadyOpenException.GetBaseException">
            <summary>Exception.GetBaseException()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubBucketAlreadyOpenException.GetBaseException01">
            <summary>Exception.GetBaseException()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubBucketAlreadyOpenException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Exception.GetObjectData(SerializationInfo info, StreamingContext context)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubBucketAlreadyOpenException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Exception.GetObjectData(SerializationInfo info, StreamingContext context)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubBucketAlreadyOpenException.HelpLinkGet">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubBucketAlreadyOpenException.HelpLinkSetString">
            <summary>Exception.set_HelpLink(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubBucketAlreadyOpenException.InitializeStub">
            <summary>type StubBucketAlreadyOpenException의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubBucketAlreadyOpenException.MessageGet">
            <summary>Exception.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubBucketAlreadyOpenException.SourceGet">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubBucketAlreadyOpenException.SourceSetString">
            <summary>Exception.set_Source(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubBucketAlreadyOpenException.StackTraceGet">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubBucketAlreadyOpenException.ToString">
            <summary>Exception.ToString()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubBucketAlreadyOpenException.ToString01">
            <summary>Exception.ToString()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubBucketAlreadyOpenException.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubBucketAlreadyOpenException.Data">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubBucketAlreadyOpenException.HelpLink">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubBucketAlreadyOpenException.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubBucketAlreadyOpenException.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubBucketAlreadyOpenException.Message">
            <summary>Exception.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubBucketAlreadyOpenException.Source">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubBucketAlreadyOpenException.StackTrace">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Fakes.StubBucketNotFoundException">
            <summary>Couchbase.Core.BucketNotFoundException의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubBucketNotFoundException.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubBucketNotFoundException.#ctor(System.String)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubBucketNotFoundException.#ctor(System.String,System.Exception)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubBucketNotFoundException.#ctor(System.String,System.String)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubBucketNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubBucketNotFoundException.#ctor(System.String,System.String,System.Exception)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubBucketNotFoundException.AttachBackingFieldToHelpLink">
            <summary>대리자를 연결하여 StubBucketNotFoundException.HelpLink을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubBucketNotFoundException.AttachBackingFieldToSource">
            <summary>대리자를 연결하여 StubBucketNotFoundException.Source을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubBucketNotFoundException.DataGet">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubBucketNotFoundException.GetBaseException">
            <summary>Exception.GetBaseException()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubBucketNotFoundException.GetBaseException01">
            <summary>Exception.GetBaseException()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubBucketNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>ArgumentException.GetObjectData(SerializationInfo info, StreamingContext context)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubBucketNotFoundException.GetObjectDataSerializationInfoStreamingContext">
            <summary>ArgumentException.GetObjectData(SerializationInfo info, StreamingContext context)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubBucketNotFoundException.HelpLinkGet">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubBucketNotFoundException.HelpLinkSetString">
            <summary>Exception.set_HelpLink(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubBucketNotFoundException.InitializeStub">
            <summary>type StubBucketNotFoundException의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubBucketNotFoundException.MessageGet">
            <summary>ArgumentException.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubBucketNotFoundException.ParamNameGet">
            <summary>ArgumentException.get_ParamName()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubBucketNotFoundException.SourceGet">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubBucketNotFoundException.SourceSetString">
            <summary>Exception.set_Source(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubBucketNotFoundException.StackTraceGet">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubBucketNotFoundException.ToString">
            <summary>Exception.ToString()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubBucketNotFoundException.ToString01">
            <summary>Exception.ToString()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubBucketNotFoundException.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubBucketNotFoundException.Data">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubBucketNotFoundException.HelpLink">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubBucketNotFoundException.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubBucketNotFoundException.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubBucketNotFoundException.Message">
            <summary>ArgumentException.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubBucketNotFoundException.ParamName">
            <summary>ArgumentException.get_ParamName()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubBucketNotFoundException.Source">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubBucketNotFoundException.StackTrace">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Fakes.StubDocumentMutationException">
            <summary>Couchbase.Core.DocumentMutationException의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubDocumentMutationException.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubDocumentMutationException.#ctor(System.String)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubDocumentMutationException.#ctor(System.String,System.Exception)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubDocumentMutationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubDocumentMutationException.AttachBackingFieldToHelpLink">
            <summary>대리자를 연결하여 StubDocumentMutationException.HelpLink을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubDocumentMutationException.AttachBackingFieldToSource">
            <summary>대리자를 연결하여 StubDocumentMutationException.Source을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubDocumentMutationException.DataGet">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubDocumentMutationException.GetBaseException">
            <summary>Exception.GetBaseException()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubDocumentMutationException.GetBaseException01">
            <summary>Exception.GetBaseException()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubDocumentMutationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Exception.GetObjectData(SerializationInfo info, StreamingContext context)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubDocumentMutationException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Exception.GetObjectData(SerializationInfo info, StreamingContext context)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubDocumentMutationException.HelpLinkGet">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubDocumentMutationException.HelpLinkSetString">
            <summary>Exception.set_HelpLink(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubDocumentMutationException.InitializeStub">
            <summary>type StubDocumentMutationException의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubDocumentMutationException.MessageGet">
            <summary>Exception.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubDocumentMutationException.SourceGet">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubDocumentMutationException.SourceSetString">
            <summary>Exception.set_Source(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubDocumentMutationException.StackTraceGet">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubDocumentMutationException.ToString">
            <summary>Exception.ToString()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubDocumentMutationException.ToString01">
            <summary>Exception.ToString()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubDocumentMutationException.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubDocumentMutationException.Data">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubDocumentMutationException.HelpLink">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubDocumentMutationException.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubDocumentMutationException.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubDocumentMutationException.Message">
            <summary>Exception.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubDocumentMutationException.Source">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubDocumentMutationException.StackTrace">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Fakes.StubDocumentMutationLostException">
            <summary>Couchbase.Core.DocumentMutationLostException의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubDocumentMutationLostException.#ctor(System.String)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubDocumentMutationLostException.AttachBackingFieldToHelpLink">
            <summary>대리자를 연결하여 StubDocumentMutationLostException.HelpLink을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubDocumentMutationLostException.AttachBackingFieldToSource">
            <summary>대리자를 연결하여 StubDocumentMutationLostException.Source을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubDocumentMutationLostException.DataGet">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubDocumentMutationLostException.GetBaseException">
            <summary>Exception.GetBaseException()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubDocumentMutationLostException.GetBaseException01">
            <summary>Exception.GetBaseException()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubDocumentMutationLostException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Exception.GetObjectData(SerializationInfo info, StreamingContext context)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubDocumentMutationLostException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Exception.GetObjectData(SerializationInfo info, StreamingContext context)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubDocumentMutationLostException.HelpLinkGet">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubDocumentMutationLostException.HelpLinkSetString">
            <summary>Exception.set_HelpLink(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubDocumentMutationLostException.InitializeStub">
            <summary>type StubDocumentMutationLostException의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubDocumentMutationLostException.MessageGet">
            <summary>Exception.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubDocumentMutationLostException.SourceGet">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubDocumentMutationLostException.SourceSetString">
            <summary>Exception.set_Source(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubDocumentMutationLostException.StackTraceGet">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubDocumentMutationLostException.ToString">
            <summary>Exception.ToString()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubDocumentMutationLostException.ToString01">
            <summary>Exception.ToString()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubDocumentMutationLostException.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubDocumentMutationLostException.Data">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubDocumentMutationLostException.HelpLink">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubDocumentMutationLostException.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubDocumentMutationLostException.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubDocumentMutationLostException.Message">
            <summary>Exception.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubDocumentMutationLostException.Source">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubDocumentMutationLostException.StackTrace">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Fakes.StubIBucket">
            <summary>Couchbase.Core.IBucket의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.#ctor">
            <summary>type StubIBucket의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.AppendAsyncStringByteArray">
            <summary>IBucket.AppendAsync(String key, Byte[] value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.AppendAsyncStringString">
            <summary>IBucket.AppendAsync(String key, String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.AppendStringByteArray">
            <summary>IBucket.Append(String key, Byte[] value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.AppendStringString">
            <summary>IBucket.Append(String key, String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.BucketTypeGet">
            <summary>IBucket.get_BucketType()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.ClusterGet">
            <summary>IBucket.get_Cluster()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.ConfigurationGet">
            <summary>IBucket.get_Configuration()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Append(System.String,System.String)">
            <summary>IBucket.Append(String key, String value)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Append(System.String,System.Byte[])">
            <summary>IBucket.Append(String key, Byte[] value)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#AppendAsync(System.String,System.Byte[])">
            <summary>IBucket.AppendAsync(String key, Byte[] value)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#AppendAsync(System.String,System.String)">
            <summary>IBucket.AppendAsync(String key, String value)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#CreateManager(System.String,System.String)">
            <summary>IBucket.CreateManager(String username, String password)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#CreateQuery(System.String,System.String)">
            <summary>IBucket.CreateQuery(String designDoc, String view)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#CreateQuery(System.String,System.String,System.Boolean)">
            <summary>IBucket.CreateQuery(String designdoc, String view, Boolean development)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Decrement(System.String)">
            <summary>IBucket.Decrement(String key)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Decrement(System.String,System.UInt64)">
            <summary>IBucket.Decrement(String key, UInt64 delta)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Decrement(System.String,System.UInt64,System.UInt64)">
            <summary>IBucket.Decrement(String key, UInt64 delta, UInt64 initial)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Decrement(System.String,System.UInt64,System.UInt64,System.TimeSpan)">
            <summary>IBucket.Decrement(String key, UInt64 delta, UInt64 initial, TimeSpan expiration)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Decrement(System.String,System.UInt64,System.UInt64,System.UInt32)">
            <summary>IBucket.Decrement(String key, UInt64 delta, UInt64 initial, UInt32 expiration)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#DecrementAsync(System.String)">
            <summary>IBucket.DecrementAsync(String key)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#DecrementAsync(System.String,System.UInt64)">
            <summary>IBucket.DecrementAsync(String key, UInt64 delta)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#DecrementAsync(System.String,System.UInt64,System.UInt64)">
            <summary>IBucket.DecrementAsync(String key, UInt64 delta, UInt64 initial)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#DecrementAsync(System.String,System.UInt64,System.UInt64,System.TimeSpan)">
            <summary>IBucket.DecrementAsync(String key, UInt64 delta, UInt64 initial, TimeSpan expiration)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#DecrementAsync(System.String,System.UInt64,System.UInt64,System.UInt32)">
            <summary>IBucket.DecrementAsync(String key, UInt64 delta, UInt64 initial, UInt32 expiration)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Exists(System.String)">
            <summary>IBucket.Exists(String key)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#ExistsAsync(System.String)">
            <summary>IBucket.ExistsAsync(String key)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Get``1(System.String)">
            <summary>IBucket.Get(String key)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Get``1(System.Collections.Generic.IList{System.String})">
            <summary>IBucket.Get(IList`1&lt;String&gt; keys)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Get``1(System.Collections.Generic.IList{System.String},System.Threading.Tasks.ParallelOptions)">
            <summary>IBucket.Get(IList`1&lt;String&gt; keys, ParallelOptions options)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Get``1(System.Collections.Generic.IList{System.String},System.Threading.Tasks.ParallelOptions,System.Int32)">
            <summary>IBucket.Get(IList`1&lt;String&gt; keys, ParallelOptions options, Int32 rangeSize)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#GetAndLock``1(System.String,System.TimeSpan)">
            <summary>IBucket.GetAndLock(String key, TimeSpan expiration)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#GetAndLock``1(System.String,System.UInt32)">
            <summary>IBucket.GetAndLock(String key, UInt32 expiration)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#GetAndLockAsync``1(System.String,System.TimeSpan)">
            <summary>IBucket.GetAndLockAsync(String key, TimeSpan expiration)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#GetAndLockAsync``1(System.String,System.UInt32)">
            <summary>IBucket.GetAndLockAsync(String key, UInt32 expiration)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#GetAndTouch``1(System.String,System.TimeSpan)">
            <summary>IBucket.GetAndTouch(String key, TimeSpan expiration)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#GetAndTouchAsync``1(System.String,System.TimeSpan)">
            <summary>IBucket.GetAndTouchAsync(String key, TimeSpan expiration)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#GetAndTouchDocument``1(System.String,System.TimeSpan)">
            <summary>IBucket.GetAndTouchDocument(String key, TimeSpan expiration)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#GetAndTouchDocumentAsync``1(System.String,System.TimeSpan)">
            <summary>IBucket.GetAndTouchDocumentAsync(String key, TimeSpan expiration)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#GetAsync``1(System.String)">
            <summary>IBucket.GetAsync(String key)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#GetDocument``1(System.String)">
            <summary>IBucket.GetDocument(String id)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#GetDocumentAsync``1(System.String)">
            <summary>IBucket.GetDocumentAsync(String id)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#GetDocumentsAsync``1(System.Collections.Generic.IEnumerable{System.String})">
            <summary>IBucket.GetDocumentsAsync(IEnumerable`1&lt;String&gt; ids)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#GetFromReplica``1(System.String)">
            <summary>IBucket.GetFromReplica(String key)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#GetFromReplicaAsync``1(System.String)">
            <summary>IBucket.GetFromReplicaAsync(String key)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#GetWithLock``1(System.String,System.TimeSpan)">
            <summary>IBucket.GetWithLock(String key, TimeSpan expiration)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#GetWithLock``1(System.String,System.UInt32)">
            <summary>IBucket.GetWithLock(String key, UInt32 expiration)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#GetWithLockAsync``1(System.String,System.TimeSpan)">
            <summary>IBucket.GetWithLockAsync(String key, TimeSpan expiration)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#GetWithLockAsync``1(System.String,System.UInt32)">
            <summary>IBucket.GetWithLockAsync(String key, UInt32 expiration)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Increment(System.String)">
            <summary>IBucket.Increment(String key)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Increment(System.String,System.UInt64)">
            <summary>IBucket.Increment(String key, UInt64 delta)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Increment(System.String,System.UInt64,System.UInt64)">
            <summary>IBucket.Increment(String key, UInt64 delta, UInt64 initial)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Increment(System.String,System.UInt64,System.UInt64,System.TimeSpan)">
            <summary>IBucket.Increment(String key, UInt64 delta, UInt64 initial, TimeSpan expiration)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Increment(System.String,System.UInt64,System.UInt64,System.UInt32)">
            <summary>IBucket.Increment(String key, UInt64 delta, UInt64 initial, UInt32 expiration)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#IncrementAsync(System.String)">
            <summary>IBucket.IncrementAsync(String key)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#IncrementAsync(System.String,System.UInt64)">
            <summary>IBucket.IncrementAsync(String key, UInt64 delta)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#IncrementAsync(System.String,System.UInt64,System.UInt64)">
            <summary>IBucket.IncrementAsync(String key, UInt64 delta, UInt64 initial)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#IncrementAsync(System.String,System.UInt64,System.UInt64,System.TimeSpan)">
            <summary>IBucket.IncrementAsync(String key, UInt64 delta, UInt64 initial, TimeSpan expiration)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#IncrementAsync(System.String,System.UInt64,System.UInt64,System.UInt32)">
            <summary>IBucket.IncrementAsync(String key, UInt64 delta, UInt64 initial, UInt32 expiration)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Insert``1(Couchbase.IDocument{``0})">
            <summary>IBucket.Insert(IDocument`1&lt;!!0&gt; document)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Insert``1(Couchbase.IDocument{``0},Couchbase.ReplicateTo)">
            <summary>IBucket.Insert(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Insert``1(Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo)">
            <summary>IBucket.Insert(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Insert``1(System.String,``0)">
            <summary>IBucket.Insert(String key, !!0 value)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Insert``1(System.String,``0,Couchbase.ReplicateTo)">
            <summary>IBucket.Insert(String key, !!0 value, ReplicateTo replicateTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Insert``1(System.String,``0,System.TimeSpan)">
            <summary>IBucket.Insert(String key, !!0 value, TimeSpan expiration)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Insert``1(System.String,``0,System.UInt32)">
            <summary>IBucket.Insert(String key, !!0 value, UInt32 expiration)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Insert``1(System.String,``0,Couchbase.ReplicateTo,Couchbase.PersistTo)">
            <summary>IBucket.Insert(String key, !!0 value, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Insert``1(System.String,``0,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo)">
            <summary>IBucket.Insert(String key, !!0 value, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Insert``1(System.String,``0,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo)">
            <summary>IBucket.Insert(String key, !!0 value, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#InsertAsync``1(System.Collections.Generic.List{Couchbase.IDocument{``0}})">
            <summary>IBucket.InsertAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#InsertAsync``1(Couchbase.IDocument{``0},Couchbase.ReplicateTo)">
            <summary>IBucket.InsertAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#InsertAsync``1(Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo)">
            <summary>IBucket.InsertAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#InsertAsync``1(System.String,``0)">
            <summary>IBucket.InsertAsync(String key, !!0 value)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#InsertAsync``1(System.String,``0,Couchbase.ReplicateTo)">
            <summary>IBucket.InsertAsync(String key, !!0 value, ReplicateTo replicateTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#InsertAsync``1(System.String,``0,System.TimeSpan)">
            <summary>IBucket.InsertAsync(String key, !!0 value, TimeSpan expiration)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#InsertAsync``1(System.String,``0,System.UInt32)">
            <summary>IBucket.InsertAsync(String key, !!0 value, UInt32 expiration)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#InsertAsync``1(System.String,``0,Couchbase.ReplicateTo,Couchbase.PersistTo)">
            <summary>IBucket.InsertAsync(String key, !!0 value, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#InsertAsync``1(System.String,``0,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo)">
            <summary>IBucket.InsertAsync(String key, !!0 value, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#InsertAsync``1(System.String,``0,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo)">
            <summary>IBucket.InsertAsync(String key, !!0 value, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#InsertAsync``1(System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo)">
            <summary>IBucket.InsertAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#InsertAsync``1(System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo,Couchbase.PersistTo)">
            <summary>IBucket.InsertAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#InsertAsync``1(Couchbase.IDocument{``0})">
            <summary>IBucket.InsertAsync(IDocument`1&lt;!!0&gt; document)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#LookupIn``1(System.String)">
            <summary>IBucket.LookupIn(String key)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#MutateIn``1(System.String)">
            <summary>IBucket.MutateIn(String key)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Observe(System.String,System.UInt64,System.Boolean,Couchbase.ReplicateTo,Couchbase.PersistTo)">
            <summary>IBucket.Observe(String key, UInt64 cas, Boolean deletion, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#ObserveAsync(System.String,System.UInt64,System.Boolean,Couchbase.ReplicateTo,Couchbase.PersistTo)">
            <summary>IBucket.ObserveAsync(String key, UInt64 cas, Boolean deletion, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Prepend(System.String,System.Byte[])">
            <summary>IBucket.Prepend(String key, Byte[] value)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Prepend(System.String,System.String)">
            <summary>IBucket.Prepend(String key, String value)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#PrependAsync(System.String,System.Byte[])">
            <summary>IBucket.PrependAsync(String key, Byte[] value)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#PrependAsync(System.String,System.String)">
            <summary>IBucket.PrependAsync(String key, String value)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Query``1(Couchbase.N1QL.IQueryRequest)">
            <summary>IBucket.Query(IQueryRequest queryRequest)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Query``1(System.String)">
            <summary>IBucket.Query(String query)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Query(Couchbase.Search.SearchQuery)">
            <summary>IBucket.Query(SearchQuery searchQuery)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Query``1(Couchbase.Views.IViewQueryable)">
            <summary>IBucket.Query(IViewQueryable query)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#QueryAsync``1(Couchbase.N1QL.IQueryRequest)">
            <summary>IBucket.QueryAsync(IQueryRequest queryRequest)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#QueryAsync``1(System.String)">
            <summary>IBucket.QueryAsync(String query)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#QueryAsync(Couchbase.Search.SearchQuery)">
            <summary>IBucket.QueryAsync(SearchQuery searchQuery)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#QueryAsync``1(Couchbase.Views.IViewQueryable)">
            <summary>IBucket.QueryAsync(IViewQueryable query)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Remove``1(Couchbase.IDocument{``0})">
            <summary>IBucket.Remove(IDocument`1&lt;!!0&gt; document)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Remove(System.String)">
            <summary>IBucket.Remove(String key)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Remove``1(Couchbase.IDocument{``0},Couchbase.ReplicateTo)">
            <summary>IBucket.Remove(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Remove(System.String,Couchbase.ReplicateTo)">
            <summary>IBucket.Remove(String key, ReplicateTo replicateTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Remove(System.String,System.UInt64)">
            <summary>IBucket.Remove(String key, UInt64 cas)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Remove``1(Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo)">
            <summary>IBucket.Remove(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Remove(System.String,Couchbase.ReplicateTo,Couchbase.PersistTo)">
            <summary>IBucket.Remove(String key, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Remove(System.String,System.UInt64,Couchbase.ReplicateTo)">
            <summary>IBucket.Remove(String key, UInt64 cas, ReplicateTo replicateTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Remove(System.String,System.UInt64,Couchbase.ReplicateTo,Couchbase.PersistTo)">
            <summary>IBucket.Remove(String key, UInt64 cas, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Remove(System.Collections.Generic.IList{System.String})">
            <summary>IBucket.Remove(IList`1&lt;String&gt; keys)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Remove(System.Collections.Generic.IList{System.String},System.Threading.Tasks.ParallelOptions)">
            <summary>IBucket.Remove(IList`1&lt;String&gt; keys, ParallelOptions options)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Remove(System.Collections.Generic.IList{System.String},System.Threading.Tasks.ParallelOptions,System.Int32)">
            <summary>IBucket.Remove(IList`1&lt;String&gt; keys, ParallelOptions options, Int32 rangeSize)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#RemoveAsync``1(Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo)">
            <summary>IBucket.RemoveAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#RemoveAsync(System.String,Couchbase.ReplicateTo,Couchbase.PersistTo)">
            <summary>IBucket.RemoveAsync(String key, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#RemoveAsync(System.String,System.UInt64,Couchbase.ReplicateTo)">
            <summary>IBucket.RemoveAsync(String key, UInt64 cas, ReplicateTo replicateTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#RemoveAsync(System.String,System.UInt64,Couchbase.ReplicateTo,Couchbase.PersistTo)">
            <summary>IBucket.RemoveAsync(String key, UInt64 cas, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#RemoveAsync``1(System.Collections.Generic.List{Couchbase.IDocument{``0}})">
            <summary>IBucket.RemoveAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#RemoveAsync``1(Couchbase.IDocument{``0},Couchbase.ReplicateTo)">
            <summary>IBucket.RemoveAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#RemoveAsync``1(Couchbase.IDocument{``0})">
            <summary>IBucket.RemoveAsync(IDocument`1&lt;!!0&gt; document)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#RemoveAsync``1(System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo)">
            <summary>IBucket.RemoveAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#RemoveAsync(System.String)">
            <summary>IBucket.RemoveAsync(String key)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#RemoveAsync``1(System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo,Couchbase.PersistTo)">
            <summary>IBucket.RemoveAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#RemoveAsync(System.String,Couchbase.ReplicateTo)">
            <summary>IBucket.RemoveAsync(String key, ReplicateTo replicateTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#RemoveAsync(System.String,System.UInt64)">
            <summary>IBucket.RemoveAsync(String key, UInt64 cas)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Replace``1(Couchbase.IDocument{``0})">
            <summary>IBucket.Replace(IDocument`1&lt;!!0&gt; document)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Replace``1(Couchbase.IDocument{``0},Couchbase.ReplicateTo)">
            <summary>IBucket.Replace(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Replace``1(Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo)">
            <summary>IBucket.Replace(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Replace``1(System.String,``0)">
            <summary>IBucket.Replace(String key, !!0 value)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Replace``1(System.String,``0,Couchbase.ReplicateTo)">
            <summary>IBucket.Replace(String key, !!0 value, ReplicateTo replicateTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Replace``1(System.String,``0,System.TimeSpan)">
            <summary>IBucket.Replace(String key, !!0 value, TimeSpan expiration)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Replace``1(System.String,``0,System.UInt32)">
            <summary>IBucket.Replace(String key, !!0 value, UInt32 expiration)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Replace``1(System.String,``0,System.UInt64)">
            <summary>IBucket.Replace(String key, !!0 value, UInt64 cas)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Replace``1(System.String,``0,Couchbase.ReplicateTo,Couchbase.PersistTo)">
            <summary>IBucket.Replace(String key, !!0 value, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Replace``1(System.String,``0,System.UInt64,Couchbase.ReplicateTo)">
            <summary>IBucket.Replace(String key, !!0 value, UInt64 cas, ReplicateTo replicateTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Replace``1(System.String,``0,System.UInt64,System.TimeSpan)">
            <summary>IBucket.Replace(String key, !!0 value, UInt64 cas, TimeSpan expiration)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Replace``1(System.String,``0,System.UInt64,System.UInt32)">
            <summary>IBucket.Replace(String key, !!0 value, UInt64 cas, UInt32 expiration)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Replace``1(System.String,``0,System.UInt64,Couchbase.ReplicateTo,Couchbase.PersistTo)">
            <summary>IBucket.Replace(String key, !!0 value, UInt64 cas, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Replace``1(System.String,``0,System.UInt64,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo)">
            <summary>IBucket.Replace(String key, !!0 value, UInt64 cas, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Replace``1(System.String,``0,System.UInt64,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo)">
            <summary>IBucket.Replace(String key, !!0 value, UInt64 cas, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#ReplaceAsync``1(Couchbase.IDocument{``0})">
            <summary>IBucket.ReplaceAsync(IDocument`1&lt;!!0&gt; document)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#ReplaceAsync``1(Couchbase.IDocument{``0},Couchbase.ReplicateTo)">
            <summary>IBucket.ReplaceAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#ReplaceAsync``1(Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo)">
            <summary>IBucket.ReplaceAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#ReplaceAsync``1(System.Collections.Generic.List{Couchbase.IDocument{``0}})">
            <summary>IBucket.ReplaceAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#ReplaceAsync``1(System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo)">
            <summary>IBucket.ReplaceAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#ReplaceAsync``1(System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo,Couchbase.PersistTo)">
            <summary>IBucket.ReplaceAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#ReplaceAsync``1(System.String,``0)">
            <summary>IBucket.ReplaceAsync(String key, !!0 value)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#ReplaceAsync``1(System.String,``0,Couchbase.ReplicateTo)">
            <summary>IBucket.ReplaceAsync(String key, !!0 value, ReplicateTo replicateTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#ReplaceAsync``1(System.String,``0,System.TimeSpan)">
            <summary>IBucket.ReplaceAsync(String key, !!0 value, TimeSpan expiration)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#ReplaceAsync``1(System.String,``0,System.UInt32)">
            <summary>IBucket.ReplaceAsync(String key, !!0 value, UInt32 expiration)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#ReplaceAsync``1(System.String,``0,System.UInt64)">
            <summary>IBucket.ReplaceAsync(String key, !!0 value, UInt64 cas)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#ReplaceAsync``1(System.String,``0,Couchbase.ReplicateTo,Couchbase.PersistTo)">
            <summary>IBucket.ReplaceAsync(String key, !!0 value, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#ReplaceAsync``1(System.String,``0,System.UInt64,Couchbase.ReplicateTo)">
            <summary>IBucket.ReplaceAsync(String key, !!0 value, UInt64 cas, ReplicateTo replicateTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#ReplaceAsync``1(System.String,``0,System.UInt64,System.TimeSpan)">
            <summary>IBucket.ReplaceAsync(String key, !!0 value, UInt64 cas, TimeSpan expiration)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#ReplaceAsync``1(System.String,``0,System.UInt64,System.UInt32)">
            <summary>IBucket.ReplaceAsync(String key, !!0 value, UInt64 cas, UInt32 expiration)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#ReplaceAsync``1(System.String,``0,System.UInt64,Couchbase.ReplicateTo,Couchbase.PersistTo)">
            <summary>IBucket.ReplaceAsync(String key, !!0 value, UInt64 cas, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#ReplaceAsync``1(System.String,``0,System.UInt64,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo)">
            <summary>IBucket.ReplaceAsync(String key, !!0 value, UInt64 cas, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#ReplaceAsync``1(System.String,``0,System.UInt64,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo)">
            <summary>IBucket.ReplaceAsync(String key, !!0 value, UInt64 cas, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Touch(System.String,System.TimeSpan)">
            <summary>IBucket.Touch(String key, TimeSpan expiration)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#TouchAsync(System.String,System.TimeSpan)">
            <summary>IBucket.TouchAsync(String key, TimeSpan expiration)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Unlock(System.String,System.UInt64)">
            <summary>IBucket.Unlock(String key, UInt64 cas)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#UnlockAsync(System.String,System.UInt64)">
            <summary>IBucket.UnlockAsync(String key, UInt64 cas)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Upsert``1(Couchbase.IDocument{``0})">
            <summary>IBucket.Upsert(IDocument`1&lt;!!0&gt; document)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Upsert``1(Couchbase.IDocument{``0},Couchbase.ReplicateTo)">
            <summary>IBucket.Upsert(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Upsert``1(Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo)">
            <summary>IBucket.Upsert(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Upsert``1(System.String,``0)">
            <summary>IBucket.Upsert(String key, !!0 value)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Upsert``1(System.String,``0,Couchbase.ReplicateTo)">
            <summary>IBucket.Upsert(String key, !!0 value, ReplicateTo replicateTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Upsert``1(System.String,``0,System.TimeSpan)">
            <summary>IBucket.Upsert(String key, !!0 value, TimeSpan expiration)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Upsert``1(System.String,``0,System.UInt32)">
            <summary>IBucket.Upsert(String key, !!0 value, UInt32 expiration)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Upsert``1(System.String,``0,System.UInt64)">
            <summary>IBucket.Upsert(String key, !!0 value, UInt64 cas)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Upsert``1(System.String,``0,Couchbase.ReplicateTo,Couchbase.PersistTo)">
            <summary>IBucket.Upsert(String key, !!0 value, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Upsert``1(System.String,``0,System.UInt64,System.TimeSpan)">
            <summary>IBucket.Upsert(String key, !!0 value, UInt64 cas, TimeSpan expiration)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Upsert``1(System.String,``0,System.UInt64,System.UInt32)">
            <summary>IBucket.Upsert(String key, !!0 value, UInt64 cas, UInt32 expiration)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Upsert``1(System.String,``0,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo)">
            <summary>IBucket.Upsert(String key, !!0 value, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Upsert``1(System.String,``0,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo)">
            <summary>IBucket.Upsert(String key, !!0 value, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Upsert``1(System.String,``0,System.UInt64,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo)">
            <summary>IBucket.Upsert(String key, !!0 value, UInt64 cas, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Upsert``1(System.String,``0,System.UInt64,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo)">
            <summary>IBucket.Upsert(String key, !!0 value, UInt64 cas, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Upsert``1(System.Collections.Generic.IDictionary{System.String,``0})">
            <summary>IBucket.Upsert(IDictionary`2&lt;String,!!0&gt; items)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Upsert``1(System.Collections.Generic.IDictionary{System.String,``0},System.Threading.Tasks.ParallelOptions)">
            <summary>IBucket.Upsert(IDictionary`2&lt;String,!!0&gt; items, ParallelOptions options)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Upsert``1(System.Collections.Generic.IDictionary{System.String,``0},System.Threading.Tasks.ParallelOptions,System.Int32)">
            <summary>IBucket.Upsert(IDictionary`2&lt;String,!!0&gt; items, ParallelOptions options, Int32 rangeSize)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#UpsertAsync``1(Couchbase.IDocument{``0})">
            <summary>IBucket.UpsertAsync(IDocument`1&lt;!!0&gt; document)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#UpsertAsync``1(Couchbase.IDocument{``0},Couchbase.ReplicateTo)">
            <summary>IBucket.UpsertAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#UpsertAsync``1(Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo)">
            <summary>IBucket.UpsertAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#UpsertAsync``1(System.String,``0)">
            <summary>IBucket.UpsertAsync(String key, !!0 value)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#UpsertAsync``1(System.String,``0,Couchbase.ReplicateTo)">
            <summary>IBucket.UpsertAsync(String key, !!0 value, ReplicateTo replicateTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#UpsertAsync``1(System.String,``0,System.TimeSpan)">
            <summary>IBucket.UpsertAsync(String key, !!0 value, TimeSpan expiration)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#UpsertAsync``1(System.String,``0,System.UInt32)">
            <summary>IBucket.UpsertAsync(String key, !!0 value, UInt32 expiration)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#UpsertAsync``1(System.String,``0,System.UInt64)">
            <summary>IBucket.UpsertAsync(String key, !!0 value, UInt64 cas)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#UpsertAsync``1(System.String,``0,Couchbase.ReplicateTo,Couchbase.PersistTo)">
            <summary>IBucket.UpsertAsync(String key, !!0 value, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#UpsertAsync``1(System.String,``0,System.UInt64,System.TimeSpan)">
            <summary>IBucket.UpsertAsync(String key, !!0 value, UInt64 cas, TimeSpan expiration)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#UpsertAsync``1(System.String,``0,System.UInt64,System.UInt32)">
            <summary>IBucket.UpsertAsync(String key, !!0 value, UInt64 cas, UInt32 expiration)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#UpsertAsync``1(System.Collections.Generic.List{Couchbase.IDocument{``0}})">
            <summary>IBucket.UpsertAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#UpsertAsync``1(System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo,Couchbase.PersistTo)">
            <summary>IBucket.UpsertAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#UpsertAsync``1(System.String,``0,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo)">
            <summary>IBucket.UpsertAsync(String key, !!0 value, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#UpsertAsync``1(System.String,``0,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo)">
            <summary>IBucket.UpsertAsync(String key, !!0 value, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#UpsertAsync``1(System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo)">
            <summary>IBucket.UpsertAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#UpsertAsync``1(System.String,``0,System.UInt64,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo)">
            <summary>IBucket.UpsertAsync(String key, !!0 value, UInt64 cas, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#UpsertAsync``1(System.String,``0,System.UInt64,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo)">
            <summary>IBucket.UpsertAsync(String key, !!0 value, UInt64 cas, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.CreateManagerStringString">
            <summary>IBucket.CreateManager(String username, String password)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.CreateQueryStringString">
            <summary>IBucket.CreateQuery(String designDoc, String view)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.CreateQueryStringStringBoolean">
            <summary>IBucket.CreateQuery(String designdoc, String view, Boolean development)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.DecrementAsyncString">
            <summary>IBucket.DecrementAsync(String key)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.DecrementAsyncStringUInt64">
            <summary>IBucket.DecrementAsync(String key, UInt64 delta)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.DecrementAsyncStringUInt64UInt64">
            <summary>IBucket.DecrementAsync(String key, UInt64 delta, UInt64 initial)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.DecrementAsyncStringUInt64UInt64TimeSpan">
            <summary>IBucket.DecrementAsync(String key, UInt64 delta, UInt64 initial, TimeSpan expiration)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.DecrementAsyncStringUInt64UInt64UInt32">
            <summary>IBucket.DecrementAsync(String key, UInt64 delta, UInt64 initial, UInt32 expiration)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.DecrementString">
            <summary>IBucket.Decrement(String key)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.DecrementStringUInt64">
            <summary>IBucket.Decrement(String key, UInt64 delta)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.DecrementStringUInt64UInt64">
            <summary>IBucket.Decrement(String key, UInt64 delta, UInt64 initial)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.DecrementStringUInt64UInt64TimeSpan">
            <summary>IBucket.Decrement(String key, UInt64 delta, UInt64 initial, TimeSpan expiration)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.DecrementStringUInt64UInt64UInt32">
            <summary>IBucket.Decrement(String key, UInt64 delta, UInt64 initial, UInt32 expiration)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.Dispose">
            <summary>IDisposable.Dispose()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.ExistsAsyncString">
            <summary>IBucket.ExistsAsync(String key)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.ExistsString">
            <summary>IBucket.Exists(String key)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.GetAndLockAsyncOf1StringTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.TimeSpan,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>GetAndLockAsync(String key, TimeSpan expiration)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.GetAndLockAsyncOf1StringUInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.UInt32,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>GetAndLockAsync(String key, UInt32 expiration)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.GetAndLockOf1StringTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.TimeSpan,Couchbase.IOperationResult{``0}})">
            <summary>GetAndLock(String key, TimeSpan expiration)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.GetAndLockOf1StringUInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.UInt32,Couchbase.IOperationResult{``0}})">
            <summary>GetAndLock(String key, UInt32 expiration)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.GetAndTouchAsyncOf1StringTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.TimeSpan,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>GetAndTouchAsync(String key, TimeSpan expiration)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.GetAndTouchDocumentAsyncOf1StringTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.TimeSpan,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>GetAndTouchDocumentAsync(String key, TimeSpan expiration)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.GetAndTouchDocumentOf1StringTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.TimeSpan,Couchbase.IDocumentResult{``0}})">
            <summary>GetAndTouchDocument(String key, TimeSpan expiration)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.GetAndTouchOf1StringTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.TimeSpan,Couchbase.IOperationResult{``0}})">
            <summary>GetAndTouch(String key, TimeSpan expiration)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.GetAsyncOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>GetAsync(String key)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.GetDocumentAsyncOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>GetDocumentAsync(String id)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.GetDocumentOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,Couchbase.IDocumentResult{``0}})">
            <summary>GetDocument(String id)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.GetDocumentsAsyncOf1IEnumerableOfString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{System.String},System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>GetDocumentsAsync(IEnumerable`1&lt;String&gt; ids)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.GetFromReplicaAsyncOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>GetFromReplicaAsync(String key)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.GetFromReplicaOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,Couchbase.IOperationResult{``0}})">
            <summary>GetFromReplica(String key)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.GetOf1IListOfString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{System.String},System.Collections.Generic.IDictionary{System.String,Couchbase.IOperationResult{``0}}})">
            <summary>Get(IList`1&lt;String&gt; keys)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.GetOf1IListOfStringParallelOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{System.String},System.Threading.Tasks.ParallelOptions,System.Collections.Generic.IDictionary{System.String,Couchbase.IOperationResult{``0}}})">
            <summary>Get(IList`1&lt;String&gt; keys, ParallelOptions options)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.GetOf1IListOfStringParallelOptionsInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{System.String},System.Threading.Tasks.ParallelOptions,System.Int32,System.Collections.Generic.IDictionary{System.String,Couchbase.IOperationResult{``0}}})">
            <summary>Get(IList`1&lt;String&gt; keys, ParallelOptions options, Int32 rangeSize)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.GetOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,Couchbase.IOperationResult{``0}})">
            <summary>Get(String key)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.GetWithLockAsyncOf1StringTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.TimeSpan,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>GetWithLockAsync(String key, TimeSpan expiration)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.GetWithLockAsyncOf1StringUInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.UInt32,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>GetWithLockAsync(String key, UInt32 expiration)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.GetWithLockOf1StringTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.TimeSpan,Couchbase.IOperationResult{``0}})">
            <summary>GetWithLock(String key, TimeSpan expiration)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.GetWithLockOf1StringUInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.UInt32,Couchbase.IOperationResult{``0}})">
            <summary>GetWithLock(String key, UInt32 expiration)의 스텁을 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.IncrementAsyncString">
            <summary>IBucket.IncrementAsync(String key)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.IncrementAsyncStringUInt64">
            <summary>IBucket.IncrementAsync(String key, UInt64 delta)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.IncrementAsyncStringUInt64UInt64">
            <summary>IBucket.IncrementAsync(String key, UInt64 delta, UInt64 initial)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.IncrementAsyncStringUInt64UInt64TimeSpan">
            <summary>IBucket.IncrementAsync(String key, UInt64 delta, UInt64 initial, TimeSpan expiration)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.IncrementAsyncStringUInt64UInt64UInt32">
            <summary>IBucket.IncrementAsync(String key, UInt64 delta, UInt64 initial, UInt32 expiration)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.IncrementString">
            <summary>IBucket.Increment(String key)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.IncrementStringUInt64">
            <summary>IBucket.Increment(String key, UInt64 delta)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.IncrementStringUInt64UInt64">
            <summary>IBucket.Increment(String key, UInt64 delta, UInt64 initial)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.IncrementStringUInt64UInt64TimeSpan">
            <summary>IBucket.Increment(String key, UInt64 delta, UInt64 initial, TimeSpan expiration)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.IncrementStringUInt64UInt64UInt32">
            <summary>IBucket.Increment(String key, UInt64 delta, UInt64 initial, UInt32 expiration)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.InsertAsyncOf1IDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>InsertAsync(IDocument`1&lt;!!0&gt; document)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.InsertAsyncOf1IDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>InsertAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.InsertAsyncOf1IDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>InsertAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.InsertAsyncOf1ListOfIDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{Couchbase.IDocument{``0}},System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>InsertAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.InsertAsyncOf1ListOfIDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>InsertAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.InsertAsyncOf1ListOfIDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>InsertAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.InsertAsyncOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>InsertAsync(String key, !!0 value)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.InsertAsyncOf1StringM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>InsertAsync(String key, !!0 value, ReplicateTo replicateTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.InsertAsyncOf1StringM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>InsertAsync(String key, !!0 value, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.InsertAsyncOf1StringM0TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.TimeSpan,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>InsertAsync(String key, !!0 value, TimeSpan expiration)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.InsertAsyncOf1StringM0TimeSpanReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>InsertAsync(String key, !!0 value, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.InsertAsyncOf1StringM0UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt32,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>InsertAsync(String key, !!0 value, UInt32 expiration)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.InsertAsyncOf1StringM0UInt32ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>InsertAsync(String key, !!0 value, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.InsertOf1IDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.IDocumentResult{``0}})">
            <summary>Insert(IDocument`1&lt;!!0&gt; document)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.InsertOf1IDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.IDocumentResult{``0}})">
            <summary>Insert(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.InsertOf1IDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IDocumentResult{``0}})">
            <summary>Insert(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.InsertOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Couchbase.IOperationResult{``0}})">
            <summary>Insert(String key, !!0 value)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.InsertOf1StringM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Couchbase.ReplicateTo,Couchbase.IOperationResult{``0}})">
            <summary>Insert(String key, !!0 value, ReplicateTo replicateTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.InsertOf1StringM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>Insert(String key, !!0 value, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.InsertOf1StringM0TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.TimeSpan,Couchbase.IOperationResult{``0}})">
            <summary>Insert(String key, !!0 value, TimeSpan expiration)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.InsertOf1StringM0TimeSpanReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>Insert(String key, !!0 value, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.InsertOf1StringM0UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt32,Couchbase.IOperationResult{``0}})">
            <summary>Insert(String key, !!0 value, UInt32 expiration)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.InsertOf1StringM0UInt32ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>Insert(String key, !!0 value, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.IsSecureGet">
            <summary>IBucket.get_IsSecure()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.LookupInOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,Couchbase.Core.ILookupInBuilder{``0}})">
            <summary>LookupIn(String key)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.MutateInOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,Couchbase.Core.IMutateInBuilder{``0}})">
            <summary>MutateIn(String key)의 스텁을 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.NameGet">
            <summary>IBucket.get_Name()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.ObserveAsyncStringUInt64BooleanReplicateToPersistTo">
            <summary>IBucket.ObserveAsync(String key, UInt64 cas, Boolean deletion, ReplicateTo replicateTo, PersistTo persistTo)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.ObserveStringUInt64BooleanReplicateToPersistTo">
            <summary>IBucket.Observe(String key, UInt64 cas, Boolean deletion, ReplicateTo replicateTo, PersistTo persistTo)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.PrependAsyncStringByteArray">
            <summary>IBucket.PrependAsync(String key, Byte[] value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.PrependAsyncStringString">
            <summary>IBucket.PrependAsync(String key, String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.PrependStringByteArray">
            <summary>IBucket.Prepend(String key, Byte[] value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.PrependStringString">
            <summary>IBucket.Prepend(String key, String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.QueryAsyncOf1IQueryRequest``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.N1QL.IQueryRequest,System.Threading.Tasks.Task{Couchbase.N1QL.IQueryResult{``0}}})">
            <summary>QueryAsync(IQueryRequest queryRequest)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.QueryAsyncOf1IViewQueryable``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.Views.IViewQueryable,System.Threading.Tasks.Task{Couchbase.Views.IViewResult{``0}}})">
            <summary>QueryAsync(IViewQueryable query)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.QueryAsyncOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Threading.Tasks.Task{Couchbase.N1QL.IQueryResult{``0}}})">
            <summary>QueryAsync(String query)의 스텁을 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.QueryAsyncSearchQuery">
            <summary>IBucket.QueryAsync(SearchQuery searchQuery)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.QueryOf1IQueryRequest``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.N1QL.IQueryRequest,Couchbase.N1QL.IQueryResult{``0}})">
            <summary>Query(IQueryRequest queryRequest)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.QueryOf1IViewQueryable``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.Views.IViewQueryable,Couchbase.Views.IViewResult{``0}})">
            <summary>Query(IViewQueryable query)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.QueryOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,Couchbase.N1QL.IQueryResult{``0}})">
            <summary>Query(String query)의 스텁을 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.QuerySearchQuery">
            <summary>IBucket.Query(SearchQuery searchQuery)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.RemoveAsyncOf1IDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},System.Threading.Tasks.Task{Couchbase.IOperationResult}})">
            <summary>RemoveAsync(IDocument`1&lt;!!0&gt; document)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.RemoveAsyncOf1IDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IOperationResult}})">
            <summary>RemoveAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.RemoveAsyncOf1IDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult}})">
            <summary>RemoveAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.RemoveAsyncOf1ListOfIDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{Couchbase.IDocument{``0}},System.Threading.Tasks.Task{Couchbase.IOperationResult[]}})">
            <summary>RemoveAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.RemoveAsyncOf1ListOfIDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IOperationResult[]}})">
            <summary>RemoveAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.RemoveAsyncOf1ListOfIDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult[]}})">
            <summary>RemoveAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.RemoveAsyncString">
            <summary>IBucket.RemoveAsync(String key)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.RemoveAsyncStringReplicateTo">
            <summary>IBucket.RemoveAsync(String key, ReplicateTo replicateTo)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.RemoveAsyncStringReplicateToPersistTo">
            <summary>IBucket.RemoveAsync(String key, ReplicateTo replicateTo, PersistTo persistTo)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.RemoveAsyncStringUInt64">
            <summary>IBucket.RemoveAsync(String key, UInt64 cas)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.RemoveAsyncStringUInt64ReplicateTo">
            <summary>IBucket.RemoveAsync(String key, UInt64 cas, ReplicateTo replicateTo)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.RemoveAsyncStringUInt64ReplicateToPersistTo">
            <summary>IBucket.RemoveAsync(String key, UInt64 cas, ReplicateTo replicateTo, PersistTo persistTo)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.RemoveIListOfString">
            <summary>IBucket.Remove(IList`1&lt;String&gt; keys)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.RemoveIListOfStringParallelOptions">
            <summary>IBucket.Remove(IList`1&lt;String&gt; keys, ParallelOptions options)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.RemoveIListOfStringParallelOptionsInt32">
            <summary>IBucket.Remove(IList`1&lt;String&gt; keys, ParallelOptions options, Int32 rangeSize)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.RemoveOf1IDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.IOperationResult})">
            <summary>Remove(IDocument`1&lt;!!0&gt; document)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.RemoveOf1IDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.IOperationResult})">
            <summary>Remove(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.RemoveOf1IDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult})">
            <summary>Remove(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.RemoveString">
            <summary>IBucket.Remove(String key)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.RemoveStringReplicateTo">
            <summary>IBucket.Remove(String key, ReplicateTo replicateTo)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.RemoveStringReplicateToPersistTo">
            <summary>IBucket.Remove(String key, ReplicateTo replicateTo, PersistTo persistTo)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.RemoveStringUInt64">
            <summary>IBucket.Remove(String key, UInt64 cas)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.RemoveStringUInt64ReplicateTo">
            <summary>IBucket.Remove(String key, UInt64 cas, ReplicateTo replicateTo)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.RemoveStringUInt64ReplicateToPersistTo">
            <summary>IBucket.Remove(String key, UInt64 cas, ReplicateTo replicateTo, PersistTo persistTo)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.ReplaceAsyncOf1IDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>ReplaceAsync(IDocument`1&lt;!!0&gt; document)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.ReplaceAsyncOf1IDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>ReplaceAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.ReplaceAsyncOf1IDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>ReplaceAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.ReplaceAsyncOf1ListOfIDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{Couchbase.IDocument{``0}},System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>ReplaceAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.ReplaceAsyncOf1ListOfIDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>ReplaceAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.ReplaceAsyncOf1ListOfIDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>ReplaceAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.ReplaceAsyncOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>ReplaceAsync(String key, !!0 value)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.ReplaceAsyncOf1StringM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>ReplaceAsync(String key, !!0 value, ReplicateTo replicateTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.ReplaceAsyncOf1StringM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>ReplaceAsync(String key, !!0 value, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.ReplaceAsyncOf1StringM0TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.TimeSpan,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>ReplaceAsync(String key, !!0 value, TimeSpan expiration)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.ReplaceAsyncOf1StringM0UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt32,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>ReplaceAsync(String key, !!0 value, UInt32 expiration)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.ReplaceAsyncOf1StringM0UInt64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>ReplaceAsync(String key, !!0 value, UInt64 cas)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.ReplaceAsyncOf1StringM0UInt64ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>ReplaceAsync(String key, !!0 value, UInt64 cas, ReplicateTo replicateTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.ReplaceAsyncOf1StringM0UInt64ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>ReplaceAsync(String key, !!0 value, UInt64 cas, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.ReplaceAsyncOf1StringM0UInt64TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.TimeSpan,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>ReplaceAsync(String key, !!0 value, UInt64 cas, TimeSpan expiration)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.ReplaceAsyncOf1StringM0UInt64TimeSpanReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>ReplaceAsync(String key, !!0 value, UInt64 cas, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.ReplaceAsyncOf1StringM0UInt64UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.UInt32,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>ReplaceAsync(String key, !!0 value, UInt64 cas, UInt32 expiration)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.ReplaceAsyncOf1StringM0UInt64UInt32ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>ReplaceAsync(String key, !!0 value, UInt64 cas, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.ReplaceOf1IDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.IDocumentResult{``0}})">
            <summary>Replace(IDocument`1&lt;!!0&gt; document)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.ReplaceOf1IDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.IDocumentResult{``0}})">
            <summary>Replace(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.ReplaceOf1IDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IDocumentResult{``0}})">
            <summary>Replace(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.ReplaceOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Couchbase.IOperationResult{``0}})">
            <summary>Replace(String key, !!0 value)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.ReplaceOf1StringM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Couchbase.ReplicateTo,Couchbase.IOperationResult{``0}})">
            <summary>Replace(String key, !!0 value, ReplicateTo replicateTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.ReplaceOf1StringM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>Replace(String key, !!0 value, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.ReplaceOf1StringM0TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.TimeSpan,Couchbase.IOperationResult{``0}})">
            <summary>Replace(String key, !!0 value, TimeSpan expiration)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.ReplaceOf1StringM0UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt32,Couchbase.IOperationResult{``0}})">
            <summary>Replace(String key, !!0 value, UInt32 expiration)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.ReplaceOf1StringM0UInt64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,Couchbase.IOperationResult{``0}})">
            <summary>Replace(String key, !!0 value, UInt64 cas)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.ReplaceOf1StringM0UInt64ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,Couchbase.ReplicateTo,Couchbase.IOperationResult{``0}})">
            <summary>Replace(String key, !!0 value, UInt64 cas, ReplicateTo replicateTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.ReplaceOf1StringM0UInt64ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>Replace(String key, !!0 value, UInt64 cas, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.ReplaceOf1StringM0UInt64TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.TimeSpan,Couchbase.IOperationResult{``0}})">
            <summary>Replace(String key, !!0 value, UInt64 cas, TimeSpan expiration)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.ReplaceOf1StringM0UInt64TimeSpanReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>Replace(String key, !!0 value, UInt64 cas, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.ReplaceOf1StringM0UInt64UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.UInt32,Couchbase.IOperationResult{``0}})">
            <summary>Replace(String key, !!0 value, UInt64 cas, UInt32 expiration)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.ReplaceOf1StringM0UInt64UInt32ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>Replace(String key, !!0 value, UInt64 cas, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.SupportsEnhancedDurabilityGet">
            <summary>IBucket.get_SupportsEnhancedDurability()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.global::System#IDisposable#Dispose">
            <summary>IDisposable.Dispose()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.TouchAsyncStringTimeSpan">
            <summary>IBucket.TouchAsync(String key, TimeSpan expiration)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.TouchStringTimeSpan">
            <summary>IBucket.Touch(String key, TimeSpan expiration)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.UnlockAsyncStringUInt64">
            <summary>IBucket.UnlockAsync(String key, UInt64 cas)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIBucket.UnlockStringUInt64">
            <summary>IBucket.Unlock(String key, UInt64 cas)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.UpsertAsyncOf1IDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>UpsertAsync(IDocument`1&lt;!!0&gt; document)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.UpsertAsyncOf1IDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>UpsertAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.UpsertAsyncOf1IDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>UpsertAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.UpsertAsyncOf1ListOfIDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{Couchbase.IDocument{``0}},System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>UpsertAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.UpsertAsyncOf1ListOfIDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>UpsertAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.UpsertAsyncOf1ListOfIDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>UpsertAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.UpsertAsyncOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>UpsertAsync(String key, !!0 value)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.UpsertAsyncOf1StringM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>UpsertAsync(String key, !!0 value, ReplicateTo replicateTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.UpsertAsyncOf1StringM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>UpsertAsync(String key, !!0 value, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.UpsertAsyncOf1StringM0TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.TimeSpan,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>UpsertAsync(String key, !!0 value, TimeSpan expiration)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.UpsertAsyncOf1StringM0TimeSpanReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>UpsertAsync(String key, !!0 value, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.UpsertAsyncOf1StringM0UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt32,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>UpsertAsync(String key, !!0 value, UInt32 expiration)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.UpsertAsyncOf1StringM0UInt32ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>UpsertAsync(String key, !!0 value, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.UpsertAsyncOf1StringM0UInt64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>UpsertAsync(String key, !!0 value, UInt64 cas)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.UpsertAsyncOf1StringM0UInt64TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.TimeSpan,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>UpsertAsync(String key, !!0 value, UInt64 cas, TimeSpan expiration)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.UpsertAsyncOf1StringM0UInt64TimeSpanReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>UpsertAsync(String key, !!0 value, UInt64 cas, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.UpsertAsyncOf1StringM0UInt64UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.UInt32,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>UpsertAsync(String key, !!0 value, UInt64 cas, UInt32 expiration)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.UpsertAsyncOf1StringM0UInt64UInt32ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>UpsertAsync(String key, !!0 value, UInt64 cas, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.UpsertOf1IDictionaryOfStringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IDictionary{System.String,``0},System.Collections.Generic.IDictionary{System.String,Couchbase.IOperationResult{``0}}})">
            <summary>Upsert(IDictionary`2&lt;String,!!0&gt; items)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.UpsertOf1IDictionaryOfStringM0ParallelOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IDictionary{System.String,``0},System.Threading.Tasks.ParallelOptions,System.Collections.Generic.IDictionary{System.String,Couchbase.IOperationResult{``0}}})">
            <summary>Upsert(IDictionary`2&lt;String,!!0&gt; items, ParallelOptions options)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.UpsertOf1IDictionaryOfStringM0ParallelOptionsInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IDictionary{System.String,``0},System.Threading.Tasks.ParallelOptions,System.Int32,System.Collections.Generic.IDictionary{System.String,Couchbase.IOperationResult{``0}}})">
            <summary>Upsert(IDictionary`2&lt;String,!!0&gt; items, ParallelOptions options, Int32 rangeSize)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.UpsertOf1IDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.IDocumentResult{``0}})">
            <summary>Upsert(IDocument`1&lt;!!0&gt; document)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.UpsertOf1IDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.IDocumentResult{``0}})">
            <summary>Upsert(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.UpsertOf1IDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IDocumentResult{``0}})">
            <summary>Upsert(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.UpsertOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Couchbase.IOperationResult{``0}})">
            <summary>Upsert(String key, !!0 value)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.UpsertOf1StringM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Couchbase.ReplicateTo,Couchbase.IOperationResult{``0}})">
            <summary>Upsert(String key, !!0 value, ReplicateTo replicateTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.UpsertOf1StringM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>Upsert(String key, !!0 value, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.UpsertOf1StringM0TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.TimeSpan,Couchbase.IOperationResult{``0}})">
            <summary>Upsert(String key, !!0 value, TimeSpan expiration)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.UpsertOf1StringM0TimeSpanReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>Upsert(String key, !!0 value, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.UpsertOf1StringM0UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt32,Couchbase.IOperationResult{``0}})">
            <summary>Upsert(String key, !!0 value, UInt32 expiration)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.UpsertOf1StringM0UInt32ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>Upsert(String key, !!0 value, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.UpsertOf1StringM0UInt64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,Couchbase.IOperationResult{``0}})">
            <summary>Upsert(String key, !!0 value, UInt64 cas)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.UpsertOf1StringM0UInt64TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.TimeSpan,Couchbase.IOperationResult{``0}})">
            <summary>Upsert(String key, !!0 value, UInt64 cas, TimeSpan expiration)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.UpsertOf1StringM0UInt64TimeSpanReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>Upsert(String key, !!0 value, UInt64 cas, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.UpsertOf1StringM0UInt64UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.UInt32,Couchbase.IOperationResult{``0}})">
            <summary>Upsert(String key, !!0 value, UInt64 cas, UInt32 expiration)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIBucket.UpsertOf1StringM0UInt64UInt32ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>Upsert(String key, !!0 value, UInt64 cas, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 스텁을 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#BucketType">
            <summary>IBucket.get_BucketType()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Cluster">
            <summary>IBucket.get_Cluster()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Configuration">
            <summary>IBucket.get_Configuration()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#IsSecure">
            <summary>IBucket.get_IsSecure()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#Name">
            <summary>IBucket.get_Name()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubIBucket.cnc::Couchbase#Core#IBucket#SupportsEnhancedDurability">
            <summary>IBucket.get_SupportsEnhancedDurability()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Fakes.StubICluster">
            <summary>Couchbase.Core.ICluster의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubICluster.#ctor">
            <summary>type StubICluster의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubICluster.CloseBucketIBucket">
            <summary>ICluster.CloseBucket(IBucket bucket)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubICluster.ConfigurationGet">
            <summary>ICluster.get_Configuration()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubICluster.cnc::Couchbase#Core#ICluster#CloseBucket(Couchbase.Core.IBucket)">
            <summary>ICluster.CloseBucket(IBucket bucket)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubICluster.cnc::Couchbase#Core#ICluster#CreateManager(System.String,System.String)">
            <summary>ICluster.CreateManager(String username, String password)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubICluster.cnc::Couchbase#Core#ICluster#IsOpen(System.String)">
            <summary>ICluster.IsOpen(String bucketName)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubICluster.cnc::Couchbase#Core#ICluster#OpenBucket">
            <summary>ICluster.OpenBucket()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubICluster.cnc::Couchbase#Core#ICluster#OpenBucket(System.String)">
            <summary>ICluster.OpenBucket(String bucketname)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubICluster.cnc::Couchbase#Core#ICluster#OpenBucket(System.String,System.String)">
            <summary>ICluster.OpenBucket(String bucketname, String password)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubICluster.CreateManagerStringString">
            <summary>ICluster.CreateManager(String username, String password)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubICluster.Dispose">
            <summary>IDisposable.Dispose()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubICluster.InfoGet">
            <summary>ICluster.get_Info()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubICluster.IsOpenString">
            <summary>ICluster.IsOpen(String bucketName)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubICluster.OpenBucket">
            <summary>ICluster.OpenBucket()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubICluster.OpenBucketString">
            <summary>ICluster.OpenBucket(String bucketname)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubICluster.OpenBucketStringString">
            <summary>ICluster.OpenBucket(String bucketname, String password)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubICluster.global::System#IDisposable#Dispose">
            <summary>IDisposable.Dispose()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubICluster.cnc::Couchbase#Core#ICluster#Configuration">
            <summary>ICluster.get_Configuration()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubICluster.cnc::Couchbase#Core#ICluster#Info">
            <summary>ICluster.get_Info()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Fakes.StubIClusterInfo">
            <summary>Couchbase.Core.IClusterInfo의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIClusterInfo.#ctor">
            <summary>type StubIClusterInfo의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIClusterInfo.BucketConfigs">
            <summary>IClusterInfo.BucketConfigs()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIClusterInfo.cnc::Couchbase#Core#IClusterInfo#BucketConfigs">
            <summary>IClusterInfo.BucketConfigs()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIClusterInfo.cnc::Couchbase#Core#IClusterInfo#Pools">
            <summary>IClusterInfo.Pools()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIClusterInfo.Pools">
            <summary>IClusterInfo.Pools()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Fakes.StubILookupInBuilder`1">
            <summary>Couchbase.Core.ILookupInBuilder`1의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubILookupInBuilder`1.#ctor">
            <summary>type StubILookupInBuilder의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubILookupInBuilder`1.Clone">
            <summary>ICloneable.Clone()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubILookupInBuilder`1.cnc::Couchbase#Core#ILookupInBuilder{TDocument}#Exists(System.String)">
            <summary>ILookupInBuilder`1.Exists(String path)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubILookupInBuilder`1.cnc::Couchbase#Core#ILookupInBuilder{TDocument}#Get(System.String)">
            <summary>ILookupInBuilder`1.Get(String path)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubILookupInBuilder`1.cnc::Couchbase#Core#ISubDocBuilder{TDocument}#Execute">
            <summary>ISubDocBuilder`1.Execute()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubILookupInBuilder`1.cnc::Couchbase#Core#ISubDocBuilder{TDocument}#ExecuteAsync">
            <summary>ISubDocBuilder`1.ExecuteAsync()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubILookupInBuilder`1.CountGet">
            <summary>ISubDocBuilder`1.get_Count()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubILookupInBuilder`1.Execute">
            <summary>ISubDocBuilder`1.Execute()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubILookupInBuilder`1.ExecuteAsync">
            <summary>ISubDocBuilder`1.ExecuteAsync()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubILookupInBuilder`1.ExistsString">
            <summary>ILookupInBuilder`1.Exists(String path)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubILookupInBuilder`1.GetString">
            <summary>ILookupInBuilder`1.Get(String path)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubILookupInBuilder`1.KeyGet">
            <summary>ISubDocBuilder`1.get_Key()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubILookupInBuilder`1.SerializerGet">
            <summary>ITypeSerializerProvider.get_Serializer()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubILookupInBuilder`1.global::System#ICloneable#Clone">
            <summary>ICloneable.Clone()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubILookupInBuilder`1.cnc::Couchbase#Core#ISubDocBuilder{TDocument}#Count">
            <summary>ISubDocBuilder`1.get_Count()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubILookupInBuilder`1.cnc::Couchbase#Core#ISubDocBuilder{TDocument}#Key">
            <summary>ISubDocBuilder`1.get_Key()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubILookupInBuilder`1.cnc::Couchbase#Core#Serialization#ITypeSerializerProvider#Serializer">
            <summary>ITypeSerializerProvider.get_Serializer()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Fakes.StubIMappedNode">
            <summary>Couchbase.Core.IMappedNode의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIMappedNode.#ctor">
            <summary>type StubIMappedNode의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIMappedNode.cnc::Couchbase#Core#IMappedNode#LocatePrimary">
            <summary>IMappedNode.LocatePrimary()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIMappedNode.LocatePrimary">
            <summary>IMappedNode.LocatePrimary()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIMappedNode.RevGet">
            <summary>IMappedNode.get_Rev()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubIMappedNode.cnc::Couchbase#Core#IMappedNode#Rev">
            <summary>IMappedNode.get_Rev()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Fakes.StubIMutateInBuilder`1">
            <summary>Couchbase.Core.IMutateInBuilder`1의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIMutateInBuilder`1.#ctor">
            <summary>type StubIMutateInBuilder의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIMutateInBuilder`1.ArrayAddUniqueObjectBoolean">
            <summary>IMutateInBuilder`1.ArrayAddUnique(Object value, Boolean createParents)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIMutateInBuilder`1.ArrayAddUniqueStringObjectBoolean">
            <summary>IMutateInBuilder`1.ArrayAddUnique(String path, Object value, Boolean createParents)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIMutateInBuilder`1.ArrayAppendBooleanObjectArray">
            <summary>IMutateInBuilder`1.ArrayAppend(Boolean createParents, Object[] values)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIMutateInBuilder`1.ArrayAppendObjectBoolean">
            <summary>IMutateInBuilder`1.ArrayAppend(Object value, Boolean createParents)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIMutateInBuilder`1.ArrayAppendStringBooleanObjectArray">
            <summary>IMutateInBuilder`1.ArrayAppend(String path, Boolean createParents, Object[] values)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIMutateInBuilder`1.ArrayAppendStringObjectBoolean">
            <summary>IMutateInBuilder`1.ArrayAppend(String path, Object value, Boolean createParents)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIMutateInBuilder`1.ArrayInsertStringObject">
            <summary>IMutateInBuilder`1.ArrayInsert(String path, Object value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIMutateInBuilder`1.ArrayInsertStringObjectArray">
            <summary>IMutateInBuilder`1.ArrayInsert(String path, Object[] values)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIMutateInBuilder`1.ArrayPrependBooleanObjectArray">
            <summary>IMutateInBuilder`1.ArrayPrepend(Boolean createParents, Object[] values)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIMutateInBuilder`1.ArrayPrependObjectBoolean">
            <summary>IMutateInBuilder`1.ArrayPrepend(Object value, Boolean createParents)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIMutateInBuilder`1.ArrayPrependStringBooleanObjectArray">
            <summary>IMutateInBuilder`1.ArrayPrepend(String path, Boolean createParents, Object[] values)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIMutateInBuilder`1.ArrayPrependStringObjectBoolean">
            <summary>IMutateInBuilder`1.ArrayPrepend(String path, Object value, Boolean createParents)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIMutateInBuilder`1.CasGet">
            <summary>IMutateInBuilder`1.get_Cas()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIMutateInBuilder`1.Clone">
            <summary>ICloneable.Clone()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIMutateInBuilder`1.cnc::Couchbase#Core#IMutateInBuilder{TDocument}#ArrayAddUnique(System.Object,System.Boolean)">
            <summary>IMutateInBuilder`1.ArrayAddUnique(Object value, Boolean createParents)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIMutateInBuilder`1.cnc::Couchbase#Core#IMutateInBuilder{TDocument}#ArrayAddUnique(System.String,System.Object,System.Boolean)">
            <summary>IMutateInBuilder`1.ArrayAddUnique(String path, Object value, Boolean createParents)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIMutateInBuilder`1.cnc::Couchbase#Core#IMutateInBuilder{TDocument}#ArrayAppend(System.Boolean,System.Object[])">
            <summary>IMutateInBuilder`1.ArrayAppend(Boolean createParents, Object[] values)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIMutateInBuilder`1.cnc::Couchbase#Core#IMutateInBuilder{TDocument}#ArrayAppend(System.Object,System.Boolean)">
            <summary>IMutateInBuilder`1.ArrayAppend(Object value, Boolean createParents)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIMutateInBuilder`1.cnc::Couchbase#Core#IMutateInBuilder{TDocument}#ArrayAppend(System.String,System.Boolean,System.Object[])">
            <summary>IMutateInBuilder`1.ArrayAppend(String path, Boolean createParents, Object[] values)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIMutateInBuilder`1.cnc::Couchbase#Core#IMutateInBuilder{TDocument}#ArrayAppend(System.String,System.Object,System.Boolean)">
            <summary>IMutateInBuilder`1.ArrayAppend(String path, Object value, Boolean createParents)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIMutateInBuilder`1.cnc::Couchbase#Core#IMutateInBuilder{TDocument}#ArrayInsert(System.String,System.Object)">
            <summary>IMutateInBuilder`1.ArrayInsert(String path, Object value)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIMutateInBuilder`1.cnc::Couchbase#Core#IMutateInBuilder{TDocument}#ArrayInsert(System.String,System.Object[])">
            <summary>IMutateInBuilder`1.ArrayInsert(String path, Object[] values)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIMutateInBuilder`1.cnc::Couchbase#Core#IMutateInBuilder{TDocument}#ArrayPrepend(System.Object,System.Boolean)">
            <summary>IMutateInBuilder`1.ArrayPrepend(Object value, Boolean createParents)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIMutateInBuilder`1.cnc::Couchbase#Core#IMutateInBuilder{TDocument}#ArrayPrepend(System.Boolean,System.Object[])">
            <summary>IMutateInBuilder`1.ArrayPrepend(Boolean createParents, Object[] values)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIMutateInBuilder`1.cnc::Couchbase#Core#IMutateInBuilder{TDocument}#ArrayPrepend(System.String,System.Object,System.Boolean)">
            <summary>IMutateInBuilder`1.ArrayPrepend(String path, Object value, Boolean createParents)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIMutateInBuilder`1.cnc::Couchbase#Core#IMutateInBuilder{TDocument}#ArrayPrepend(System.String,System.Boolean,System.Object[])">
            <summary>IMutateInBuilder`1.ArrayPrepend(String path, Boolean createParents, Object[] values)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIMutateInBuilder`1.cnc::Couchbase#Core#IMutateInBuilder{TDocument}#Counter(System.String,System.Int64,System.Boolean)">
            <summary>IMutateInBuilder`1.Counter(String path, Int64 delta, Boolean createParents)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIMutateInBuilder`1.cnc::Couchbase#Core#IMutateInBuilder{TDocument}#Insert(System.String,System.Object,System.Boolean)">
            <summary>IMutateInBuilder`1.Insert(String path, Object value, Boolean createParents)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIMutateInBuilder`1.cnc::Couchbase#Core#IMutateInBuilder{TDocument}#Remove(System.String)">
            <summary>IMutateInBuilder`1.Remove(String path)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIMutateInBuilder`1.cnc::Couchbase#Core#IMutateInBuilder{TDocument}#Replace(System.String,System.Object)">
            <summary>IMutateInBuilder`1.Replace(String path, Object value)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIMutateInBuilder`1.cnc::Couchbase#Core#IMutateInBuilder{TDocument}#Upsert(System.String,System.Object,System.Boolean)">
            <summary>IMutateInBuilder`1.Upsert(String path, Object value, Boolean createParents)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIMutateInBuilder`1.cnc::Couchbase#Core#IMutateInBuilder{TDocument}#WithCas(System.Int64)">
            <summary>IMutateInBuilder`1.WithCas(Int64 cas)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIMutateInBuilder`1.cnc::Couchbase#Core#IMutateInBuilder{TDocument}#WithDurability(Couchbase.PersistTo)">
            <summary>IMutateInBuilder`1.WithDurability(PersistTo persistTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIMutateInBuilder`1.cnc::Couchbase#Core#IMutateInBuilder{TDocument}#WithDurability(Couchbase.ReplicateTo)">
            <summary>IMutateInBuilder`1.WithDurability(ReplicateTo replicateTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIMutateInBuilder`1.cnc::Couchbase#Core#IMutateInBuilder{TDocument}#WithDurability(Couchbase.PersistTo,Couchbase.ReplicateTo)">
            <summary>IMutateInBuilder`1.WithDurability(PersistTo persistTo, ReplicateTo replicateTo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIMutateInBuilder`1.cnc::Couchbase#Core#IMutateInBuilder{TDocument}#WithExpiry(System.TimeSpan)">
            <summary>IMutateInBuilder`1.WithExpiry(TimeSpan expiry)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIMutateInBuilder`1.cnc::Couchbase#Core#ISubDocBuilder{TDocument}#Execute">
            <summary>ISubDocBuilder`1.Execute()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIMutateInBuilder`1.cnc::Couchbase#Core#ISubDocBuilder{TDocument}#ExecuteAsync">
            <summary>ISubDocBuilder`1.ExecuteAsync()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIMutateInBuilder`1.CountGet">
            <summary>ISubDocBuilder`1.get_Count()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIMutateInBuilder`1.CounterStringInt64Boolean">
            <summary>IMutateInBuilder`1.Counter(String path, Int64 delta, Boolean createParents)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIMutateInBuilder`1.Execute">
            <summary>ISubDocBuilder`1.Execute()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIMutateInBuilder`1.ExecuteAsync">
            <summary>ISubDocBuilder`1.ExecuteAsync()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIMutateInBuilder`1.ExpiryGet">
            <summary>IMutateInBuilder`1.get_Expiry()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIMutateInBuilder`1.InsertStringObjectBoolean">
            <summary>IMutateInBuilder`1.Insert(String path, Object value, Boolean createParents)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIMutateInBuilder`1.KeyGet">
            <summary>ISubDocBuilder`1.get_Key()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIMutateInBuilder`1.PersistToGet">
            <summary>IMutateInBuilder`1.get_PersistTo()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIMutateInBuilder`1.RemoveString">
            <summary>IMutateInBuilder`1.Remove(String path)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIMutateInBuilder`1.ReplaceStringObject">
            <summary>IMutateInBuilder`1.Replace(String path, Object value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIMutateInBuilder`1.ReplicateToGet">
            <summary>IMutateInBuilder`1.get_ReplicateTo()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIMutateInBuilder`1.SerializerGet">
            <summary>ITypeSerializerProvider.get_Serializer()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIMutateInBuilder`1.global::System#ICloneable#Clone">
            <summary>ICloneable.Clone()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIMutateInBuilder`1.UpsertStringObjectBoolean">
            <summary>IMutateInBuilder`1.Upsert(String path, Object value, Boolean createParents)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIMutateInBuilder`1.WithCasInt64">
            <summary>IMutateInBuilder`1.WithCas(Int64 cas)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIMutateInBuilder`1.WithDurabilityPersistTo">
            <summary>IMutateInBuilder`1.WithDurability(PersistTo persistTo)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIMutateInBuilder`1.WithDurabilityPersistToReplicateTo">
            <summary>IMutateInBuilder`1.WithDurability(PersistTo persistTo, ReplicateTo replicateTo)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIMutateInBuilder`1.WithDurabilityReplicateTo">
            <summary>IMutateInBuilder`1.WithDurability(ReplicateTo replicateTo)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIMutateInBuilder`1.WithExpiryTimeSpan">
            <summary>IMutateInBuilder`1.WithExpiry(TimeSpan expiry)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubIMutateInBuilder`1.cnc::Couchbase#Core#IMutateInBuilder{TDocument}#Cas">
            <summary>IMutateInBuilder`1.get_Cas()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubIMutateInBuilder`1.cnc::Couchbase#Core#ISubDocBuilder{TDocument}#Count">
            <summary>ISubDocBuilder`1.get_Count()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubIMutateInBuilder`1.cnc::Couchbase#Core#IMutateInBuilder{TDocument}#Expiry">
            <summary>IMutateInBuilder`1.get_Expiry()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubIMutateInBuilder`1.cnc::Couchbase#Core#ISubDocBuilder{TDocument}#Key">
            <summary>ISubDocBuilder`1.get_Key()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubIMutateInBuilder`1.cnc::Couchbase#Core#IMutateInBuilder{TDocument}#PersistTo">
            <summary>IMutateInBuilder`1.get_PersistTo()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubIMutateInBuilder`1.cnc::Couchbase#Core#IMutateInBuilder{TDocument}#ReplicateTo">
            <summary>IMutateInBuilder`1.get_ReplicateTo()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubIMutateInBuilder`1.cnc::Couchbase#Core#Serialization#ITypeSerializerProvider#Serializer">
            <summary>ITypeSerializerProvider.get_Serializer()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Fakes.StubIServer">
            <summary>Couchbase.Core.IServer의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIServer.#ctor">
            <summary>type StubIServer의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIServer.AttachBackingFieldToSaslFactory">
            <summary>대리자를 연결하여 StubIServer.SaslFactory을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIServer.CachedQueryBaseUriGet">
            <summary>IServer.get_CachedQueryBaseUri()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIServer.CachedViewBaseUriGet">
            <summary>IServer.get_CachedViewBaseUri()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIServer.CheckOnlineBoolean">
            <summary>IServer.CheckOnline(Boolean isDead)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIServer.ConnectionPoolGet">
            <summary>IServer.get_ConnectionPool()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIServer.cnc::Couchbase#Core#IServer#CheckOnline(System.Boolean)">
            <summary>IServer.CheckOnline(Boolean isDead)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIServer.cnc::Couchbase#Core#IServer#CreateSaslMechanismIfNotExists">
            <summary>IServer.CreateSaslMechanismIfNotExists()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIServer.cnc::Couchbase#Core#IServer#MarkDead">
            <summary>IServer.MarkDead()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIServer.cnc::Couchbase#Core#IServer#Send(Couchbase.IO.Operations.IOperation)">
            <summary>IServer.Send(IOperation operation)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIServer.cnc::Couchbase#Core#IServer#Send``1(Couchbase.IO.Operations.IOperation{``0})">
            <summary>IServer.Send(IOperation`1&lt;!!0&gt; operation)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIServer.cnc::Couchbase#Core#IServer#Send``1(Couchbase.N1QL.IQueryRequest)">
            <summary>IServer.Send(IQueryRequest queryRequest)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIServer.cnc::Couchbase#Core#IServer#Send(Couchbase.Search.SearchQuery)">
            <summary>IServer.Send(SearchQuery searchQuery)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIServer.cnc::Couchbase#Core#IServer#Send``1(Couchbase.Views.IViewQueryable)">
            <summary>IServer.Send(IViewQueryable query)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIServer.cnc::Couchbase#Core#IServer#SendAsync(Couchbase.IO.Operations.IOperation)">
            <summary>IServer.SendAsync(IOperation operation)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIServer.cnc::Couchbase#Core#IServer#SendAsync``1(Couchbase.IO.Operations.IOperation{``0})">
            <summary>IServer.SendAsync(IOperation`1&lt;!!0&gt; operation)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIServer.cnc::Couchbase#Core#IServer#SendAsync``1(Couchbase.N1QL.IQueryRequest)">
            <summary>IServer.SendAsync(IQueryRequest queryRequest)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIServer.cnc::Couchbase#Core#IServer#SendAsync(Couchbase.Search.SearchQuery)">
            <summary>IServer.SendAsync(SearchQuery searchQuery)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIServer.cnc::Couchbase#Core#IServer#SendAsync``1(Couchbase.Views.IViewQueryable)">
            <summary>IServer.SendAsync(IViewQueryable query)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIServer.cnc::Couchbase#IQueryCacheInvalidator#InvalidateQueryCache">
            <summary>IQueryCacheInvalidator.InvalidateQueryCache()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIServer.CreateSaslMechanismIfNotExists">
            <summary>IServer.CreateSaslMechanismIfNotExists()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIServer.Dispose">
            <summary>IDisposable.Dispose()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIServer.EndPointGet">
            <summary>IServer.get_EndPoint()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIServer.InvalidateQueryCache">
            <summary>IQueryCacheInvalidator.InvalidateQueryCache()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIServer.IsDataNodeGet">
            <summary>IServer.get_IsDataNode()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIServer.IsDownGet">
            <summary>IServer.get_IsDown()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIServer.IsIndexNodeGet">
            <summary>IServer.get_IsIndexNode()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIServer.IsMgmtNodeGet">
            <summary>IServer.get_IsMgmtNode()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIServer.IsQueryNodeGet">
            <summary>IServer.get_IsQueryNode()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIServer.IsSearchNodeGet">
            <summary>IServer.get_IsSearchNode()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIServer.IsSecureGet">
            <summary>IServer.get_IsSecure()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIServer.IsViewNodeGet">
            <summary>IServer.get_IsViewNode()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIServer.MarkDead">
            <summary>IServer.MarkDead()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIServer.QueryClientGet">
            <summary>IServer.get_QueryClient()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIServer.RevisionGet">
            <summary>IServer.get_Revision()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIServer.SaslFactoryGet">
            <summary>IServer.get_SaslFactory()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIServer.SaslFactorySetFuncOfStringStringIIOServiceITypeTranscoderISaslMechanism">
            <summary>IServer.set_SaslFactory(Func`5&lt;String,String,IIOService,ITypeTranscoder,ISaslMechanism&gt; value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIServer.SearchClientGet">
            <summary>IServer.get_SearchClient()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIServer.SendAsyncIOperation">
            <summary>IServer.SendAsync(IOperation operation)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIServer.SendAsyncOf1IOperationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IO.Operations.IOperation{``0},System.Threading.Tasks.Task})">
            <summary>SendAsync(IOperation`1&lt;!!0&gt; operation)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIServer.SendAsyncOf1IQueryRequest``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.N1QL.IQueryRequest,System.Threading.Tasks.Task{Couchbase.N1QL.IQueryResult{``0}}})">
            <summary>SendAsync(IQueryRequest queryRequest)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIServer.SendAsyncOf1IViewQueryable``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.Views.IViewQueryable,System.Threading.Tasks.Task{Couchbase.Views.IViewResult{``0}}})">
            <summary>SendAsync(IViewQueryable query)의 스텁을 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIServer.SendAsyncSearchQuery">
            <summary>IServer.SendAsync(SearchQuery searchQuery)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIServer.SendIOperation">
            <summary>IServer.Send(IOperation operation)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIServer.SendOf1IOperationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IO.Operations.IOperation{``0},Couchbase.IOperationResult{``0}})">
            <summary>Send(IOperation`1&lt;!!0&gt; operation)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIServer.SendOf1IQueryRequest``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.N1QL.IQueryRequest,Couchbase.N1QL.IQueryResult{``0}})">
            <summary>Send(IQueryRequest queryRequest)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIServer.SendOf1IViewQueryable``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.Views.IViewQueryable,Couchbase.Views.IViewResult{``0}})">
            <summary>Send(IViewQueryable query)의 스텁을 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIServer.SendSearchQuery">
            <summary>IServer.Send(SearchQuery searchQuery)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIServer.global::System#IDisposable#Dispose">
            <summary>IDisposable.Dispose()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIServer.ViewClientGet">
            <summary>IServer.get_ViewClient()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubIServer.cnc::Couchbase#Core#IServer#CachedQueryBaseUri">
            <summary>IServer.get_CachedQueryBaseUri()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubIServer.cnc::Couchbase#Core#IServer#CachedViewBaseUri">
            <summary>IServer.get_CachedViewBaseUri()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubIServer.cnc::Couchbase#Core#IServer#ConnectionPool">
            <summary>IServer.get_ConnectionPool()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubIServer.cnc::Couchbase#Core#IServer#EndPoint">
            <summary>IServer.get_EndPoint()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubIServer.cnc::Couchbase#Core#IServer#IsDataNode">
            <summary>IServer.get_IsDataNode()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubIServer.cnc::Couchbase#Core#IServer#IsDown">
            <summary>IServer.get_IsDown()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubIServer.cnc::Couchbase#Core#IServer#IsIndexNode">
            <summary>IServer.get_IsIndexNode()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubIServer.cnc::Couchbase#Core#IServer#IsMgmtNode">
            <summary>IServer.get_IsMgmtNode()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubIServer.cnc::Couchbase#Core#IServer#IsQueryNode">
            <summary>IServer.get_IsQueryNode()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubIServer.cnc::Couchbase#Core#IServer#IsSearchNode">
            <summary>IServer.get_IsSearchNode()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubIServer.cnc::Couchbase#Core#IServer#IsSecure">
            <summary>IServer.get_IsSecure()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubIServer.cnc::Couchbase#Core#IServer#IsViewNode">
            <summary>IServer.get_IsViewNode()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubIServer.cnc::Couchbase#Core#IServer#QueryClient">
            <summary>IServer.get_QueryClient()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubIServer.cnc::Couchbase#Core#IServer#Revision">
            <summary>IServer.get_Revision()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubIServer.cnc::Couchbase#Core#IServer#SaslFactory">
            <summary>IServer.get_SaslFactory()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubIServer.cnc::Couchbase#Core#IServer#SearchClient">
            <summary>IServer.get_SearchClient()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubIServer.cnc::Couchbase#Core#IServer#ViewClient">
            <summary>IServer.get_ViewClient()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Fakes.StubISubDocBuilder`1">
            <summary>Couchbase.Core.ISubDocBuilder`1의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubISubDocBuilder`1.#ctor">
            <summary>type StubISubDocBuilder의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubISubDocBuilder`1.Clone">
            <summary>ICloneable.Clone()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubISubDocBuilder`1.cnc::Couchbase#Core#ISubDocBuilder{TDocument}#Execute">
            <summary>ISubDocBuilder`1.Execute()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubISubDocBuilder`1.cnc::Couchbase#Core#ISubDocBuilder{TDocument}#ExecuteAsync">
            <summary>ISubDocBuilder`1.ExecuteAsync()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubISubDocBuilder`1.CountGet">
            <summary>ISubDocBuilder`1.get_Count()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubISubDocBuilder`1.Execute">
            <summary>ISubDocBuilder`1.Execute()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubISubDocBuilder`1.ExecuteAsync">
            <summary>ISubDocBuilder`1.ExecuteAsync()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubISubDocBuilder`1.KeyGet">
            <summary>ISubDocBuilder`1.get_Key()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubISubDocBuilder`1.SerializerGet">
            <summary>ITypeSerializerProvider.get_Serializer()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubISubDocBuilder`1.global::System#ICloneable#Clone">
            <summary>ICloneable.Clone()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubISubDocBuilder`1.cnc::Couchbase#Core#ISubDocBuilder{TDocument}#Count">
            <summary>ISubDocBuilder`1.get_Count()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubISubDocBuilder`1.cnc::Couchbase#Core#ISubDocBuilder{TDocument}#Key">
            <summary>ISubDocBuilder`1.get_Key()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubISubDocBuilder`1.cnc::Couchbase#Core#Serialization#ITypeSerializerProvider#Serializer">
            <summary>ITypeSerializerProvider.get_Serializer()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Fakes.StubIVBucket">
            <summary>Couchbase.Core.IVBucket의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIVBucket.#ctor">
            <summary>type StubIVBucket의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIVBucket.BucketNameGet">
            <summary>IVBucket.get_BucketName()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIVBucket.cnc::Couchbase#Core#IMappedNode#LocatePrimary">
            <summary>IMappedNode.LocatePrimary()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubIVBucket.cnc::Couchbase#Core#IVBucket#LocateReplica(System.Int32)">
            <summary>IVBucket.LocateReplica(Int32 index)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIVBucket.HasReplicasGet">
            <summary>IVBucket.get_HasReplicas()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIVBucket.IndexGet">
            <summary>IVBucket.get_Index()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIVBucket.LocatePrimary">
            <summary>IMappedNode.LocatePrimary()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIVBucket.LocateReplicaInt32">
            <summary>IVBucket.LocateReplica(Int32 index)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIVBucket.PrimaryGet">
            <summary>IVBucket.get_Primary()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIVBucket.ReplicasGet">
            <summary>IVBucket.get_Replicas()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubIVBucket.RevGet">
            <summary>IMappedNode.get_Rev()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubIVBucket.cnc::Couchbase#Core#IVBucket#BucketName">
            <summary>IVBucket.get_BucketName()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubIVBucket.cnc::Couchbase#Core#IVBucket#HasReplicas">
            <summary>IVBucket.get_HasReplicas()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubIVBucket.cnc::Couchbase#Core#IVBucket#Index">
            <summary>IVBucket.get_Index()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubIVBucket.cnc::Couchbase#Core#IVBucket#Primary">
            <summary>IVBucket.get_Primary()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubIVBucket.cnc::Couchbase#Core#IVBucket#Replicas">
            <summary>IVBucket.get_Replicas()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubIVBucket.cnc::Couchbase#Core#IMappedNode#Rev">
            <summary>IMappedNode.get_Rev()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Fakes.StubInitializationException">
            <summary>Couchbase.Core.InitializationException의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubInitializationException.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubInitializationException.#ctor(System.String)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubInitializationException.#ctor(System.String,System.Exception)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubInitializationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubInitializationException.AttachBackingFieldToHelpLink">
            <summary>대리자를 연결하여 StubInitializationException.HelpLink을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubInitializationException.AttachBackingFieldToSource">
            <summary>대리자를 연결하여 StubInitializationException.Source을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubInitializationException.DataGet">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubInitializationException.GetBaseException">
            <summary>Exception.GetBaseException()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubInitializationException.GetBaseException01">
            <summary>Exception.GetBaseException()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubInitializationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Exception.GetObjectData(SerializationInfo info, StreamingContext context)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubInitializationException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Exception.GetObjectData(SerializationInfo info, StreamingContext context)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubInitializationException.HelpLinkGet">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubInitializationException.HelpLinkSetString">
            <summary>Exception.set_HelpLink(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubInitializationException.InitializeStub">
            <summary>type StubInitializationException의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubInitializationException.MessageGet">
            <summary>Exception.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubInitializationException.SourceGet">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubInitializationException.SourceSetString">
            <summary>Exception.set_Source(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubInitializationException.StackTraceGet">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubInitializationException.ToString">
            <summary>Exception.ToString()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubInitializationException.ToString01">
            <summary>Exception.ToString()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubInitializationException.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubInitializationException.Data">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubInitializationException.HelpLink">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubInitializationException.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubInitializationException.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubInitializationException.Message">
            <summary>Exception.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubInitializationException.Source">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubInitializationException.StackTrace">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Fakes.StubInvalidBucketTypeException">
            <summary>Couchbase.Core.InvalidBucketTypeException의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubInvalidBucketTypeException.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubInvalidBucketTypeException.AttachBackingFieldToHelpLink">
            <summary>대리자를 연결하여 StubInvalidBucketTypeException.HelpLink을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubInvalidBucketTypeException.AttachBackingFieldToSource">
            <summary>대리자를 연결하여 StubInvalidBucketTypeException.Source을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubInvalidBucketTypeException.DataGet">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubInvalidBucketTypeException.GetBaseException">
            <summary>Exception.GetBaseException()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubInvalidBucketTypeException.GetBaseException01">
            <summary>Exception.GetBaseException()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubInvalidBucketTypeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>ArgumentException.GetObjectData(SerializationInfo info, StreamingContext context)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubInvalidBucketTypeException.GetObjectDataSerializationInfoStreamingContext">
            <summary>ArgumentException.GetObjectData(SerializationInfo info, StreamingContext context)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubInvalidBucketTypeException.HelpLinkGet">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubInvalidBucketTypeException.HelpLinkSetString">
            <summary>Exception.set_HelpLink(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubInvalidBucketTypeException.InitializeStub">
            <summary>type StubInvalidBucketTypeException의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubInvalidBucketTypeException.MessageGet">
            <summary>ArgumentException.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubInvalidBucketTypeException.ParamNameGet">
            <summary>ArgumentException.get_ParamName()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubInvalidBucketTypeException.SourceGet">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubInvalidBucketTypeException.SourceSetString">
            <summary>Exception.set_Source(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubInvalidBucketTypeException.StackTraceGet">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubInvalidBucketTypeException.ToString">
            <summary>Exception.ToString()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubInvalidBucketTypeException.ToString01">
            <summary>Exception.ToString()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubInvalidBucketTypeException.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubInvalidBucketTypeException.Data">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubInvalidBucketTypeException.HelpLink">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubInvalidBucketTypeException.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubInvalidBucketTypeException.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubInvalidBucketTypeException.Message">
            <summary>ArgumentException.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubInvalidBucketTypeException.ParamName">
            <summary>ArgumentException.get_ParamName()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubInvalidBucketTypeException.Source">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubInvalidBucketTypeException.StackTrace">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Fakes.StubNodeUnavailableException">
            <summary>Couchbase.Core.NodeUnavailableException의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubNodeUnavailableException.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubNodeUnavailableException.#ctor(System.String)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubNodeUnavailableException.#ctor(System.String,System.Exception)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubNodeUnavailableException.AttachBackingFieldToHelpLink">
            <summary>대리자를 연결하여 StubNodeUnavailableException.HelpLink을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubNodeUnavailableException.AttachBackingFieldToSource">
            <summary>대리자를 연결하여 StubNodeUnavailableException.Source을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubNodeUnavailableException.DataGet">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubNodeUnavailableException.GetBaseException">
            <summary>Exception.GetBaseException()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubNodeUnavailableException.GetBaseException01">
            <summary>Exception.GetBaseException()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubNodeUnavailableException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Exception.GetObjectData(SerializationInfo info, StreamingContext context)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubNodeUnavailableException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Exception.GetObjectData(SerializationInfo info, StreamingContext context)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubNodeUnavailableException.HelpLinkGet">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubNodeUnavailableException.HelpLinkSetString">
            <summary>Exception.set_HelpLink(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubNodeUnavailableException.InitializeStub">
            <summary>type StubNodeUnavailableException의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubNodeUnavailableException.MessageGet">
            <summary>Exception.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubNodeUnavailableException.SourceGet">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubNodeUnavailableException.SourceSetString">
            <summary>Exception.set_Source(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubNodeUnavailableException.StackTraceGet">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubNodeUnavailableException.ToString">
            <summary>Exception.ToString()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubNodeUnavailableException.ToString01">
            <summary>Exception.ToString()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubNodeUnavailableException.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubNodeUnavailableException.Data">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubNodeUnavailableException.HelpLink">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubNodeUnavailableException.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubNodeUnavailableException.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubNodeUnavailableException.Message">
            <summary>Exception.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubNodeUnavailableException.Source">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubNodeUnavailableException.StackTrace">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Fakes.StubReplicaNotConfiguredException">
            <summary>Couchbase.Core.ReplicaNotConfiguredException의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubReplicaNotConfiguredException.#ctor(System.String)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubReplicaNotConfiguredException.AttachBackingFieldToHelpLink">
            <summary>대리자를 연결하여 StubReplicaNotConfiguredException.HelpLink을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubReplicaNotConfiguredException.AttachBackingFieldToSource">
            <summary>대리자를 연결하여 StubReplicaNotConfiguredException.Source을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubReplicaNotConfiguredException.DataGet">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubReplicaNotConfiguredException.GetBaseException">
            <summary>Exception.GetBaseException()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubReplicaNotConfiguredException.GetBaseException01">
            <summary>Exception.GetBaseException()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubReplicaNotConfiguredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Exception.GetObjectData(SerializationInfo info, StreamingContext context)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubReplicaNotConfiguredException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Exception.GetObjectData(SerializationInfo info, StreamingContext context)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubReplicaNotConfiguredException.HelpLinkGet">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubReplicaNotConfiguredException.HelpLinkSetString">
            <summary>Exception.set_HelpLink(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubReplicaNotConfiguredException.InitializeStub">
            <summary>type StubReplicaNotConfiguredException의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubReplicaNotConfiguredException.MessageGet">
            <summary>Exception.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubReplicaNotConfiguredException.SourceGet">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubReplicaNotConfiguredException.SourceSetString">
            <summary>Exception.set_Source(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubReplicaNotConfiguredException.StackTraceGet">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Fakes.StubReplicaNotConfiguredException.ToString">
            <summary>Exception.ToString()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Fakes.StubReplicaNotConfiguredException.ToString01">
            <summary>Exception.ToString()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubReplicaNotConfiguredException.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubReplicaNotConfiguredException.Data">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubReplicaNotConfiguredException.HelpLink">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubReplicaNotConfiguredException.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubReplicaNotConfiguredException.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubReplicaNotConfiguredException.Message">
            <summary>Exception.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubReplicaNotConfiguredException.Source">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Fakes.StubReplicaNotConfiguredException.StackTrace">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Serialization.Fakes.ShimDefaultSerializer">
            <summary>Couchbase.Core.Serialization.DefaultSerializer의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.ShimDefaultSerializer.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.ShimDefaultSerializer.#ctor(Couchbase.Core.Serialization.DefaultSerializer)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.ShimDefaultSerializer.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.ShimDefaultSerializer.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.ShimDefaultSerializer.Bind(Couchbase.Core.Serialization.IExtendedTypeSerializer)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.ShimDefaultSerializer.Bind(Couchbase.Core.Serialization.ITypeSerializer)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.ShimDefaultSerializer.DeserializeOf1ByteArrayInt32Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Byte[],System.Int32,System.Int32,``0})">
            <summary>DefaultSerializer.Deserialize(Byte[] buffer, Int32 offset, Int32 length)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.ShimDefaultSerializer.DeserializeOf1Stream``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.IO.Stream,``0})">
            <summary>DefaultSerializer.Deserialize(Stream stream)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimDefaultSerializer.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimDefaultSerializer.Constructor">
            <summary>DefaultSerializer.DefaultSerializer()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimDefaultSerializer.ConstructorJsonSerializerSettingsJsonSerializerSettings">
            <summary>DefaultSerializer.DefaultSerializer(JsonSerializerSettings deserializationSettings, JsonSerializerSettings serializerSettings)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimDefaultSerializer.DeserializationOptionsGet">
            <summary>DefaultSerializer.get_DeserializationOptions()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimDefaultSerializer.DeserializationOptionsSetDeserializationOptions">
            <summary>DefaultSerializer.set_DeserializationOptions(DeserializationOptions value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimDefaultSerializer.DeserializationSettingsGet">
            <summary>DefaultSerializer.get_DeserializationSettings()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimDefaultSerializer.DeserializationSettingsSetJsonSerializerSettings">
            <summary>DefaultSerializer.set_DeserializationSettings(JsonSerializerSettings value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimDefaultSerializer.EffectiveDeserializationSettingsGet">
            <summary>DefaultSerializer.get_EffectiveDeserializationSettings()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimDefaultSerializer.EffectiveDeserializationSettingsSetJsonSerializerSettings">
            <summary>DefaultSerializer.set_EffectiveDeserializationSettings(JsonSerializerSettings value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimDefaultSerializer.GetDefaultContractResolver">
            <summary>DefaultSerializer.GetDefaultContractResolver()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimDefaultSerializer.GetDeserializationSettingsJsonSerializerSettingsDeserializationOptions">
            <summary>DefaultSerializer.GetDeserializationSettings(JsonSerializerSettings baseSettings, DeserializationOptions options)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimDefaultSerializer.GetMemberNameMemberInfo">
            <summary>DefaultSerializer.GetMemberName(MemberInfo member)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimDefaultSerializer.SerializeObject">
            <summary>DefaultSerializer.Serialize(Object obj)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimDefaultSerializer.SerializerSettingsGet">
            <summary>DefaultSerializer.get_SerializerSettings()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimDefaultSerializer.SerializerSettingsSetJsonSerializerSettings">
            <summary>DefaultSerializer.set_SerializerSettings(JsonSerializerSettings value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimDefaultSerializer.StaticConstructor">
            <summary>DefaultSerializer.DefaultSerializer()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimDefaultSerializer.SupportedDeserializationOptionsGet">
            <summary>DefaultSerializer.get_SupportedDeserializationOptions()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Serialization.Fakes.ShimDefaultSerializer.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.ShimDefaultSerializer.AllInstances.DeserializeOf1ByteArrayInt32Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.Core.Serialization.DefaultSerializer,System.Byte[],System.Int32,System.Int32,``0})">
            <summary>DefaultSerializer.Deserialize(Byte[] buffer, Int32 offset, Int32 length)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.ShimDefaultSerializer.AllInstances.DeserializeOf1Stream``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.Core.Serialization.DefaultSerializer,System.IO.Stream,``0})">
            <summary>DefaultSerializer.Deserialize(Stream stream)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimDefaultSerializer.AllInstances.DeserializationOptionsGet">
            <summary>DefaultSerializer.get_DeserializationOptions()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimDefaultSerializer.AllInstances.DeserializationOptionsSetDeserializationOptions">
            <summary>DefaultSerializer.set_DeserializationOptions(DeserializationOptions value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimDefaultSerializer.AllInstances.DeserializationSettingsGet">
            <summary>DefaultSerializer.get_DeserializationSettings()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimDefaultSerializer.AllInstances.DeserializationSettingsSetJsonSerializerSettings">
            <summary>DefaultSerializer.set_DeserializationSettings(JsonSerializerSettings value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimDefaultSerializer.AllInstances.EffectiveDeserializationSettingsGet">
            <summary>DefaultSerializer.get_EffectiveDeserializationSettings()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimDefaultSerializer.AllInstances.EffectiveDeserializationSettingsSetJsonSerializerSettings">
            <summary>DefaultSerializer.set_EffectiveDeserializationSettings(JsonSerializerSettings value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimDefaultSerializer.AllInstances.GetDeserializationSettingsJsonSerializerSettingsDeserializationOptions">
            <summary>DefaultSerializer.GetDeserializationSettings(JsonSerializerSettings baseSettings, DeserializationOptions options)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimDefaultSerializer.AllInstances.GetMemberNameMemberInfo">
            <summary>DefaultSerializer.GetMemberName(MemberInfo member)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimDefaultSerializer.AllInstances.SerializeObject">
            <summary>DefaultSerializer.Serialize(Object obj)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimDefaultSerializer.AllInstances.SerializerSettingsGet">
            <summary>DefaultSerializer.get_SerializerSettings()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimDefaultSerializer.AllInstances.SerializerSettingsSetJsonSerializerSettings">
            <summary>DefaultSerializer.set_SerializerSettings(JsonSerializerSettings value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimDefaultSerializer.AllInstances.SupportedDeserializationOptionsGet">
            <summary>DefaultSerializer.get_SupportedDeserializationOptions()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Serialization.Fakes.ShimDeserializationOptions">
            <summary>Couchbase.Core.Serialization.DeserializationOptions의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.ShimDeserializationOptions.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.ShimDeserializationOptions.#ctor(Couchbase.Core.Serialization.DeserializationOptions)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.ShimDeserializationOptions.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.ShimDeserializationOptions.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimDeserializationOptions.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimDeserializationOptions.Constructor">
            <summary>DeserializationOptions.DeserializationOptions()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimDeserializationOptions.CustomObjectCreatorGet">
            <summary>DeserializationOptions.get_CustomObjectCreator()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimDeserializationOptions.CustomObjectCreatorSetICustomObjectCreator">
            <summary>DeserializationOptions.set_CustomObjectCreator(ICustomObjectCreator value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimDeserializationOptions.HasSettingsGet">
            <summary>DeserializationOptions.get_HasSettings()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Serialization.Fakes.ShimDeserializationOptions.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimDeserializationOptions.AllInstances.CustomObjectCreatorGet">
            <summary>DeserializationOptions.get_CustomObjectCreator()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimDeserializationOptions.AllInstances.CustomObjectCreatorSetICustomObjectCreator">
            <summary>DeserializationOptions.set_CustomObjectCreator(ICustomObjectCreator value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimDeserializationOptions.AllInstances.HasSettingsGet">
            <summary>DeserializationOptions.get_HasSettings()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Serialization.Fakes.ShimSerializerFactory">
            <summary>Couchbase.Core.Serialization.SerializerFactory의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.ShimSerializerFactory.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.ShimSerializerFactory.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.ShimSerializerFactory.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimSerializerFactory.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimSerializerFactory.GetSerializer">
            <summary>SerializerFactory.GetSerializer()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimSerializerFactory.GetSerializerClientConfigurationSerializerElement">
            <summary>SerializerFactory.GetSerializer(ClientConfiguration config, SerializerElement element)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimSerializerFactory.GetSerializerString">
            <summary>SerializerFactory.GetSerializer(String typeName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Serialization.Fakes.ShimSupportedDeserializationOptions">
            <summary>Couchbase.Core.Serialization.SupportedDeserializationOptions의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.ShimSupportedDeserializationOptions.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.ShimSupportedDeserializationOptions.#ctor(Couchbase.Core.Serialization.SupportedDeserializationOptions)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.ShimSupportedDeserializationOptions.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.ShimSupportedDeserializationOptions.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimSupportedDeserializationOptions.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimSupportedDeserializationOptions.Constructor">
            <summary>SupportedDeserializationOptions.SupportedDeserializationOptions()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimSupportedDeserializationOptions.CustomObjectCreatorGet">
            <summary>SupportedDeserializationOptions.get_CustomObjectCreator()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimSupportedDeserializationOptions.CustomObjectCreatorSetBoolean">
            <summary>SupportedDeserializationOptions.set_CustomObjectCreator(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Serialization.Fakes.ShimSupportedDeserializationOptions.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimSupportedDeserializationOptions.AllInstances.CustomObjectCreatorGet">
            <summary>SupportedDeserializationOptions.get_CustomObjectCreator()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.ShimSupportedDeserializationOptions.AllInstances.CustomObjectCreatorSetBoolean">
            <summary>SupportedDeserializationOptions.set_CustomObjectCreator(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Serialization.Fakes.StubDefaultSerializer">
            <summary>Couchbase.Core.Serialization.DefaultSerializer의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.StubDefaultSerializer.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.StubDefaultSerializer.#ctor(Newtonsoft.Json.JsonSerializerSettings,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.StubDefaultSerializer.GetDeserializationSettings(Newtonsoft.Json.JsonSerializerSettings,Couchbase.Core.Serialization.DeserializationOptions)">
            <summary>DefaultSerializer.GetDeserializationSettings(JsonSerializerSettings baseSettings, DeserializationOptions options)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Serialization.Fakes.StubDefaultSerializer.GetDeserializationSettingsJsonSerializerSettingsDeserializationOptions">
            <summary>DefaultSerializer.GetDeserializationSettings(JsonSerializerSettings baseSettings, DeserializationOptions options)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.StubDefaultSerializer.InitializeStub">
            <summary>type StubDefaultSerializer의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.StubDefaultSerializer.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.StubDefaultSerializer.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.StubDefaultSerializer.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Serialization.Fakes.StubDeserializationOptions">
            <summary>Couchbase.Core.Serialization.DeserializationOptions의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.StubDeserializationOptions.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.StubDeserializationOptions.InitializeStub">
            <summary>type StubDeserializationOptions의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.StubDeserializationOptions.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.StubDeserializationOptions.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.StubDeserializationOptions.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Serialization.Fakes.StubICustomObjectCreator">
            <summary>Couchbase.Core.Serialization.ICustomObjectCreator의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.StubICustomObjectCreator.#ctor">
            <summary>type StubICustomObjectCreator의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Serialization.Fakes.StubICustomObjectCreator.CanCreateObjectType">
            <summary>ICustomObjectCreator.CanCreateObject(Type type)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.StubICustomObjectCreator.cnc::Couchbase#Core#Serialization#ICustomObjectCreator#CanCreateObject(System.Type)">
            <summary>ICustomObjectCreator.CanCreateObject(Type type)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.StubICustomObjectCreator.cnc::Couchbase#Core#Serialization#ICustomObjectCreator#CreateObject(System.Type)">
            <summary>ICustomObjectCreator.CreateObject(Type type)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Serialization.Fakes.StubICustomObjectCreator.CreateObjectType">
            <summary>ICustomObjectCreator.CreateObject(Type type)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Serialization.Fakes.StubIExtendedTypeSerializer">
            <summary>Couchbase.Core.Serialization.IExtendedTypeSerializer의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.StubIExtendedTypeSerializer.#ctor">
            <summary>type StubIExtendedTypeSerializer의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.StubIExtendedTypeSerializer.AttachBackingFieldToDeserializationOptions">
            <summary>대리자를 연결하여 StubIExtendedTypeSerializer.DeserializationOptions을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.StubIExtendedTypeSerializer.cnc::Couchbase#Core#Serialization#IExtendedTypeSerializer#GetMemberName(System.Reflection.MemberInfo)">
            <summary>IExtendedTypeSerializer.GetMemberName(MemberInfo member)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.StubIExtendedTypeSerializer.cnc::Couchbase#Core#Serialization#ITypeSerializer#Deserialize``1(System.IO.Stream)">
            <summary>ITypeSerializer.Deserialize(Stream stream)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.StubIExtendedTypeSerializer.cnc::Couchbase#Core#Serialization#ITypeSerializer#Deserialize``1(System.Byte[],System.Int32,System.Int32)">
            <summary>ITypeSerializer.Deserialize(Byte[] buffer, Int32 offset, Int32 length)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.StubIExtendedTypeSerializer.cnc::Couchbase#Core#Serialization#ITypeSerializer#Serialize(System.Object)">
            <summary>ITypeSerializer.Serialize(Object obj)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Serialization.Fakes.StubIExtendedTypeSerializer.DeserializationOptionsGet">
            <summary>IExtendedTypeSerializer.get_DeserializationOptions()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Serialization.Fakes.StubIExtendedTypeSerializer.DeserializationOptionsSetDeserializationOptions">
            <summary>IExtendedTypeSerializer.set_DeserializationOptions(DeserializationOptions value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.StubIExtendedTypeSerializer.DeserializeOf1ByteArrayInt32Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Byte[],System.Int32,System.Int32,``0})">
            <summary>Deserialize(Byte[] buffer, Int32 offset, Int32 length)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.StubIExtendedTypeSerializer.DeserializeOf1Stream``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.IO.Stream,``0})">
            <summary>Deserialize(Stream stream)의 스텁을 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Serialization.Fakes.StubIExtendedTypeSerializer.GetMemberNameMemberInfo">
            <summary>IExtendedTypeSerializer.GetMemberName(MemberInfo member)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Serialization.Fakes.StubIExtendedTypeSerializer.SerializeObject">
            <summary>ITypeSerializer.Serialize(Object obj)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Serialization.Fakes.StubIExtendedTypeSerializer.SupportedDeserializationOptionsGet">
            <summary>IExtendedTypeSerializer.get_SupportedDeserializationOptions()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.StubIExtendedTypeSerializer.cnc::Couchbase#Core#Serialization#IExtendedTypeSerializer#DeserializationOptions">
            <summary>IExtendedTypeSerializer.get_DeserializationOptions()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.StubIExtendedTypeSerializer.cnc::Couchbase#Core#Serialization#IExtendedTypeSerializer#SupportedDeserializationOptions">
            <summary>IExtendedTypeSerializer.get_SupportedDeserializationOptions()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Serialization.Fakes.StubITypeSerializer">
            <summary>Couchbase.Core.Serialization.ITypeSerializer의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.StubITypeSerializer.#ctor">
            <summary>type StubITypeSerializer의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.StubITypeSerializer.cnc::Couchbase#Core#Serialization#ITypeSerializer#Deserialize``1(System.IO.Stream)">
            <summary>ITypeSerializer.Deserialize(Stream stream)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.StubITypeSerializer.cnc::Couchbase#Core#Serialization#ITypeSerializer#Deserialize``1(System.Byte[],System.Int32,System.Int32)">
            <summary>ITypeSerializer.Deserialize(Byte[] buffer, Int32 offset, Int32 length)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.StubITypeSerializer.cnc::Couchbase#Core#Serialization#ITypeSerializer#Serialize(System.Object)">
            <summary>ITypeSerializer.Serialize(Object obj)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.StubITypeSerializer.DeserializeOf1ByteArrayInt32Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Byte[],System.Int32,System.Int32,``0})">
            <summary>Deserialize(Byte[] buffer, Int32 offset, Int32 length)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.StubITypeSerializer.DeserializeOf1Stream``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.IO.Stream,``0})">
            <summary>Deserialize(Stream stream)의 스텁을 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Serialization.Fakes.StubITypeSerializer.SerializeObject">
            <summary>ITypeSerializer.Serialize(Object obj)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Serialization.Fakes.StubITypeSerializerProvider">
            <summary>Couchbase.Core.Serialization.ITypeSerializerProvider의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.StubITypeSerializerProvider.#ctor">
            <summary>type StubITypeSerializerProvider의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Serialization.Fakes.StubITypeSerializerProvider.SerializerGet">
            <summary>ITypeSerializerProvider.get_Serializer()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.StubITypeSerializerProvider.cnc::Couchbase#Core#Serialization#ITypeSerializerProvider#Serializer">
            <summary>ITypeSerializerProvider.get_Serializer()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Serialization.Fakes.StubSupportedDeserializationOptions">
            <summary>Couchbase.Core.Serialization.SupportedDeserializationOptions의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.StubSupportedDeserializationOptions.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Serialization.Fakes.StubSupportedDeserializationOptions.InitializeStub">
            <summary>type StubSupportedDeserializationOptions의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.StubSupportedDeserializationOptions.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.StubSupportedDeserializationOptions.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Serialization.Fakes.StubSupportedDeserializationOptions.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Services.Fakes.ShimServiceNotSupportedException">
            <summary>Couchbase.Core.Services.ServiceNotSupportedException의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Services.Fakes.ShimServiceNotSupportedException.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Services.Fakes.ShimServiceNotSupportedException.#ctor(Couchbase.Core.Services.ServiceNotSupportedException)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Services.Fakes.ShimServiceNotSupportedException.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Services.Fakes.ShimServiceNotSupportedException.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Services.Fakes.ShimServiceNotSupportedException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Services.Fakes.ShimServiceNotSupportedException.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Services.Fakes.ShimServiceNotSupportedException.Constructor">
            <summary>ServiceNotSupportedException.ServiceNotSupportedException()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Services.Fakes.ShimServiceNotSupportedException.ConstructorSerializationInfoStreamingContext">
            <summary>ServiceNotSupportedException.ServiceNotSupportedException(SerializationInfo info, StreamingContext context)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Services.Fakes.ShimServiceNotSupportedException.ConstructorString">
            <summary>ServiceNotSupportedException.ServiceNotSupportedException(String message)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Services.Fakes.ShimServiceNotSupportedException.ConstructorStringException">
            <summary>ServiceNotSupportedException.ServiceNotSupportedException(String message, Exception innerException)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Services.Fakes.ShimServiceNotSupportedException.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Core.Services.Fakes.StubServiceNotSupportedException">
            <summary>Couchbase.Core.Services.ServiceNotSupportedException의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Services.Fakes.StubServiceNotSupportedException.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Services.Fakes.StubServiceNotSupportedException.#ctor(System.String)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Services.Fakes.StubServiceNotSupportedException.#ctor(System.String,System.Exception)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Services.Fakes.StubServiceNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Services.Fakes.StubServiceNotSupportedException.AttachBackingFieldToHelpLink">
            <summary>대리자를 연결하여 StubServiceNotSupportedException.HelpLink을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Services.Fakes.StubServiceNotSupportedException.AttachBackingFieldToSource">
            <summary>대리자를 연결하여 StubServiceNotSupportedException.Source을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Services.Fakes.StubServiceNotSupportedException.DataGet">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Services.Fakes.StubServiceNotSupportedException.GetBaseException">
            <summary>Exception.GetBaseException()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Services.Fakes.StubServiceNotSupportedException.GetBaseException01">
            <summary>Exception.GetBaseException()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Services.Fakes.StubServiceNotSupportedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Exception.GetObjectData(SerializationInfo info, StreamingContext context)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Services.Fakes.StubServiceNotSupportedException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Exception.GetObjectData(SerializationInfo info, StreamingContext context)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Services.Fakes.StubServiceNotSupportedException.HelpLinkGet">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Services.Fakes.StubServiceNotSupportedException.HelpLinkSetString">
            <summary>Exception.set_HelpLink(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Services.Fakes.StubServiceNotSupportedException.InitializeStub">
            <summary>type StubServiceNotSupportedException의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Services.Fakes.StubServiceNotSupportedException.MessageGet">
            <summary>Exception.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Services.Fakes.StubServiceNotSupportedException.SourceGet">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Services.Fakes.StubServiceNotSupportedException.SourceSetString">
            <summary>Exception.set_Source(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Services.Fakes.StubServiceNotSupportedException.StackTraceGet">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Services.Fakes.StubServiceNotSupportedException.ToString">
            <summary>Exception.ToString()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Services.Fakes.StubServiceNotSupportedException.ToString01">
            <summary>Exception.ToString()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Services.Fakes.StubServiceNotSupportedException.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Services.Fakes.StubServiceNotSupportedException.Data">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Services.Fakes.StubServiceNotSupportedException.HelpLink">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Services.Fakes.StubServiceNotSupportedException.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Services.Fakes.StubServiceNotSupportedException.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Services.Fakes.StubServiceNotSupportedException.Message">
            <summary>Exception.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Services.Fakes.StubServiceNotSupportedException.Source">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Services.Fakes.StubServiceNotSupportedException.StackTrace">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Transcoders.Fakes.ShimBinaryToJsonTranscoder">
            <summary>Couchbase.Core.Transcoders.BinaryToJsonTranscoder의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.ShimBinaryToJsonTranscoder.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.ShimBinaryToJsonTranscoder.#ctor(Couchbase.Core.Transcoders.BinaryToJsonTranscoder)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.ShimBinaryToJsonTranscoder.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.ShimBinaryToJsonTranscoder.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.ShimBinaryToJsonTranscoder.Bind(Couchbase.Core.Transcoders.ITypeTranscoder)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.ShimBinaryToJsonTranscoder.DecodeOf1ByteArrayInt32Int32OperationCode``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Byte[],System.Int32,System.Int32,Couchbase.IO.Operations.OperationCode,``0})">
            <summary>BinaryToJsonTranscoder.Decode(Byte[] buffer, Int32 offset, Int32 length, OperationCode opcode)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.ShimBinaryToJsonTranscoder.DeserializeAsBinaryOf1ByteArrayInt32Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Byte[],System.Int32,System.Int32,``0})">
            <summary>BinaryToJsonTranscoder.DeserializeAsBinary(Byte[] buffer, Int32 offset, Int32 length)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Transcoders.Fakes.ShimBinaryToJsonTranscoder.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Transcoders.Fakes.ShimBinaryToJsonTranscoder.Constructor">
            <summary>BinaryToJsonTranscoder.BinaryToJsonTranscoder()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Transcoders.Fakes.ShimBinaryToJsonTranscoder.ConstructorIByteConverter">
            <summary>BinaryToJsonTranscoder.BinaryToJsonTranscoder(IByteConverter converter)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Transcoders.Fakes.ShimBinaryToJsonTranscoder.ConstructorIByteConverterITypeSerializer">
            <summary>BinaryToJsonTranscoder.BinaryToJsonTranscoder(IByteConverter converter, ITypeSerializer serializer)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Transcoders.Fakes.ShimBinaryToJsonTranscoder.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.ShimBinaryToJsonTranscoder.AllInstances.DecodeOf1ByteArrayInt32Int32OperationCode``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.Core.Transcoders.BinaryToJsonTranscoder,System.Byte[],System.Int32,System.Int32,Couchbase.IO.Operations.OperationCode,``0})">
            <summary>BinaryToJsonTranscoder.Decode(Byte[] buffer, Int32 offset, Int32 length, OperationCode opcode)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.ShimBinaryToJsonTranscoder.AllInstances.DeserializeAsBinaryOf1ByteArrayInt32Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.Core.Transcoders.BinaryToJsonTranscoder,System.Byte[],System.Int32,System.Int32,``0})">
            <summary>BinaryToJsonTranscoder.DeserializeAsBinary(Byte[] buffer, Int32 offset, Int32 length)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Transcoders.Fakes.ShimDefaultTranscoder">
            <summary>Couchbase.Core.Transcoders.DefaultTranscoder의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.ShimDefaultTranscoder.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.ShimDefaultTranscoder.#ctor(Couchbase.Core.Transcoders.DefaultTranscoder)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.ShimDefaultTranscoder.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.ShimDefaultTranscoder.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.ShimDefaultTranscoder.Bind(Couchbase.Core.Transcoders.ITypeTranscoder)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.ShimDefaultTranscoder.DecodeOf1ArraySegmentOfByteInt32Int32FlagsOperationCode``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ArraySegment{System.Byte},System.Int32,System.Int32,Couchbase.IO.Operations.Flags,Couchbase.IO.Operations.OperationCode,``0})">
            <summary>DefaultTranscoder.Decode(ArraySegment`1&lt;Byte&gt; buffer, Int32 offset, Int32 length, Flags flags, OperationCode opcode)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.ShimDefaultTranscoder.DecodeOf1ByteArrayInt32Int32FlagsOperationCode``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Byte[],System.Int32,System.Int32,Couchbase.IO.Operations.Flags,Couchbase.IO.Operations.OperationCode,``0})">
            <summary>DefaultTranscoder.Decode(Byte[] buffer, Int32 offset, Int32 length, Flags flags, OperationCode opcode)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.ShimDefaultTranscoder.DecodeOf1ByteArrayInt32Int32OperationCode``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Byte[],System.Int32,System.Int32,Couchbase.IO.Operations.OperationCode,``0})">
            <summary>DefaultTranscoder.Decode(Byte[] buffer, Int32 offset, Int32 length, OperationCode opcode)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.ShimDefaultTranscoder.DeserializeAsJsonOf1ByteArrayInt32Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Byte[],System.Int32,System.Int32,``0})">
            <summary>DefaultTranscoder.DeserializeAsJson(Byte[] buffer, Int32 offset, Int32 length)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.ShimDefaultTranscoder.EncodeOf1M0FlagsOperationCode``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,Couchbase.IO.Operations.Flags,Couchbase.IO.Operations.OperationCode,System.Byte[]})">
            <summary>DefaultTranscoder.Encode(!!0 value, Flags flags, OperationCode opcode)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.ShimDefaultTranscoder.EncodeOf1M0TypeCodeOperationCode``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.TypeCode,Couchbase.IO.Operations.OperationCode,System.Byte[]})">
            <summary>DefaultTranscoder.Encode(!!0 value, TypeCode typeCode, OperationCode opcode)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.ShimDefaultTranscoder.GetFormatOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,Couchbase.IO.Operations.Flags})">
            <summary>DefaultTranscoder.GetFormat(!!0 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Transcoders.Fakes.ShimDefaultTranscoder.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Transcoders.Fakes.ShimDefaultTranscoder.Constructor">
            <summary>DefaultTranscoder.DefaultTranscoder()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Transcoders.Fakes.ShimDefaultTranscoder.ConstructorIByteConverter">
            <summary>DefaultTranscoder.DefaultTranscoder(IByteConverter converter)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Transcoders.Fakes.ShimDefaultTranscoder.ConstructorIByteConverterITypeSerializer">
            <summary>DefaultTranscoder.DefaultTranscoder(IByteConverter converter, ITypeSerializer serializer)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Transcoders.Fakes.ShimDefaultTranscoder.ConverterGet">
            <summary>DefaultTranscoder.get_Converter()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Transcoders.Fakes.ShimDefaultTranscoder.ConverterSetIByteConverter">
            <summary>DefaultTranscoder.set_Converter(IByteConverter value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Transcoders.Fakes.ShimDefaultTranscoder.DecodeBinaryByteArrayInt32Int32">
            <summary>DefaultTranscoder.DecodeBinary(Byte[] buffer, Int32 offset, Int32 length)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Transcoders.Fakes.ShimDefaultTranscoder.DecodeCharByteArrayInt32Int32">
            <summary>DefaultTranscoder.DecodeChar(Byte[] buffer, Int32 offset, Int32 length)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Transcoders.Fakes.ShimDefaultTranscoder.DecodeStringByteArrayInt32Int32">
            <summary>DefaultTranscoder.DecodeString(Byte[] buffer, Int32 offset, Int32 length)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Transcoders.Fakes.ShimDefaultTranscoder.SerializeAsJsonObject">
            <summary>DefaultTranscoder.SerializeAsJson(Object value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Transcoders.Fakes.ShimDefaultTranscoder.SerializerGet">
            <summary>DefaultTranscoder.get_Serializer()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Transcoders.Fakes.ShimDefaultTranscoder.SerializerSetITypeSerializer">
            <summary>DefaultTranscoder.set_Serializer(ITypeSerializer value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Transcoders.Fakes.ShimDefaultTranscoder.StaticConstructor">
            <summary>DefaultTranscoder.DefaultTranscoder()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Transcoders.Fakes.ShimDefaultTranscoder.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.ShimDefaultTranscoder.AllInstances.DecodeOf1ArraySegmentOfByteInt32Int32FlagsOperationCode``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.Core.Transcoders.DefaultTranscoder,System.ArraySegment{System.Byte},System.Int32,System.Int32,Couchbase.IO.Operations.Flags,Couchbase.IO.Operations.OperationCode,``0})">
            <summary>DefaultTranscoder.Decode(ArraySegment`1&lt;Byte&gt; buffer, Int32 offset, Int32 length, Flags flags, OperationCode opcode)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.ShimDefaultTranscoder.AllInstances.DecodeOf1ByteArrayInt32Int32FlagsOperationCode``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.Core.Transcoders.DefaultTranscoder,System.Byte[],System.Int32,System.Int32,Couchbase.IO.Operations.Flags,Couchbase.IO.Operations.OperationCode,``0})">
            <summary>DefaultTranscoder.Decode(Byte[] buffer, Int32 offset, Int32 length, Flags flags, OperationCode opcode)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.ShimDefaultTranscoder.AllInstances.DecodeOf1ByteArrayInt32Int32OperationCode``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.Core.Transcoders.DefaultTranscoder,System.Byte[],System.Int32,System.Int32,Couchbase.IO.Operations.OperationCode,``0})">
            <summary>DefaultTranscoder.Decode(Byte[] buffer, Int32 offset, Int32 length, OperationCode opcode)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.ShimDefaultTranscoder.AllInstances.DeserializeAsJsonOf1ByteArrayInt32Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.Core.Transcoders.DefaultTranscoder,System.Byte[],System.Int32,System.Int32,``0})">
            <summary>DefaultTranscoder.DeserializeAsJson(Byte[] buffer, Int32 offset, Int32 length)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.ShimDefaultTranscoder.AllInstances.EncodeOf1M0FlagsOperationCode``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.Core.Transcoders.DefaultTranscoder,``0,Couchbase.IO.Operations.Flags,Couchbase.IO.Operations.OperationCode,System.Byte[]})">
            <summary>DefaultTranscoder.Encode(!!0 value, Flags flags, OperationCode opcode)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.ShimDefaultTranscoder.AllInstances.EncodeOf1M0TypeCodeOperationCode``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.Core.Transcoders.DefaultTranscoder,``0,System.TypeCode,Couchbase.IO.Operations.OperationCode,System.Byte[]})">
            <summary>DefaultTranscoder.Encode(!!0 value, TypeCode typeCode, OperationCode opcode)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.ShimDefaultTranscoder.AllInstances.GetFormatOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.Core.Transcoders.DefaultTranscoder,``0,Couchbase.IO.Operations.Flags})">
            <summary>DefaultTranscoder.GetFormat(!!0 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Transcoders.Fakes.ShimDefaultTranscoder.AllInstances.ConverterGet">
            <summary>DefaultTranscoder.get_Converter()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Transcoders.Fakes.ShimDefaultTranscoder.AllInstances.ConverterSetIByteConverter">
            <summary>DefaultTranscoder.set_Converter(IByteConverter value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Transcoders.Fakes.ShimDefaultTranscoder.AllInstances.DecodeBinaryByteArrayInt32Int32">
            <summary>DefaultTranscoder.DecodeBinary(Byte[] buffer, Int32 offset, Int32 length)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Transcoders.Fakes.ShimDefaultTranscoder.AllInstances.DecodeCharByteArrayInt32Int32">
            <summary>DefaultTranscoder.DecodeChar(Byte[] buffer, Int32 offset, Int32 length)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Transcoders.Fakes.ShimDefaultTranscoder.AllInstances.DecodeStringByteArrayInt32Int32">
            <summary>DefaultTranscoder.DecodeString(Byte[] buffer, Int32 offset, Int32 length)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Transcoders.Fakes.ShimDefaultTranscoder.AllInstances.SerializeAsJsonObject">
            <summary>DefaultTranscoder.SerializeAsJson(Object value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Transcoders.Fakes.ShimDefaultTranscoder.AllInstances.SerializerGet">
            <summary>DefaultTranscoder.get_Serializer()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Transcoders.Fakes.ShimDefaultTranscoder.AllInstances.SerializerSetITypeSerializer">
            <summary>DefaultTranscoder.set_Serializer(ITypeSerializer value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Transcoders.Fakes.ShimTranscoderFactory">
            <summary>Couchbase.Core.Transcoders.TranscoderFactory의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.ShimTranscoderFactory.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.ShimTranscoderFactory.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.ShimTranscoderFactory.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Transcoders.Fakes.ShimTranscoderFactory.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Transcoders.Fakes.ShimTranscoderFactory.GetTranscoderClientConfiguration">
            <summary>TranscoderFactory.GetTranscoder(ClientConfiguration config)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Transcoders.Fakes.ShimTranscoderFactory.GetTranscoderClientConfigurationString">
            <summary>TranscoderFactory.GetTranscoder(ClientConfiguration config, String typeName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Transcoders.Fakes.ShimTranscoderFactory.GetTranscoderClientConfigurationTranscoderElement">
            <summary>TranscoderFactory.GetTranscoder(ClientConfiguration config, TranscoderElement element)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Transcoders.Fakes.StubBinaryToJsonTranscoder">
            <summary>Couchbase.Core.Transcoders.BinaryToJsonTranscoder의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubBinaryToJsonTranscoder.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubBinaryToJsonTranscoder.#ctor(Couchbase.IO.Converters.IByteConverter)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubBinaryToJsonTranscoder.#ctor(Couchbase.IO.Converters.IByteConverter,Couchbase.Core.Serialization.ITypeSerializer)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubBinaryToJsonTranscoder.Decode``1(System.Byte[],System.Int32,System.Int32,Couchbase.IO.Operations.OperationCode)">
            <summary>BinaryToJsonTranscoder.Decode(Byte[] buffer, Int32 offset, Int32 length, OperationCode opcode)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubBinaryToJsonTranscoder.Decode``1(System.Byte[],System.Int32,System.Int32,Couchbase.IO.Operations.Flags,Couchbase.IO.Operations.OperationCode)">
            <summary>DefaultTranscoder.Decode(Byte[] buffer, Int32 offset, Int32 length, Flags flags, OperationCode opcode)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubBinaryToJsonTranscoder.Decode``1(System.ArraySegment{System.Byte},System.Int32,System.Int32,Couchbase.IO.Operations.Flags,Couchbase.IO.Operations.OperationCode)">
            <summary>DefaultTranscoder.Decode(ArraySegment`1&lt;Byte&gt; buffer, Int32 offset, Int32 length, Flags flags, OperationCode opcode)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubBinaryToJsonTranscoder.DecodeOf1ArraySegmentOfByteInt32Int32FlagsOperationCode``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ArraySegment{System.Byte},System.Int32,System.Int32,Couchbase.IO.Operations.Flags,Couchbase.IO.Operations.OperationCode,``0})">
            <summary>Decode(ArraySegment`1&lt;Byte&gt; buffer, Int32 offset, Int32 length, Flags flags, OperationCode opcode)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubBinaryToJsonTranscoder.DecodeOf1ByteArrayInt32Int32FlagsOperationCode``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Byte[],System.Int32,System.Int32,Couchbase.IO.Operations.Flags,Couchbase.IO.Operations.OperationCode,``0})">
            <summary>Decode(Byte[] buffer, Int32 offset, Int32 length, Flags flags, OperationCode opcode)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubBinaryToJsonTranscoder.DecodeOf1ByteArrayInt32Int32OperationCode``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Byte[],System.Int32,System.Int32,Couchbase.IO.Operations.OperationCode,``0})">
            <summary>Decode(Byte[] buffer, Int32 offset, Int32 length, OperationCode opcode)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubBinaryToJsonTranscoder.DeserializeAsJson``1(System.Byte[],System.Int32,System.Int32)">
            <summary>DefaultTranscoder.DeserializeAsJson(Byte[] buffer, Int32 offset, Int32 length)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubBinaryToJsonTranscoder.DeserializeAsJsonOf1ByteArrayInt32Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Byte[],System.Int32,System.Int32,``0})">
            <summary>DeserializeAsJson(Byte[] buffer, Int32 offset, Int32 length)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubBinaryToJsonTranscoder.Encode``1(``0,Couchbase.IO.Operations.Flags,Couchbase.IO.Operations.OperationCode)">
            <summary>DefaultTranscoder.Encode(!!0 value, Flags flags, OperationCode opcode)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubBinaryToJsonTranscoder.Encode``1(``0,System.TypeCode,Couchbase.IO.Operations.OperationCode)">
            <summary>DefaultTranscoder.Encode(!!0 value, TypeCode typeCode, OperationCode opcode)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubBinaryToJsonTranscoder.EncodeOf1M0FlagsOperationCode``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,Couchbase.IO.Operations.Flags,Couchbase.IO.Operations.OperationCode,System.Byte[]})">
            <summary>Encode(!!0 value, Flags flags, OperationCode opcode)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubBinaryToJsonTranscoder.EncodeOf1M0TypeCodeOperationCode``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.TypeCode,Couchbase.IO.Operations.OperationCode,System.Byte[]})">
            <summary>Encode(!!0 value, TypeCode typeCode, OperationCode opcode)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubBinaryToJsonTranscoder.GetFormat``1(``0)">
            <summary>DefaultTranscoder.GetFormat(!!0 value)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubBinaryToJsonTranscoder.GetFormatOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,Couchbase.IO.Operations.Flags})">
            <summary>GetFormat(!!0 value)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubBinaryToJsonTranscoder.InitializeStub">
            <summary>type StubBinaryToJsonTranscoder의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubBinaryToJsonTranscoder.SerializeAsJson(System.Object)">
            <summary>DefaultTranscoder.SerializeAsJson(Object value)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Transcoders.Fakes.StubBinaryToJsonTranscoder.SerializeAsJsonObject">
            <summary>DefaultTranscoder.SerializeAsJson(Object value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Transcoders.Fakes.StubBinaryToJsonTranscoder.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Transcoders.Fakes.StubBinaryToJsonTranscoder.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Transcoders.Fakes.StubBinaryToJsonTranscoder.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Transcoders.Fakes.StubDefaultTranscoder">
            <summary>Couchbase.Core.Transcoders.DefaultTranscoder의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubDefaultTranscoder.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubDefaultTranscoder.#ctor(Couchbase.IO.Converters.IByteConverter)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubDefaultTranscoder.#ctor(Couchbase.IO.Converters.IByteConverter,Couchbase.Core.Serialization.ITypeSerializer)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubDefaultTranscoder.Decode``1(System.Byte[],System.Int32,System.Int32,Couchbase.IO.Operations.OperationCode)">
            <summary>DefaultTranscoder.Decode(Byte[] buffer, Int32 offset, Int32 length, OperationCode opcode)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubDefaultTranscoder.Decode``1(System.ArraySegment{System.Byte},System.Int32,System.Int32,Couchbase.IO.Operations.Flags,Couchbase.IO.Operations.OperationCode)">
            <summary>DefaultTranscoder.Decode(ArraySegment`1&lt;Byte&gt; buffer, Int32 offset, Int32 length, Flags flags, OperationCode opcode)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubDefaultTranscoder.Decode``1(System.Byte[],System.Int32,System.Int32,Couchbase.IO.Operations.Flags,Couchbase.IO.Operations.OperationCode)">
            <summary>DefaultTranscoder.Decode(Byte[] buffer, Int32 offset, Int32 length, Flags flags, OperationCode opcode)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubDefaultTranscoder.DecodeOf1ArraySegmentOfByteInt32Int32FlagsOperationCode``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ArraySegment{System.Byte},System.Int32,System.Int32,Couchbase.IO.Operations.Flags,Couchbase.IO.Operations.OperationCode,``0})">
            <summary>Decode(ArraySegment`1&lt;Byte&gt; buffer, Int32 offset, Int32 length, Flags flags, OperationCode opcode)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubDefaultTranscoder.DecodeOf1ByteArrayInt32Int32FlagsOperationCode``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Byte[],System.Int32,System.Int32,Couchbase.IO.Operations.Flags,Couchbase.IO.Operations.OperationCode,``0})">
            <summary>Decode(Byte[] buffer, Int32 offset, Int32 length, Flags flags, OperationCode opcode)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubDefaultTranscoder.DecodeOf1ByteArrayInt32Int32OperationCode``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Byte[],System.Int32,System.Int32,Couchbase.IO.Operations.OperationCode,``0})">
            <summary>Decode(Byte[] buffer, Int32 offset, Int32 length, OperationCode opcode)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubDefaultTranscoder.DeserializeAsJson``1(System.Byte[],System.Int32,System.Int32)">
            <summary>DefaultTranscoder.DeserializeAsJson(Byte[] buffer, Int32 offset, Int32 length)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubDefaultTranscoder.DeserializeAsJsonOf1ByteArrayInt32Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Byte[],System.Int32,System.Int32,``0})">
            <summary>DeserializeAsJson(Byte[] buffer, Int32 offset, Int32 length)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubDefaultTranscoder.Encode``1(``0,Couchbase.IO.Operations.Flags,Couchbase.IO.Operations.OperationCode)">
            <summary>DefaultTranscoder.Encode(!!0 value, Flags flags, OperationCode opcode)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubDefaultTranscoder.Encode``1(``0,System.TypeCode,Couchbase.IO.Operations.OperationCode)">
            <summary>DefaultTranscoder.Encode(!!0 value, TypeCode typeCode, OperationCode opcode)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubDefaultTranscoder.EncodeOf1M0FlagsOperationCode``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,Couchbase.IO.Operations.Flags,Couchbase.IO.Operations.OperationCode,System.Byte[]})">
            <summary>Encode(!!0 value, Flags flags, OperationCode opcode)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubDefaultTranscoder.EncodeOf1M0TypeCodeOperationCode``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.TypeCode,Couchbase.IO.Operations.OperationCode,System.Byte[]})">
            <summary>Encode(!!0 value, TypeCode typeCode, OperationCode opcode)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubDefaultTranscoder.GetFormat``1(``0)">
            <summary>DefaultTranscoder.GetFormat(!!0 value)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubDefaultTranscoder.GetFormatOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,Couchbase.IO.Operations.Flags})">
            <summary>GetFormat(!!0 value)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubDefaultTranscoder.InitializeStub">
            <summary>type StubDefaultTranscoder의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubDefaultTranscoder.SerializeAsJson(System.Object)">
            <summary>DefaultTranscoder.SerializeAsJson(Object value)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Transcoders.Fakes.StubDefaultTranscoder.SerializeAsJsonObject">
            <summary>DefaultTranscoder.SerializeAsJson(Object value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Transcoders.Fakes.StubDefaultTranscoder.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Transcoders.Fakes.StubDefaultTranscoder.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Transcoders.Fakes.StubDefaultTranscoder.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Core.Transcoders.Fakes.StubITypeTranscoder">
            <summary>Couchbase.Core.Transcoders.ITypeTranscoder의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubITypeTranscoder.#ctor">
            <summary>type StubITypeTranscoder의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubITypeTranscoder.AttachBackingFieldToConverter">
            <summary>대리자를 연결하여 StubITypeTranscoder.Converter을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubITypeTranscoder.AttachBackingFieldToSerializer">
            <summary>대리자를 연결하여 StubITypeTranscoder.Serializer을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Transcoders.Fakes.StubITypeTranscoder.ConverterGet">
            <summary>ITypeTranscoder.get_Converter()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Transcoders.Fakes.StubITypeTranscoder.ConverterSetIByteConverter">
            <summary>ITypeTranscoder.set_Converter(IByteConverter value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubITypeTranscoder.cnc::Couchbase#Core#Transcoders#ITypeTranscoder#Decode``1(System.ArraySegment{System.Byte},System.Int32,System.Int32,Couchbase.IO.Operations.Flags,Couchbase.IO.Operations.OperationCode)">
            <summary>ITypeTranscoder.Decode(ArraySegment`1&lt;Byte&gt; buffer, Int32 offset, Int32 length, Flags flags, OperationCode opcode)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubITypeTranscoder.cnc::Couchbase#Core#Transcoders#ITypeTranscoder#Decode``1(System.Byte[],System.Int32,System.Int32,Couchbase.IO.Operations.Flags,Couchbase.IO.Operations.OperationCode)">
            <summary>ITypeTranscoder.Decode(Byte[] buffer, Int32 offset, Int32 length, Flags flags, OperationCode opcode)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubITypeTranscoder.cnc::Couchbase#Core#Transcoders#ITypeTranscoder#Encode``1(``0,Couchbase.IO.Operations.Flags,Couchbase.IO.Operations.OperationCode)">
            <summary>ITypeTranscoder.Encode(!!0 value, Flags flags, OperationCode opcode)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubITypeTranscoder.cnc::Couchbase#Core#Transcoders#ITypeTranscoder#GetFormat``1(``0)">
            <summary>ITypeTranscoder.GetFormat(!!0 value)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubITypeTranscoder.DecodeOf1ArraySegmentOfByteInt32Int32FlagsOperationCode``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ArraySegment{System.Byte},System.Int32,System.Int32,Couchbase.IO.Operations.Flags,Couchbase.IO.Operations.OperationCode,``0})">
            <summary>Decode(ArraySegment`1&lt;Byte&gt; buffer, Int32 offset, Int32 length, Flags flags, OperationCode opcode)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubITypeTranscoder.DecodeOf1ByteArrayInt32Int32FlagsOperationCode``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Byte[],System.Int32,System.Int32,Couchbase.IO.Operations.Flags,Couchbase.IO.Operations.OperationCode,``0})">
            <summary>Decode(Byte[] buffer, Int32 offset, Int32 length, Flags flags, OperationCode opcode)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubITypeTranscoder.EncodeOf1M0FlagsOperationCode``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,Couchbase.IO.Operations.Flags,Couchbase.IO.Operations.OperationCode,System.Byte[]})">
            <summary>Encode(!!0 value, Flags flags, OperationCode opcode)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Core.Transcoders.Fakes.StubITypeTranscoder.GetFormatOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,Couchbase.IO.Operations.Flags})">
            <summary>GetFormat(!!0 value)의 스텁을 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Transcoders.Fakes.StubITypeTranscoder.SerializerGet">
            <summary>ITypeTranscoder.get_Serializer()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Core.Transcoders.Fakes.StubITypeTranscoder.SerializerSetITypeSerializer">
            <summary>ITypeTranscoder.set_Serializer(ITypeSerializer value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Transcoders.Fakes.StubITypeTranscoder.cnc::Couchbase#Core#Transcoders#ITypeTranscoder#Converter">
            <summary>ITypeTranscoder.get_Converter()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Core.Transcoders.Fakes.StubITypeTranscoder.cnc::Couchbase#Core#Transcoders#ITypeTranscoder#Serializer">
            <summary>ITypeTranscoder.get_Serializer()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.ShimCasMismatchException">
            <summary>Couchbase.CasMismatchException의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCasMismatchException.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCasMismatchException.#ctor(Couchbase.CasMismatchException)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCasMismatchException.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCasMismatchException.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCasMismatchException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCasMismatchException.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCasMismatchException.Constructor">
            <summary>CasMismatchException.CasMismatchException()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCasMismatchException.ConstructorSerializationInfoStreamingContext">
            <summary>CasMismatchException.CasMismatchException(SerializationInfo info, StreamingContext context)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCasMismatchException.ConstructorString">
            <summary>CasMismatchException.CasMismatchException(String message)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCasMismatchException.ConstructorStringException">
            <summary>CasMismatchException.CasMismatchException(String message, Exception innerException)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.ShimCasMismatchException.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Fakes.ShimCluster">
            <summary>Couchbase.Cluster의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCluster.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCluster.#ctor(Couchbase.Cluster)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCluster.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCluster.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCluster.Bind(Couchbase.Core.ICluster)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCluster.Bind(System.IDisposable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCluster.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCluster.CloseBucketIBucket">
            <summary>Cluster.CloseBucket(IBucket bucket)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCluster.ConfigurationGet">
            <summary>Cluster.get_Configuration()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCluster.Constructor">
            <summary>Cluster.Cluster()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCluster.ConstructorClientConfiguration">
            <summary>Cluster.Cluster(ClientConfiguration configuration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCluster.ConstructorICouchbaseClientDefinition">
            <summary>Cluster.Cluster(ICouchbaseClientDefinition definition)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCluster.ConstructorString">
            <summary>Cluster.Cluster(String configurationSectionName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCluster.CreateManagerStringString">
            <summary>Cluster.CreateManager(String username, String password)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCluster.Dispose">
            <summary>Cluster.Dispose()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCluster.DisposeBoolean">
            <summary>Cluster.Dispose(Boolean disposing)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCluster.InfoGet">
            <summary>Cluster.get_Info()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCluster.IsOpenString">
            <summary>Cluster.IsOpen(String bucketName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCluster.LogConfigurationAndVersionClientConfiguration">
            <summary>Cluster.LogConfigurationAndVersion(ClientConfiguration configuration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCluster.OpenBucket">
            <summary>Cluster.OpenBucket()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCluster.OpenBucketString">
            <summary>Cluster.OpenBucket(String bucketname)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCluster.OpenBucketStringString">
            <summary>Cluster.OpenBucket(String bucketname, String password)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCluster.StaticConstructor">
            <summary>Cluster.Cluster()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCluster._Disposeb__20_0FormatMessageHandler">
            <summary>Cluster.&lt;Dispose&gt;b__20_0(FormatMessageHandler m)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.ShimCluster.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCluster.AllInstances.CloseBucketIBucket">
            <summary>Cluster.CloseBucket(IBucket bucket)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCluster.AllInstances.ConfigurationGet">
            <summary>Cluster.get_Configuration()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCluster.AllInstances.CreateManagerStringString">
            <summary>Cluster.CreateManager(String username, String password)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCluster.AllInstances.Dispose">
            <summary>Cluster.Dispose()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCluster.AllInstances.DisposeBoolean">
            <summary>Cluster.Dispose(Boolean disposing)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCluster.AllInstances.InfoGet">
            <summary>Cluster.get_Info()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCluster.AllInstances.IsOpenString">
            <summary>Cluster.IsOpen(String bucketName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCluster.AllInstances.OpenBucket">
            <summary>Cluster.OpenBucket()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCluster.AllInstances.OpenBucketString">
            <summary>Cluster.OpenBucket(String bucketname)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCluster.AllInstances.OpenBucketStringString">
            <summary>Cluster.OpenBucket(String bucketname, String password)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCluster.AllInstances._Disposeb__20_0FormatMessageHandler">
            <summary>Cluster.&lt;Dispose&gt;b__20_0(FormatMessageHandler m)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.ShimClusterHelper">
            <summary>Couchbase.ClusterHelper의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimClusterHelper.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimClusterHelper.#ctor(Couchbase.ClusterHelper)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimClusterHelper.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimClusterHelper.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimClusterHelper.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimClusterHelper.Close">
            <summary>ClusterHelper.Close()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimClusterHelper.Constructor">
            <summary>ClusterHelper.ClusterHelper()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimClusterHelper.ConstructorClientConfiguration">
            <summary>ClusterHelper.ClusterHelper(ClientConfiguration configuration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimClusterHelper.Count">
            <summary>ClusterHelper.Count()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimClusterHelper.Get">
            <summary>ClusterHelper.Get()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimClusterHelper.GetBucketString">
            <summary>ClusterHelper.GetBucket(String bucketName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimClusterHelper.GetBucketStringString">
            <summary>ClusterHelper.GetBucket(String bucketName, String password)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimClusterHelper.Initialize">
            <summary>ClusterHelper.Initialize()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimClusterHelper.InitializeClientConfiguration">
            <summary>ClusterHelper.Initialize(ClientConfiguration configuration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimClusterHelper.InitializeFuncOfCluster">
            <summary>ClusterHelper.Initialize(Func`1&lt;Cluster&gt; factory)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimClusterHelper.InitializeICouchbaseClientDefinition">
            <summary>ClusterHelper.Initialize(ICouchbaseClientDefinition definition)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimClusterHelper.InitializeString">
            <summary>ClusterHelper.Initialize(String configurationSectionName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimClusterHelper.RemoveBucketString">
            <summary>ClusterHelper.RemoveBucket(String bucketName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimClusterHelper.StaticConstructor">
            <summary>ClusterHelper.ClusterHelper()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.ShimClusterHelper.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Fakes.ShimClusterInfo">
            <summary>Couchbase.ClusterInfo의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimClusterInfo.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimClusterInfo.#ctor(Couchbase.ClusterInfo)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimClusterInfo.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimClusterInfo.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimClusterInfo.Bind(Couchbase.Core.IClusterInfo)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimClusterInfo.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimClusterInfo.BucketConfigs">
            <summary>ClusterInfo.BucketConfigs()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimClusterInfo.Pools">
            <summary>ClusterInfo.Pools()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.ShimClusterInfo.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimClusterInfo.AllInstances.BucketConfigs">
            <summary>ClusterInfo.BucketConfigs()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimClusterInfo.AllInstances.Pools">
            <summary>ClusterInfo.Pools()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.ShimCouchbaseBucket">
            <summary>Couchbase.CouchbaseBucket의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.#ctor(Couchbase.CouchbaseBucket)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.Bind(Couchbase.IQueryCacheInvalidator)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.Bind(Couchbase.Core.IBucket)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.Bind(System.IDisposable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.CheckForConfigUpdatesOf1IOperationResultOfM0IOperation``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IOperationResult{``0},Couchbase.IO.Operations.IOperation,System.Boolean})">
            <summary>CouchbaseBucket.CheckForConfigUpdates(IOperationResult`1&lt;!!0&gt; operationResult, IOperation operation)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.GetAndLockAsyncOf1StringTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.TimeSpan,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.GetAndLockAsync(String key, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.GetAndLockAsyncOf1StringUInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.UInt32,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.GetAndLockAsync(String key, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.GetAndLockOf1StringTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.TimeSpan,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.GetAndLock(String key, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.GetAndLockOf1StringUInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.UInt32,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.GetAndLock(String key, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.GetAndTouchAsyncOf1StringTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.TimeSpan,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.GetAndTouchAsync(String key, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.GetAndTouchDocumentAsyncOf1StringTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.TimeSpan,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>CouchbaseBucket.GetAndTouchDocumentAsync(String key, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.GetAndTouchDocumentOf1StringTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.TimeSpan,Couchbase.IDocumentResult{``0}})">
            <summary>CouchbaseBucket.GetAndTouchDocument(String key, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.GetAndTouchOf1StringTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.TimeSpan,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.GetAndTouch(String key, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.GetAsyncOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.GetAsync(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.GetDocumentAsyncOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>CouchbaseBucket.GetDocumentAsync(String id)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.GetDocumentOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,Couchbase.IDocumentResult{``0}})">
            <summary>CouchbaseBucket.GetDocument(String id)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.GetDocumentsAsyncOf1IEnumerableOfString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{System.String},System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>CouchbaseBucket.GetDocumentsAsync(IEnumerable`1&lt;String&gt; ids)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.GetFromReplicaAsyncOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.GetFromReplicaAsync(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.GetFromReplicaOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.GetFromReplica(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.GetOf1IListOfString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{System.String},System.Collections.Generic.IDictionary{System.String,Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.Get(IList`1&lt;String&gt; keys)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.GetOf1IListOfStringParallelOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{System.String},System.Threading.Tasks.ParallelOptions,System.Collections.Generic.IDictionary{System.String,Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.Get(IList`1&lt;String&gt; keys, ParallelOptions options)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.GetOf1IListOfStringParallelOptionsInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{System.String},System.Threading.Tasks.ParallelOptions,System.Int32,System.Collections.Generic.IDictionary{System.String,Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.Get(IList`1&lt;String&gt; keys, ParallelOptions options, Int32 rangeSize)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.GetOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Get(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.GetWithLockAsyncOf1StringTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.TimeSpan,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.GetWithLockAsync(String key, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.GetWithLockAsyncOf1StringUInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.UInt32,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.GetWithLockAsync(String key, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.GetWithLockOf1StringTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.TimeSpan,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.GetWithLock(String key, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.GetWithLockOf1StringUInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.UInt32,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.GetWithLock(String key, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.InsertAsyncOf1IDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>CouchbaseBucket.InsertAsync(IDocument`1&lt;!!0&gt; document)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.InsertAsyncOf1IDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>CouchbaseBucket.InsertAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.InsertAsyncOf1IDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>CouchbaseBucket.InsertAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.InsertAsyncOf1ListOfIDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{Couchbase.IDocument{``0}},System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>CouchbaseBucket.InsertAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.InsertAsyncOf1ListOfIDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>CouchbaseBucket.InsertAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.InsertAsyncOf1ListOfIDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>CouchbaseBucket.InsertAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.InsertAsyncOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.InsertAsync(String key, !!0 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.InsertAsyncOf1StringM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.InsertAsync(String key, !!0 value, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.InsertAsyncOf1StringM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.InsertAsync(String key, !!0 value, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.InsertAsyncOf1StringM0TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.TimeSpan,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.InsertAsync(String key, !!0 value, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.InsertAsyncOf1StringM0TimeSpanReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.InsertAsync(String key, !!0 value, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.InsertAsyncOf1StringM0UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt32,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.InsertAsync(String key, !!0 value, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.InsertAsyncOf1StringM0UInt32ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.InsertAsync(String key, !!0 value, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.InsertOf1IDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.IDocumentResult{``0}})">
            <summary>CouchbaseBucket.Insert(IDocument`1&lt;!!0&gt; document)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.InsertOf1IDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.IDocumentResult{``0}})">
            <summary>CouchbaseBucket.Insert(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.InsertOf1IDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IDocumentResult{``0}})">
            <summary>CouchbaseBucket.Insert(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.InsertOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Insert(String key, !!0 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.InsertOf1StringM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Couchbase.ReplicateTo,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Insert(String key, !!0 value, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.InsertOf1StringM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Insert(String key, !!0 value, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.InsertOf1StringM0TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.TimeSpan,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Insert(String key, !!0 value, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.InsertOf1StringM0TimeSpanReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Insert(String key, !!0 value, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.InsertOf1StringM0UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt32,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Insert(String key, !!0 value, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.InsertOf1StringM0UInt32ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Insert(String key, !!0 value, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.InvokeAsyncOf1ILookupInBuilderOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.Core.ILookupInBuilder{``0},System.Threading.Tasks.Task{Couchbase.IDocumentFragment{``0}}})">
            <summary>CouchbaseBucket.InvokeAsync(ILookupInBuilder`1&lt;!!0&gt; builder)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.InvokeAsyncOf1IMutateInBuilderOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.Core.IMutateInBuilder{``0},System.Threading.Tasks.Task{Couchbase.IDocumentFragment{``0}}})">
            <summary>CouchbaseBucket.InvokeAsync(IMutateInBuilder`1&lt;!!0&gt; builder)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.InvokeOf1ILookupInBuilderOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.Core.ILookupInBuilder{``0},Couchbase.IDocumentFragment{``0}})">
            <summary>CouchbaseBucket.Invoke(ILookupInBuilder`1&lt;!!0&gt; builder)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.InvokeOf1IMutateInBuilderOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.Core.IMutateInBuilder{``0},Couchbase.IDocumentFragment{``0}})">
            <summary>CouchbaseBucket.Invoke(IMutateInBuilder`1&lt;!!0&gt; builder)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.LookupInOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,Couchbase.Core.ILookupInBuilder{``0}})">
            <summary>CouchbaseBucket.LookupIn(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.MutateInOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,Couchbase.Core.IMutateInBuilder{``0}})">
            <summary>CouchbaseBucket.MutateIn(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.QueryAsyncOf1IQueryRequest``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.N1QL.IQueryRequest,System.Threading.Tasks.Task{Couchbase.N1QL.IQueryResult{``0}}})">
            <summary>CouchbaseBucket.QueryAsync(IQueryRequest queryRequest)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.QueryAsyncOf1IViewQueryable``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.Views.IViewQueryable,System.Threading.Tasks.Task{Couchbase.Views.IViewResult{``0}}})">
            <summary>CouchbaseBucket.QueryAsync(IViewQueryable query)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.QueryAsyncOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Threading.Tasks.Task{Couchbase.N1QL.IQueryResult{``0}}})">
            <summary>CouchbaseBucket.QueryAsync(String query)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.QueryOf1IQueryRequest``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.N1QL.IQueryRequest,Couchbase.N1QL.IQueryResult{``0}})">
            <summary>CouchbaseBucket.Query(IQueryRequest queryRequest)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.QueryOf1IViewQueryable``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.Views.IViewQueryable,Couchbase.Views.IViewResult{``0}})">
            <summary>CouchbaseBucket.Query(IViewQueryable query)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.QueryOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,Couchbase.N1QL.IQueryResult{``0}})">
            <summary>CouchbaseBucket.Query(String query)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.RemoveAsyncOf1IDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},System.Threading.Tasks.Task{Couchbase.IOperationResult}})">
            <summary>CouchbaseBucket.RemoveAsync(IDocument`1&lt;!!0&gt; document)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.RemoveAsyncOf1IDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IOperationResult}})">
            <summary>CouchbaseBucket.RemoveAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.RemoveAsyncOf1IDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult}})">
            <summary>CouchbaseBucket.RemoveAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.RemoveAsyncOf1ListOfIDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{Couchbase.IDocument{``0}},System.Threading.Tasks.Task{Couchbase.IOperationResult[]}})">
            <summary>CouchbaseBucket.RemoveAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.RemoveAsyncOf1ListOfIDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IOperationResult[]}})">
            <summary>CouchbaseBucket.RemoveAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.RemoveAsyncOf1ListOfIDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult[]}})">
            <summary>CouchbaseBucket.RemoveAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.RemoveOf1IDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.IOperationResult})">
            <summary>CouchbaseBucket.Remove(IDocument`1&lt;!!0&gt; document)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.RemoveOf1IDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.IOperationResult})">
            <summary>CouchbaseBucket.Remove(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.RemoveOf1IDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult})">
            <summary>CouchbaseBucket.Remove(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.ReplaceAsyncOf1IDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>CouchbaseBucket.ReplaceAsync(IDocument`1&lt;!!0&gt; document)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.ReplaceAsyncOf1IDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>CouchbaseBucket.ReplaceAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.ReplaceAsyncOf1IDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>CouchbaseBucket.ReplaceAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.ReplaceAsyncOf1ListOfIDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{Couchbase.IDocument{``0}},System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>CouchbaseBucket.ReplaceAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.ReplaceAsyncOf1ListOfIDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>CouchbaseBucket.ReplaceAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.ReplaceAsyncOf1ListOfIDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>CouchbaseBucket.ReplaceAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.ReplaceAsyncOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.ReplaceAsync(String key, !!0 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.ReplaceAsyncOf1StringM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.ReplaceAsync(String key, !!0 value, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.ReplaceAsyncOf1StringM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.ReplaceAsync(String key, !!0 value, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.ReplaceAsyncOf1StringM0TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.TimeSpan,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.ReplaceAsync(String key, !!0 value, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.ReplaceAsyncOf1StringM0UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt32,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.ReplaceAsync(String key, !!0 value, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.ReplaceAsyncOf1StringM0UInt64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.ReplaceAsync(String key, !!0 value, UInt64 cas)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.ReplaceAsyncOf1StringM0UInt64ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.ReplaceAsync(String key, !!0 value, UInt64 cas, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.ReplaceAsyncOf1StringM0UInt64ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.ReplaceAsync(String key, !!0 value, UInt64 cas, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.ReplaceAsyncOf1StringM0UInt64TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.TimeSpan,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.ReplaceAsync(String key, !!0 value, UInt64 cas, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.ReplaceAsyncOf1StringM0UInt64TimeSpanReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.ReplaceAsync(String key, !!0 value, UInt64 cas, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.ReplaceAsyncOf1StringM0UInt64UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.UInt32,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.ReplaceAsync(String key, !!0 value, UInt64 cas, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.ReplaceAsyncOf1StringM0UInt64UInt32ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.ReplaceAsync(String key, !!0 value, UInt64 cas, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.ReplaceOf1IDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.IDocumentResult{``0}})">
            <summary>CouchbaseBucket.Replace(IDocument`1&lt;!!0&gt; document)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.ReplaceOf1IDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.IDocumentResult{``0}})">
            <summary>CouchbaseBucket.Replace(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.ReplaceOf1IDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IDocumentResult{``0}})">
            <summary>CouchbaseBucket.Replace(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.ReplaceOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Replace(String key, !!0 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.ReplaceOf1StringM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Couchbase.ReplicateTo,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Replace(String key, !!0 value, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.ReplaceOf1StringM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Replace(String key, !!0 value, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.ReplaceOf1StringM0TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.TimeSpan,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Replace(String key, !!0 value, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.ReplaceOf1StringM0UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt32,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Replace(String key, !!0 value, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.ReplaceOf1StringM0UInt64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Replace(String key, !!0 value, UInt64 cas)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.ReplaceOf1StringM0UInt64ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,Couchbase.ReplicateTo,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Replace(String key, !!0 value, UInt64 cas, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.ReplaceOf1StringM0UInt64ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Replace(String key, !!0 value, UInt64 cas, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.ReplaceOf1StringM0UInt64TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.TimeSpan,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Replace(String key, !!0 value, UInt64 cas, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.ReplaceOf1StringM0UInt64TimeSpanReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Replace(String key, !!0 value, UInt64 cas, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.ReplaceOf1StringM0UInt64UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.UInt32,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Replace(String key, !!0 value, UInt64 cas, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.ReplaceOf1StringM0UInt64UInt32ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Replace(String key, !!0 value, UInt64 cas, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.UpsertAsyncOf1IDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>CouchbaseBucket.UpsertAsync(IDocument`1&lt;!!0&gt; document)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.UpsertAsyncOf1IDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>CouchbaseBucket.UpsertAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.UpsertAsyncOf1IDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>CouchbaseBucket.UpsertAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.UpsertAsyncOf1ListOfIDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{Couchbase.IDocument{``0}},System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>CouchbaseBucket.UpsertAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.UpsertAsyncOf1ListOfIDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>CouchbaseBucket.UpsertAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.UpsertAsyncOf1ListOfIDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>CouchbaseBucket.UpsertAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.UpsertAsyncOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.UpsertAsync(String key, !!0 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.UpsertAsyncOf1StringM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.UpsertAsync(String key, !!0 value, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.UpsertAsyncOf1StringM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.UpsertAsync(String key, !!0 value, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.UpsertAsyncOf1StringM0TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.TimeSpan,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.UpsertAsync(String key, !!0 value, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.UpsertAsyncOf1StringM0TimeSpanReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.UpsertAsync(String key, !!0 value, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.UpsertAsyncOf1StringM0UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt32,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.UpsertAsync(String key, !!0 value, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.UpsertAsyncOf1StringM0UInt32ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.UpsertAsync(String key, !!0 value, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.UpsertAsyncOf1StringM0UInt64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.UpsertAsync(String key, !!0 value, UInt64 cas)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.UpsertAsyncOf1StringM0UInt64TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.TimeSpan,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.UpsertAsync(String key, !!0 value, UInt64 cas, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.UpsertAsyncOf1StringM0UInt64TimeSpanReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.UpsertAsync(String key, !!0 value, UInt64 cas, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.UpsertAsyncOf1StringM0UInt64UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.UInt32,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.UpsertAsync(String key, !!0 value, UInt64 cas, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.UpsertAsyncOf1StringM0UInt64UInt32ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.UpsertAsync(String key, !!0 value, UInt64 cas, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.UpsertOf1IDictionaryOfStringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IDictionary{System.String,``0},System.Collections.Generic.IDictionary{System.String,Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.Upsert(IDictionary`2&lt;String,!!0&gt; items)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.UpsertOf1IDictionaryOfStringM0ParallelOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IDictionary{System.String,``0},System.Threading.Tasks.ParallelOptions,System.Collections.Generic.IDictionary{System.String,Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.Upsert(IDictionary`2&lt;String,!!0&gt; items, ParallelOptions options)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.UpsertOf1IDictionaryOfStringM0ParallelOptionsInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IDictionary{System.String,``0},System.Threading.Tasks.ParallelOptions,System.Int32,System.Collections.Generic.IDictionary{System.String,Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.Upsert(IDictionary`2&lt;String,!!0&gt; items, ParallelOptions options, Int32 rangeSize)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.UpsertOf1IDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.IDocumentResult{``0}})">
            <summary>CouchbaseBucket.Upsert(IDocument`1&lt;!!0&gt; document)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.UpsertOf1IDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.IDocumentResult{``0}})">
            <summary>CouchbaseBucket.Upsert(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.UpsertOf1IDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IDocumentResult{``0}})">
            <summary>CouchbaseBucket.Upsert(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.UpsertOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Upsert(String key, !!0 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.UpsertOf1StringM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Couchbase.ReplicateTo,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Upsert(String key, !!0 value, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.UpsertOf1StringM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Upsert(String key, !!0 value, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.UpsertOf1StringM0TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.TimeSpan,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Upsert(String key, !!0 value, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.UpsertOf1StringM0TimeSpanReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Upsert(String key, !!0 value, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.UpsertOf1StringM0UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt32,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Upsert(String key, !!0 value, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.UpsertOf1StringM0UInt32ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Upsert(String key, !!0 value, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.UpsertOf1StringM0UInt64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Upsert(String key, !!0 value, UInt64 cas)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.UpsertOf1StringM0UInt64TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.TimeSpan,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Upsert(String key, !!0 value, UInt64 cas, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.UpsertOf1StringM0UInt64TimeSpanReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Upsert(String key, !!0 value, UInt64 cas, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.UpsertOf1StringM0UInt64UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.UInt32,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Upsert(String key, !!0 value, UInt64 cas, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.UpsertOf1StringM0UInt64UInt32ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Upsert(String key, !!0 value, UInt64 cas, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AppendAsyncStringByteArray">
            <summary>CouchbaseBucket.AppendAsync(String key, Byte[] value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AppendAsyncStringString">
            <summary>CouchbaseBucket.AppendAsync(String key, String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AppendStringByteArray">
            <summary>CouchbaseBucket.Append(String key, Byte[] value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AppendStringString">
            <summary>CouchbaseBucket.Append(String key, String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.BucketTypeGet">
            <summary>CouchbaseBucket.get_BucketType()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.CheckDisposed">
            <summary>CouchbaseBucket.CheckDisposed()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.ClusterGet">
            <summary>CouchbaseBucket.get_Cluster()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.ConfigurationCouchbaseCoreIBucketget">
            <summary>CouchbaseBucket.Couchbase.Core.IBucket.get_Configuration()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.CouchbaseIRefCountableAddRef">
            <summary>CouchbaseBucket.Couchbase.IRefCountable.AddRef()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.CouchbaseIRefCountableRelease">
            <summary>CouchbaseBucket.Couchbase.IRefCountable.Release()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.CreateManagerStringString">
            <summary>CouchbaseBucket.CreateManager(String username, String password)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.CreateQueryStringString">
            <summary>CouchbaseBucket.CreateQuery(String designDoc, String view)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.CreateQueryStringStringBoolean">
            <summary>CouchbaseBucket.CreateQuery(String designdoc, String viewname, Boolean development)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.DecrementAsyncString">
            <summary>CouchbaseBucket.DecrementAsync(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.DecrementAsyncStringUInt64">
            <summary>CouchbaseBucket.DecrementAsync(String key, UInt64 delta)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.DecrementAsyncStringUInt64UInt64">
            <summary>CouchbaseBucket.DecrementAsync(String key, UInt64 delta, UInt64 initial)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.DecrementAsyncStringUInt64UInt64TimeSpan">
            <summary>CouchbaseBucket.DecrementAsync(String key, UInt64 delta, UInt64 initial, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.DecrementAsyncStringUInt64UInt64UInt32">
            <summary>CouchbaseBucket.DecrementAsync(String key, UInt64 delta, UInt64 initial, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.DecrementString">
            <summary>CouchbaseBucket.Decrement(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.DecrementStringUInt64">
            <summary>CouchbaseBucket.Decrement(String key, UInt64 delta)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.DecrementStringUInt64UInt64">
            <summary>CouchbaseBucket.Decrement(String key, UInt64 delta, UInt64 initial)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.DecrementStringUInt64UInt64TimeSpan">
            <summary>CouchbaseBucket.Decrement(String key, UInt64 delta, UInt64 initial, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.DecrementStringUInt64UInt64UInt32">
            <summary>CouchbaseBucket.Decrement(String key, UInt64 delta, UInt64 initial, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.Dispose">
            <summary>CouchbaseBucket.Dispose()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.DisposeBoolean">
            <summary>CouchbaseBucket.Dispose(Boolean disposing)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.EqualsCouchbaseBucket">
            <summary>CouchbaseBucket.Equals(CouchbaseBucket other)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.EqualsObject">
            <summary>CouchbaseBucket.Equals(Object obj)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.ExistsAsyncString">
            <summary>CouchbaseBucket.ExistsAsync(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.ExistsString">
            <summary>CouchbaseBucket.Exists(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.GetHashCode">
            <summary>CouchbaseBucket.GetHashCode()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.GetServerStringIVBucketOut">
            <summary>CouchbaseBucket.GetServer(String key, IVBucket&amp; vBucket)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.IncrementAsyncString">
            <summary>CouchbaseBucket.IncrementAsync(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.IncrementAsyncStringUInt64">
            <summary>CouchbaseBucket.IncrementAsync(String key, UInt64 delta)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.IncrementAsyncStringUInt64UInt64">
            <summary>CouchbaseBucket.IncrementAsync(String key, UInt64 delta, UInt64 initial)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.IncrementAsyncStringUInt64UInt64TimeSpan">
            <summary>CouchbaseBucket.IncrementAsync(String key, UInt64 delta, UInt64 initial, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.IncrementAsyncStringUInt64UInt64UInt32">
            <summary>CouchbaseBucket.IncrementAsync(String key, UInt64 delta, UInt64 initial, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.IncrementString">
            <summary>CouchbaseBucket.Increment(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.IncrementStringUInt64">
            <summary>CouchbaseBucket.Increment(String key, UInt64 delta)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.IncrementStringUInt64UInt64">
            <summary>CouchbaseBucket.Increment(String key, UInt64 delta, UInt64 initial)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.IncrementStringUInt64UInt64TimeSpan">
            <summary>CouchbaseBucket.Increment(String key, UInt64 delta, UInt64 initial, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.IncrementStringUInt64UInt64UInt32">
            <summary>CouchbaseBucket.Increment(String key, UInt64 delta, UInt64 initial, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.InvalidateQueryCache">
            <summary>CouchbaseBucket.InvalidateQueryCache()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.IsSecureGet">
            <summary>CouchbaseBucket.get_IsSecure()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.NameGet">
            <summary>CouchbaseBucket.get_Name()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.NameSetString">
            <summary>CouchbaseBucket.set_Name(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.ObserveAsyncStringUInt64BooleanReplicateToPersistTo">
            <summary>CouchbaseBucket.ObserveAsync(String key, UInt64 cas, Boolean deletion, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.ObserveStringUInt64BooleanReplicateToPersistTo">
            <summary>CouchbaseBucket.Observe(String key, UInt64 cas, Boolean deletion, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.PrependAsyncStringByteArray">
            <summary>CouchbaseBucket.PrependAsync(String key, Byte[] value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.PrependAsyncStringString">
            <summary>CouchbaseBucket.PrependAsync(String key, String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.PrependStringByteArray">
            <summary>CouchbaseBucket.Prepend(String key, Byte[] value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.PrependStringString">
            <summary>CouchbaseBucket.Prepend(String key, String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.QueryAsyncSearchQuery">
            <summary>CouchbaseBucket.QueryAsync(SearchQuery searchQuery)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.QuerySearchQuery">
            <summary>CouchbaseBucket.Query(SearchQuery searchQuery)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.RemoveAsyncString">
            <summary>CouchbaseBucket.RemoveAsync(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.RemoveAsyncStringReplicateTo">
            <summary>CouchbaseBucket.RemoveAsync(String key, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.RemoveAsyncStringReplicateToPersistTo">
            <summary>CouchbaseBucket.RemoveAsync(String key, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.RemoveAsyncStringUInt64">
            <summary>CouchbaseBucket.RemoveAsync(String key, UInt64 cas)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.RemoveAsyncStringUInt64ReplicateTo">
            <summary>CouchbaseBucket.RemoveAsync(String key, UInt64 cas, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.RemoveAsyncStringUInt64ReplicateToPersistTo">
            <summary>CouchbaseBucket.RemoveAsync(String key, UInt64 cas, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.RemoveIListOfString">
            <summary>CouchbaseBucket.Remove(IList`1&lt;String&gt; keys)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.RemoveIListOfStringParallelOptions">
            <summary>CouchbaseBucket.Remove(IList`1&lt;String&gt; keys, ParallelOptions options)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.RemoveIListOfStringParallelOptionsInt32">
            <summary>CouchbaseBucket.Remove(IList`1&lt;String&gt; keys, ParallelOptions options, Int32 rangeSize)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.RemoveString">
            <summary>CouchbaseBucket.Remove(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.RemoveStringReplicateTo">
            <summary>CouchbaseBucket.Remove(String key, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.RemoveStringReplicateToPersistTo">
            <summary>CouchbaseBucket.Remove(String key, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.RemoveStringUInt64">
            <summary>CouchbaseBucket.Remove(String key, UInt64 cas)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.RemoveStringUInt64ReplicateTo">
            <summary>CouchbaseBucket.Remove(String key, UInt64 cas, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.RemoveStringUInt64ReplicateToPersistTo">
            <summary>CouchbaseBucket.Remove(String key, UInt64 cas, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.StaticConstructor">
            <summary>CouchbaseBucket.CouchbaseBucket()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.SupportsEnhancedDurabilityGet">
            <summary>CouchbaseBucket.get_SupportsEnhancedDurability()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.TouchAsyncStringTimeSpan">
            <summary>CouchbaseBucket.TouchAsync(String key, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.TouchStringTimeSpan">
            <summary>CouchbaseBucket.Touch(String key, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.UnlockAsyncStringUInt64">
            <summary>CouchbaseBucket.UnlockAsync(String key, UInt64 cas)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.UnlockStringUInt64">
            <summary>CouchbaseBucket.Unlock(String key, UInt64 cas)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket._ExistsAsyncString">
            <summary>CouchbaseBucket._ExistsAsync(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket._ExistsString">
            <summary>CouchbaseBucket._Exists(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.CheckForConfigUpdatesOf1IOperationResultOfM0IOperation``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,Couchbase.IOperationResult{``0},Couchbase.IO.Operations.IOperation,System.Boolean})">
            <summary>CouchbaseBucket.CheckForConfigUpdates(IOperationResult`1&lt;!!0&gt; operationResult, IOperation operation)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.GetAndLockAsyncOf1StringTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,System.TimeSpan,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.GetAndLockAsync(String key, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.GetAndLockAsyncOf1StringUInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,System.UInt32,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.GetAndLockAsync(String key, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.GetAndLockOf1StringTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,System.TimeSpan,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.GetAndLock(String key, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.GetAndLockOf1StringUInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,System.UInt32,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.GetAndLock(String key, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.GetAndTouchAsyncOf1StringTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,System.TimeSpan,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.GetAndTouchAsync(String key, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.GetAndTouchDocumentAsyncOf1StringTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,System.TimeSpan,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>CouchbaseBucket.GetAndTouchDocumentAsync(String key, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.GetAndTouchDocumentOf1StringTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,System.TimeSpan,Couchbase.IDocumentResult{``0}})">
            <summary>CouchbaseBucket.GetAndTouchDocument(String key, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.GetAndTouchOf1StringTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,System.TimeSpan,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.GetAndTouch(String key, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.GetAsyncOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.GetAsync(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.GetDocumentAsyncOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>CouchbaseBucket.GetDocumentAsync(String id)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.GetDocumentOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,Couchbase.IDocumentResult{``0}})">
            <summary>CouchbaseBucket.GetDocument(String id)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.GetDocumentsAsyncOf1IEnumerableOfString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.Collections.Generic.IEnumerable{System.String},System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>CouchbaseBucket.GetDocumentsAsync(IEnumerable`1&lt;String&gt; ids)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.GetFromReplicaAsyncOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.GetFromReplicaAsync(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.GetFromReplicaOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.GetFromReplica(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.GetOf1IListOfString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.Collections.Generic.IList{System.String},System.Collections.Generic.IDictionary{System.String,Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.Get(IList`1&lt;String&gt; keys)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.GetOf1IListOfStringParallelOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.Collections.Generic.IList{System.String},System.Threading.Tasks.ParallelOptions,System.Collections.Generic.IDictionary{System.String,Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.Get(IList`1&lt;String&gt; keys, ParallelOptions options)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.GetOf1IListOfStringParallelOptionsInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.Collections.Generic.IList{System.String},System.Threading.Tasks.ParallelOptions,System.Int32,System.Collections.Generic.IDictionary{System.String,Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.Get(IList`1&lt;String&gt; keys, ParallelOptions options, Int32 rangeSize)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.GetOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Get(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.GetWithLockAsyncOf1StringTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,System.TimeSpan,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.GetWithLockAsync(String key, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.GetWithLockAsyncOf1StringUInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,System.UInt32,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.GetWithLockAsync(String key, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.GetWithLockOf1StringTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,System.TimeSpan,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.GetWithLock(String key, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.GetWithLockOf1StringUInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,System.UInt32,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.GetWithLock(String key, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.InsertAsyncOf1IDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,Couchbase.IDocument{``0},System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>CouchbaseBucket.InsertAsync(IDocument`1&lt;!!0&gt; document)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.InsertAsyncOf1IDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,Couchbase.IDocument{``0},Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>CouchbaseBucket.InsertAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.InsertAsyncOf1IDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>CouchbaseBucket.InsertAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.InsertAsyncOf1ListOfIDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.Collections.Generic.List{Couchbase.IDocument{``0}},System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>CouchbaseBucket.InsertAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.InsertAsyncOf1ListOfIDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>CouchbaseBucket.InsertAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.InsertAsyncOf1ListOfIDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>CouchbaseBucket.InsertAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.InsertAsyncOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.InsertAsync(String key, !!0 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.InsertAsyncOf1StringM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.InsertAsync(String key, !!0 value, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.InsertAsyncOf1StringM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.InsertAsync(String key, !!0 value, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.InsertAsyncOf1StringM0TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.TimeSpan,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.InsertAsync(String key, !!0 value, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.InsertAsyncOf1StringM0TimeSpanReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.InsertAsync(String key, !!0 value, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.InsertAsyncOf1StringM0UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.UInt32,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.InsertAsync(String key, !!0 value, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.InsertAsyncOf1StringM0UInt32ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.InsertAsync(String key, !!0 value, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.InsertOf1IDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,Couchbase.IDocument{``0},Couchbase.IDocumentResult{``0}})">
            <summary>CouchbaseBucket.Insert(IDocument`1&lt;!!0&gt; document)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.InsertOf1IDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.IDocumentResult{``0}})">
            <summary>CouchbaseBucket.Insert(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.InsertOf1IDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IDocumentResult{``0}})">
            <summary>CouchbaseBucket.Insert(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.InsertOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Insert(String key, !!0 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.InsertOf1StringM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,Couchbase.ReplicateTo,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Insert(String key, !!0 value, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.InsertOf1StringM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Insert(String key, !!0 value, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.InsertOf1StringM0TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.TimeSpan,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Insert(String key, !!0 value, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.InsertOf1StringM0TimeSpanReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Insert(String key, !!0 value, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.InsertOf1StringM0UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.UInt32,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Insert(String key, !!0 value, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.InsertOf1StringM0UInt32ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Insert(String key, !!0 value, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.InvokeAsyncOf1ILookupInBuilderOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,Couchbase.Core.ILookupInBuilder{``0},System.Threading.Tasks.Task{Couchbase.IDocumentFragment{``0}}})">
            <summary>CouchbaseBucket.InvokeAsync(ILookupInBuilder`1&lt;!!0&gt; builder)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.InvokeAsyncOf1IMutateInBuilderOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,Couchbase.Core.IMutateInBuilder{``0},System.Threading.Tasks.Task{Couchbase.IDocumentFragment{``0}}})">
            <summary>CouchbaseBucket.InvokeAsync(IMutateInBuilder`1&lt;!!0&gt; builder)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.InvokeOf1ILookupInBuilderOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,Couchbase.Core.ILookupInBuilder{``0},Couchbase.IDocumentFragment{``0}})">
            <summary>CouchbaseBucket.Invoke(ILookupInBuilder`1&lt;!!0&gt; builder)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.InvokeOf1IMutateInBuilderOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,Couchbase.Core.IMutateInBuilder{``0},Couchbase.IDocumentFragment{``0}})">
            <summary>CouchbaseBucket.Invoke(IMutateInBuilder`1&lt;!!0&gt; builder)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.LookupInOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,Couchbase.Core.ILookupInBuilder{``0}})">
            <summary>CouchbaseBucket.LookupIn(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.MutateInOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,Couchbase.Core.IMutateInBuilder{``0}})">
            <summary>CouchbaseBucket.MutateIn(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.QueryAsyncOf1IQueryRequest``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,Couchbase.N1QL.IQueryRequest,System.Threading.Tasks.Task{Couchbase.N1QL.IQueryResult{``0}}})">
            <summary>CouchbaseBucket.QueryAsync(IQueryRequest queryRequest)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.QueryAsyncOf1IViewQueryable``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,Couchbase.Views.IViewQueryable,System.Threading.Tasks.Task{Couchbase.Views.IViewResult{``0}}})">
            <summary>CouchbaseBucket.QueryAsync(IViewQueryable query)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.QueryAsyncOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,System.Threading.Tasks.Task{Couchbase.N1QL.IQueryResult{``0}}})">
            <summary>CouchbaseBucket.QueryAsync(String query)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.QueryOf1IQueryRequest``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,Couchbase.N1QL.IQueryRequest,Couchbase.N1QL.IQueryResult{``0}})">
            <summary>CouchbaseBucket.Query(IQueryRequest queryRequest)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.QueryOf1IViewQueryable``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,Couchbase.Views.IViewQueryable,Couchbase.Views.IViewResult{``0}})">
            <summary>CouchbaseBucket.Query(IViewQueryable query)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.QueryOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,Couchbase.N1QL.IQueryResult{``0}})">
            <summary>CouchbaseBucket.Query(String query)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.RemoveAsyncOf1IDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,Couchbase.IDocument{``0},System.Threading.Tasks.Task{Couchbase.IOperationResult}})">
            <summary>CouchbaseBucket.RemoveAsync(IDocument`1&lt;!!0&gt; document)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.RemoveAsyncOf1IDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,Couchbase.IDocument{``0},Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IOperationResult}})">
            <summary>CouchbaseBucket.RemoveAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.RemoveAsyncOf1IDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult}})">
            <summary>CouchbaseBucket.RemoveAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.RemoveAsyncOf1ListOfIDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.Collections.Generic.List{Couchbase.IDocument{``0}},System.Threading.Tasks.Task{Couchbase.IOperationResult[]}})">
            <summary>CouchbaseBucket.RemoveAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.RemoveAsyncOf1ListOfIDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IOperationResult[]}})">
            <summary>CouchbaseBucket.RemoveAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.RemoveAsyncOf1ListOfIDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult[]}})">
            <summary>CouchbaseBucket.RemoveAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.RemoveOf1IDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,Couchbase.IDocument{``0},Couchbase.IOperationResult})">
            <summary>CouchbaseBucket.Remove(IDocument`1&lt;!!0&gt; document)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.RemoveOf1IDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.IOperationResult})">
            <summary>CouchbaseBucket.Remove(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.RemoveOf1IDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult})">
            <summary>CouchbaseBucket.Remove(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.ReplaceAsyncOf1IDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,Couchbase.IDocument{``0},System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>CouchbaseBucket.ReplaceAsync(IDocument`1&lt;!!0&gt; document)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.ReplaceAsyncOf1IDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,Couchbase.IDocument{``0},Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>CouchbaseBucket.ReplaceAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.ReplaceAsyncOf1IDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>CouchbaseBucket.ReplaceAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.ReplaceAsyncOf1ListOfIDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.Collections.Generic.List{Couchbase.IDocument{``0}},System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>CouchbaseBucket.ReplaceAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.ReplaceAsyncOf1ListOfIDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>CouchbaseBucket.ReplaceAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.ReplaceAsyncOf1ListOfIDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>CouchbaseBucket.ReplaceAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.ReplaceAsyncOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.ReplaceAsync(String key, !!0 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.ReplaceAsyncOf1StringM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.ReplaceAsync(String key, !!0 value, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.ReplaceAsyncOf1StringM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.ReplaceAsync(String key, !!0 value, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.ReplaceAsyncOf1StringM0TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.TimeSpan,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.ReplaceAsync(String key, !!0 value, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.ReplaceAsyncOf1StringM0UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.UInt32,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.ReplaceAsync(String key, !!0 value, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.ReplaceAsyncOf1StringM0UInt64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.UInt64,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.ReplaceAsync(String key, !!0 value, UInt64 cas)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.ReplaceAsyncOf1StringM0UInt64ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.UInt64,Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.ReplaceAsync(String key, !!0 value, UInt64 cas, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.ReplaceAsyncOf1StringM0UInt64ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.UInt64,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.ReplaceAsync(String key, !!0 value, UInt64 cas, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.ReplaceAsyncOf1StringM0UInt64TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.UInt64,System.TimeSpan,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.ReplaceAsync(String key, !!0 value, UInt64 cas, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.ReplaceAsyncOf1StringM0UInt64TimeSpanReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.UInt64,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.ReplaceAsync(String key, !!0 value, UInt64 cas, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.ReplaceAsyncOf1StringM0UInt64UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.UInt64,System.UInt32,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.ReplaceAsync(String key, !!0 value, UInt64 cas, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.ReplaceAsyncOf1StringM0UInt64UInt32ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.UInt64,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.ReplaceAsync(String key, !!0 value, UInt64 cas, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.ReplaceOf1IDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,Couchbase.IDocument{``0},Couchbase.IDocumentResult{``0}})">
            <summary>CouchbaseBucket.Replace(IDocument`1&lt;!!0&gt; document)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.ReplaceOf1IDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.IDocumentResult{``0}})">
            <summary>CouchbaseBucket.Replace(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.ReplaceOf1IDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IDocumentResult{``0}})">
            <summary>CouchbaseBucket.Replace(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.ReplaceOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Replace(String key, !!0 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.ReplaceOf1StringM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,Couchbase.ReplicateTo,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Replace(String key, !!0 value, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.ReplaceOf1StringM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Replace(String key, !!0 value, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.ReplaceOf1StringM0TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.TimeSpan,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Replace(String key, !!0 value, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.ReplaceOf1StringM0UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.UInt32,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Replace(String key, !!0 value, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.ReplaceOf1StringM0UInt64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.UInt64,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Replace(String key, !!0 value, UInt64 cas)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.ReplaceOf1StringM0UInt64ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.UInt64,Couchbase.ReplicateTo,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Replace(String key, !!0 value, UInt64 cas, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.ReplaceOf1StringM0UInt64ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.UInt64,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Replace(String key, !!0 value, UInt64 cas, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.ReplaceOf1StringM0UInt64TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.UInt64,System.TimeSpan,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Replace(String key, !!0 value, UInt64 cas, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.ReplaceOf1StringM0UInt64TimeSpanReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.UInt64,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Replace(String key, !!0 value, UInt64 cas, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.ReplaceOf1StringM0UInt64UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.UInt64,System.UInt32,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Replace(String key, !!0 value, UInt64 cas, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.ReplaceOf1StringM0UInt64UInt32ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.UInt64,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Replace(String key, !!0 value, UInt64 cas, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.UpsertAsyncOf1IDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,Couchbase.IDocument{``0},System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>CouchbaseBucket.UpsertAsync(IDocument`1&lt;!!0&gt; document)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.UpsertAsyncOf1IDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,Couchbase.IDocument{``0},Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>CouchbaseBucket.UpsertAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.UpsertAsyncOf1IDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>CouchbaseBucket.UpsertAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.UpsertAsyncOf1ListOfIDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.Collections.Generic.List{Couchbase.IDocument{``0}},System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>CouchbaseBucket.UpsertAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.UpsertAsyncOf1ListOfIDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>CouchbaseBucket.UpsertAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.UpsertAsyncOf1ListOfIDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>CouchbaseBucket.UpsertAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.UpsertAsyncOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.UpsertAsync(String key, !!0 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.UpsertAsyncOf1StringM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.UpsertAsync(String key, !!0 value, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.UpsertAsyncOf1StringM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.UpsertAsync(String key, !!0 value, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.UpsertAsyncOf1StringM0TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.TimeSpan,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.UpsertAsync(String key, !!0 value, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.UpsertAsyncOf1StringM0TimeSpanReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.UpsertAsync(String key, !!0 value, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.UpsertAsyncOf1StringM0UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.UInt32,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.UpsertAsync(String key, !!0 value, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.UpsertAsyncOf1StringM0UInt32ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.UpsertAsync(String key, !!0 value, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.UpsertAsyncOf1StringM0UInt64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.UInt64,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.UpsertAsync(String key, !!0 value, UInt64 cas)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.UpsertAsyncOf1StringM0UInt64TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.UInt64,System.TimeSpan,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.UpsertAsync(String key, !!0 value, UInt64 cas, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.UpsertAsyncOf1StringM0UInt64TimeSpanReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.UInt64,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.UpsertAsync(String key, !!0 value, UInt64 cas, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.UpsertAsyncOf1StringM0UInt64UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.UInt64,System.UInt32,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.UpsertAsync(String key, !!0 value, UInt64 cas, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.UpsertAsyncOf1StringM0UInt64UInt32ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.UInt64,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.UpsertAsync(String key, !!0 value, UInt64 cas, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.UpsertOf1IDictionaryOfStringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.Collections.Generic.IDictionary{System.String,``0},System.Collections.Generic.IDictionary{System.String,Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.Upsert(IDictionary`2&lt;String,!!0&gt; items)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.UpsertOf1IDictionaryOfStringM0ParallelOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.Collections.Generic.IDictionary{System.String,``0},System.Threading.Tasks.ParallelOptions,System.Collections.Generic.IDictionary{System.String,Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.Upsert(IDictionary`2&lt;String,!!0&gt; items, ParallelOptions options)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.UpsertOf1IDictionaryOfStringM0ParallelOptionsInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.Collections.Generic.IDictionary{System.String,``0},System.Threading.Tasks.ParallelOptions,System.Int32,System.Collections.Generic.IDictionary{System.String,Couchbase.IOperationResult{``0}}})">
            <summary>CouchbaseBucket.Upsert(IDictionary`2&lt;String,!!0&gt; items, ParallelOptions options, Int32 rangeSize)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.UpsertOf1IDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,Couchbase.IDocument{``0},Couchbase.IDocumentResult{``0}})">
            <summary>CouchbaseBucket.Upsert(IDocument`1&lt;!!0&gt; document)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.UpsertOf1IDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.IDocumentResult{``0}})">
            <summary>CouchbaseBucket.Upsert(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.UpsertOf1IDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IDocumentResult{``0}})">
            <summary>CouchbaseBucket.Upsert(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.UpsertOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Upsert(String key, !!0 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.UpsertOf1StringM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,Couchbase.ReplicateTo,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Upsert(String key, !!0 value, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.UpsertOf1StringM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Upsert(String key, !!0 value, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.UpsertOf1StringM0TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.TimeSpan,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Upsert(String key, !!0 value, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.UpsertOf1StringM0TimeSpanReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Upsert(String key, !!0 value, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.UpsertOf1StringM0UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.UInt32,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Upsert(String key, !!0 value, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.UpsertOf1StringM0UInt32ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Upsert(String key, !!0 value, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.UpsertOf1StringM0UInt64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.UInt64,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Upsert(String key, !!0 value, UInt64 cas)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.UpsertOf1StringM0UInt64TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.UInt64,System.TimeSpan,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Upsert(String key, !!0 value, UInt64 cas, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.UpsertOf1StringM0UInt64TimeSpanReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.UInt64,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Upsert(String key, !!0 value, UInt64 cas, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.UpsertOf1StringM0UInt64UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.UInt64,System.UInt32,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Upsert(String key, !!0 value, UInt64 cas, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.UpsertOf1StringM0UInt64UInt32ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.CouchbaseBucket,System.String,``0,System.UInt64,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>CouchbaseBucket.Upsert(String key, !!0 value, UInt64 cas, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.AppendAsyncStringByteArray">
            <summary>CouchbaseBucket.AppendAsync(String key, Byte[] value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.AppendAsyncStringString">
            <summary>CouchbaseBucket.AppendAsync(String key, String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.AppendStringByteArray">
            <summary>CouchbaseBucket.Append(String key, Byte[] value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.AppendStringString">
            <summary>CouchbaseBucket.Append(String key, String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.BucketTypeGet">
            <summary>CouchbaseBucket.get_BucketType()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.CheckDisposed">
            <summary>CouchbaseBucket.CheckDisposed()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.ClusterGet">
            <summary>CouchbaseBucket.get_Cluster()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.ConfigurationCouchbaseCoreIBucketget">
            <summary>CouchbaseBucket.Couchbase.Core.IBucket.get_Configuration()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.CouchbaseIRefCountableAddRef">
            <summary>CouchbaseBucket.Couchbase.IRefCountable.AddRef()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.CouchbaseIRefCountableRelease">
            <summary>CouchbaseBucket.Couchbase.IRefCountable.Release()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.CreateManagerStringString">
            <summary>CouchbaseBucket.CreateManager(String username, String password)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.CreateQueryStringString">
            <summary>CouchbaseBucket.CreateQuery(String designDoc, String view)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.CreateQueryStringStringBoolean">
            <summary>CouchbaseBucket.CreateQuery(String designdoc, String viewname, Boolean development)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.DecrementAsyncString">
            <summary>CouchbaseBucket.DecrementAsync(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.DecrementAsyncStringUInt64">
            <summary>CouchbaseBucket.DecrementAsync(String key, UInt64 delta)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.DecrementAsyncStringUInt64UInt64">
            <summary>CouchbaseBucket.DecrementAsync(String key, UInt64 delta, UInt64 initial)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.DecrementAsyncStringUInt64UInt64TimeSpan">
            <summary>CouchbaseBucket.DecrementAsync(String key, UInt64 delta, UInt64 initial, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.DecrementAsyncStringUInt64UInt64UInt32">
            <summary>CouchbaseBucket.DecrementAsync(String key, UInt64 delta, UInt64 initial, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.DecrementString">
            <summary>CouchbaseBucket.Decrement(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.DecrementStringUInt64">
            <summary>CouchbaseBucket.Decrement(String key, UInt64 delta)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.DecrementStringUInt64UInt64">
            <summary>CouchbaseBucket.Decrement(String key, UInt64 delta, UInt64 initial)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.DecrementStringUInt64UInt64TimeSpan">
            <summary>CouchbaseBucket.Decrement(String key, UInt64 delta, UInt64 initial, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.DecrementStringUInt64UInt64UInt32">
            <summary>CouchbaseBucket.Decrement(String key, UInt64 delta, UInt64 initial, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.Dispose">
            <summary>CouchbaseBucket.Dispose()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.DisposeBoolean">
            <summary>CouchbaseBucket.Dispose(Boolean disposing)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.EqualsCouchbaseBucket">
            <summary>CouchbaseBucket.Equals(CouchbaseBucket other)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.EqualsObject">
            <summary>CouchbaseBucket.Equals(Object obj)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.ExistsAsyncString">
            <summary>CouchbaseBucket.ExistsAsync(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.ExistsString">
            <summary>CouchbaseBucket.Exists(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.GetHashCode01">
            <summary>CouchbaseBucket.GetHashCode()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.GetServerStringIVBucketOut">
            <summary>CouchbaseBucket.GetServer(String key, IVBucket&amp; vBucket)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.IncrementAsyncString">
            <summary>CouchbaseBucket.IncrementAsync(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.IncrementAsyncStringUInt64">
            <summary>CouchbaseBucket.IncrementAsync(String key, UInt64 delta)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.IncrementAsyncStringUInt64UInt64">
            <summary>CouchbaseBucket.IncrementAsync(String key, UInt64 delta, UInt64 initial)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.IncrementAsyncStringUInt64UInt64TimeSpan">
            <summary>CouchbaseBucket.IncrementAsync(String key, UInt64 delta, UInt64 initial, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.IncrementAsyncStringUInt64UInt64UInt32">
            <summary>CouchbaseBucket.IncrementAsync(String key, UInt64 delta, UInt64 initial, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.IncrementString">
            <summary>CouchbaseBucket.Increment(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.IncrementStringUInt64">
            <summary>CouchbaseBucket.Increment(String key, UInt64 delta)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.IncrementStringUInt64UInt64">
            <summary>CouchbaseBucket.Increment(String key, UInt64 delta, UInt64 initial)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.IncrementStringUInt64UInt64TimeSpan">
            <summary>CouchbaseBucket.Increment(String key, UInt64 delta, UInt64 initial, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.IncrementStringUInt64UInt64UInt32">
            <summary>CouchbaseBucket.Increment(String key, UInt64 delta, UInt64 initial, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.InvalidateQueryCache">
            <summary>CouchbaseBucket.InvalidateQueryCache()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.IsSecureGet">
            <summary>CouchbaseBucket.get_IsSecure()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.NameGet">
            <summary>CouchbaseBucket.get_Name()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.NameSetString">
            <summary>CouchbaseBucket.set_Name(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.ObserveAsyncStringUInt64BooleanReplicateToPersistTo">
            <summary>CouchbaseBucket.ObserveAsync(String key, UInt64 cas, Boolean deletion, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.ObserveStringUInt64BooleanReplicateToPersistTo">
            <summary>CouchbaseBucket.Observe(String key, UInt64 cas, Boolean deletion, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.PrependAsyncStringByteArray">
            <summary>CouchbaseBucket.PrependAsync(String key, Byte[] value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.PrependAsyncStringString">
            <summary>CouchbaseBucket.PrependAsync(String key, String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.PrependStringByteArray">
            <summary>CouchbaseBucket.Prepend(String key, Byte[] value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.PrependStringString">
            <summary>CouchbaseBucket.Prepend(String key, String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.QueryAsyncSearchQuery">
            <summary>CouchbaseBucket.QueryAsync(SearchQuery searchQuery)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.QuerySearchQuery">
            <summary>CouchbaseBucket.Query(SearchQuery searchQuery)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.RemoveAsyncString">
            <summary>CouchbaseBucket.RemoveAsync(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.RemoveAsyncStringReplicateTo">
            <summary>CouchbaseBucket.RemoveAsync(String key, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.RemoveAsyncStringReplicateToPersistTo">
            <summary>CouchbaseBucket.RemoveAsync(String key, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.RemoveAsyncStringUInt64">
            <summary>CouchbaseBucket.RemoveAsync(String key, UInt64 cas)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.RemoveAsyncStringUInt64ReplicateTo">
            <summary>CouchbaseBucket.RemoveAsync(String key, UInt64 cas, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.RemoveAsyncStringUInt64ReplicateToPersistTo">
            <summary>CouchbaseBucket.RemoveAsync(String key, UInt64 cas, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.RemoveIListOfString">
            <summary>CouchbaseBucket.Remove(IList`1&lt;String&gt; keys)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.RemoveIListOfStringParallelOptions">
            <summary>CouchbaseBucket.Remove(IList`1&lt;String&gt; keys, ParallelOptions options)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.RemoveIListOfStringParallelOptionsInt32">
            <summary>CouchbaseBucket.Remove(IList`1&lt;String&gt; keys, ParallelOptions options, Int32 rangeSize)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.RemoveString">
            <summary>CouchbaseBucket.Remove(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.RemoveStringReplicateTo">
            <summary>CouchbaseBucket.Remove(String key, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.RemoveStringReplicateToPersistTo">
            <summary>CouchbaseBucket.Remove(String key, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.RemoveStringUInt64">
            <summary>CouchbaseBucket.Remove(String key, UInt64 cas)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.RemoveStringUInt64ReplicateTo">
            <summary>CouchbaseBucket.Remove(String key, UInt64 cas, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.RemoveStringUInt64ReplicateToPersistTo">
            <summary>CouchbaseBucket.Remove(String key, UInt64 cas, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.SupportsEnhancedDurabilityGet">
            <summary>CouchbaseBucket.get_SupportsEnhancedDurability()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.TouchAsyncStringTimeSpan">
            <summary>CouchbaseBucket.TouchAsync(String key, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.TouchStringTimeSpan">
            <summary>CouchbaseBucket.Touch(String key, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.UnlockAsyncStringUInt64">
            <summary>CouchbaseBucket.UnlockAsync(String key, UInt64 cas)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances.UnlockStringUInt64">
            <summary>CouchbaseBucket.Unlock(String key, UInt64 cas)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances._ExistsAsyncString">
            <summary>CouchbaseBucket._ExistsAsync(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimCouchbaseBucket.AllInstances._ExistsString">
            <summary>CouchbaseBucket._Exists(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.ShimDefaultResult">
            <summary>Couchbase.DefaultResult의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDefaultResult.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDefaultResult.#ctor(Couchbase.DefaultResult)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDefaultResult.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDefaultResult.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDefaultResult.Bind(Couchbase.IResult)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDefaultResult.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDefaultResult.Constructor">
            <summary>DefaultResult.DefaultResult()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDefaultResult.ConstructorBooleanStringException">
            <summary>DefaultResult.DefaultResult(Boolean success, String message, Exception exception)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDefaultResult.ExceptionGet">
            <summary>DefaultResult.get_Exception()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDefaultResult.ExceptionSetException">
            <summary>DefaultResult.set_Exception(Exception value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDefaultResult.MessageGet">
            <summary>DefaultResult.get_Message()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDefaultResult.MessageSetString">
            <summary>DefaultResult.set_Message(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDefaultResult.ShouldRetry">
            <summary>DefaultResult.ShouldRetry()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDefaultResult.SuccessGet">
            <summary>DefaultResult.get_Success()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDefaultResult.SuccessSetBoolean">
            <summary>DefaultResult.set_Success(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.ShimDefaultResult.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDefaultResult.AllInstances.ExceptionGet">
            <summary>DefaultResult.get_Exception()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDefaultResult.AllInstances.ExceptionSetException">
            <summary>DefaultResult.set_Exception(Exception value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDefaultResult.AllInstances.MessageGet">
            <summary>DefaultResult.get_Message()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDefaultResult.AllInstances.MessageSetString">
            <summary>DefaultResult.set_Message(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDefaultResult.AllInstances.ShouldRetry">
            <summary>DefaultResult.ShouldRetry()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDefaultResult.AllInstances.SuccessGet">
            <summary>DefaultResult.get_Success()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDefaultResult.AllInstances.SuccessSetBoolean">
            <summary>DefaultResult.set_Success(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.ShimDefaultResult`1">
            <summary>Couchbase.DefaultResult`1의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDefaultResult`1.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDefaultResult`1.#ctor(Couchbase.DefaultResult{`0})">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDefaultResult`1.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDefaultResult`1.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDefaultResult`1.Bind(Couchbase.IResult)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDefaultResult`1.Bind(Couchbase.IResult{`0})">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDefaultResult`1.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDefaultResult`1.Constructor">
            <summary>DefaultResult`1.DefaultResult`1()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDefaultResult`1.ConstructorBooleanStringException">
            <summary>DefaultResult`1.DefaultResult`1(Boolean success, String message, Exception exception)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDefaultResult`1.ValueGet">
            <summary>DefaultResult`1.get_Value()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDefaultResult`1.ValueSetT0">
            <summary>DefaultResult`1.set_Value(!0 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.ShimDefaultResult`1.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDefaultResult`1.AllInstances.ValueGet">
            <summary>DefaultResult`1.get_Value()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDefaultResult`1.AllInstances.ValueSetT0">
            <summary>DefaultResult`1.set_Value(!0 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.ShimDocument`1">
            <summary>Couchbase.Document`1의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDocument`1.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDocument`1.#ctor(Couchbase.Document{`0})">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDocument`1.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDocument`1.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDocument`1.Bind(Couchbase.IDocument)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDocument`1.Bind(Couchbase.IDocument{`0})">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocument`1.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocument`1.CasGet">
            <summary>Document`1.get_Cas()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocument`1.CasSetUInt64">
            <summary>Document`1.set_Cas(UInt64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocument`1.Constructor">
            <summary>Document`1.Document`1()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocument`1.ContentGet">
            <summary>Document`1.get_Content()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocument`1.ContentSetT0">
            <summary>Document`1.set_Content(!0 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocument`1.ExpiryGet">
            <summary>Document`1.get_Expiry()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocument`1.ExpirySetUInt32">
            <summary>Document`1.set_Expiry(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocument`1.IdGet">
            <summary>Document`1.get_Id()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocument`1.IdSetString">
            <summary>Document`1.set_Id(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocument`1.ToString">
            <summary>Document`1.ToString()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocument`1.TokenGet">
            <summary>Document`1.get_Token()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocument`1.TokenSetMutationToken">
            <summary>Document`1.set_Token(MutationToken value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.ShimDocument`1.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocument`1.AllInstances.CasGet">
            <summary>Document`1.get_Cas()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocument`1.AllInstances.CasSetUInt64">
            <summary>Document`1.set_Cas(UInt64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocument`1.AllInstances.ContentGet">
            <summary>Document`1.get_Content()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocument`1.AllInstances.ContentSetT0">
            <summary>Document`1.set_Content(!0 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocument`1.AllInstances.ExpiryGet">
            <summary>Document`1.get_Expiry()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocument`1.AllInstances.ExpirySetUInt32">
            <summary>Document`1.set_Expiry(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocument`1.AllInstances.IdGet">
            <summary>Document`1.get_Id()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocument`1.AllInstances.IdSetString">
            <summary>Document`1.set_Id(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocument`1.AllInstances.ToString01">
            <summary>Document`1.ToString()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocument`1.AllInstances.TokenGet">
            <summary>Document`1.get_Token()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocument`1.AllInstances.TokenSetMutationToken">
            <summary>Document`1.set_Token(MutationToken value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.ShimDocumentAlreadyExistsException">
            <summary>Couchbase.DocumentAlreadyExistsException의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDocumentAlreadyExistsException.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDocumentAlreadyExistsException.#ctor(Couchbase.DocumentAlreadyExistsException)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDocumentAlreadyExistsException.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDocumentAlreadyExistsException.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDocumentAlreadyExistsException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentAlreadyExistsException.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentAlreadyExistsException.Constructor">
            <summary>DocumentAlreadyExistsException.DocumentAlreadyExistsException()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentAlreadyExistsException.ConstructorSerializationInfoStreamingContext">
            <summary>DocumentAlreadyExistsException.DocumentAlreadyExistsException(SerializationInfo info, StreamingContext context)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentAlreadyExistsException.ConstructorString">
            <summary>DocumentAlreadyExistsException.DocumentAlreadyExistsException(String message)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentAlreadyExistsException.ConstructorStringException">
            <summary>DocumentAlreadyExistsException.DocumentAlreadyExistsException(String message, Exception innerException)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.ShimDocumentAlreadyExistsException.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Fakes.ShimDocumentDoesNotExistException">
            <summary>Couchbase.DocumentDoesNotExistException의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDocumentDoesNotExistException.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDocumentDoesNotExistException.#ctor(Couchbase.DocumentDoesNotExistException)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDocumentDoesNotExistException.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDocumentDoesNotExistException.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDocumentDoesNotExistException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentDoesNotExistException.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentDoesNotExistException.Constructor">
            <summary>DocumentDoesNotExistException.DocumentDoesNotExistException()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentDoesNotExistException.ConstructorSerializationInfoStreamingContext">
            <summary>DocumentDoesNotExistException.DocumentDoesNotExistException(SerializationInfo info, StreamingContext context)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentDoesNotExistException.ConstructorString">
            <summary>DocumentDoesNotExistException.DocumentDoesNotExistException(String message)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentDoesNotExistException.ConstructorStringException">
            <summary>DocumentDoesNotExistException.DocumentDoesNotExistException(String message, Exception innerException)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.ShimDocumentDoesNotExistException.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Fakes.ShimDocumentFragment`1">
            <summary>Couchbase.DocumentFragment`1의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDocumentFragment`1.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDocumentFragment`1.#ctor(Couchbase.DocumentFragment{`0})">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDocumentFragment`1.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDocumentFragment`1.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDocumentFragment`1.Bind(Couchbase.IDocumentFragment)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDocumentFragment`1.Bind(Couchbase.IOperationResult)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDocumentFragment`1.Bind(Couchbase.IResult)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDocumentFragment`1.Bind(Couchbase.IDocumentFragment{`0})">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDocumentFragment`1.Bind(Couchbase.IOperationResult{`0})">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDocumentFragment`1.Bind(Couchbase.Core.Serialization.ITypeSerializerProvider)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDocumentFragment`1.ContentOf1Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,``0})">
            <summary>DocumentFragment`1.Content(Int32 index)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDocumentFragment`1.ContentOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>DocumentFragment`1.Content(String path)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentFragment`1.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentFragment`1.ConstructorITypeSerializerProvider">
            <summary>DocumentFragment`1.DocumentFragment`1(ITypeSerializerProvider sourceTypeSerializerProvider)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentFragment`1.ContentInt32">
            <summary>DocumentFragment`1.Content(Int32 index)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentFragment`1.ContentString">
            <summary>DocumentFragment`1.Content(String path)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentFragment`1.Count">
            <summary>DocumentFragment`1.Count()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentFragment`1.ExistsString">
            <summary>DocumentFragment`1.Exists(String path)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentFragment`1.ExpiryGet">
            <summary>DocumentFragment`1.get_Expiry()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentFragment`1.ExpirySetUInt32">
            <summary>DocumentFragment`1.set_Expiry(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentFragment`1.OpStatusInt32">
            <summary>DocumentFragment`1.OpStatus(Int32 index)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentFragment`1.OpStatusString">
            <summary>DocumentFragment`1.OpStatus(String path)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentFragment`1.SerializerGet">
            <summary>DocumentFragment`1.get_Serializer()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentFragment`1.ValueCouchbaseIOperationResultTDocumentget">
            <summary>DocumentFragment`1.Couchbase.IOperationResult&lt;TDocument&gt;.get_Value()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.ShimDocumentFragment`1.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDocumentFragment`1.AllInstances.ContentOf1Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.DocumentFragment{`0},System.Int32,``0})">
            <summary>DocumentFragment`1.Content(Int32 index)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDocumentFragment`1.AllInstances.ContentOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.DocumentFragment{`0},System.String,``0})">
            <summary>DocumentFragment`1.Content(String path)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentFragment`1.AllInstances.ContentInt32">
            <summary>DocumentFragment`1.Content(Int32 index)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentFragment`1.AllInstances.ContentString">
            <summary>DocumentFragment`1.Content(String path)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentFragment`1.AllInstances.Count">
            <summary>DocumentFragment`1.Count()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentFragment`1.AllInstances.ExistsString">
            <summary>DocumentFragment`1.Exists(String path)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentFragment`1.AllInstances.ExpiryGet">
            <summary>DocumentFragment`1.get_Expiry()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentFragment`1.AllInstances.ExpirySetUInt32">
            <summary>DocumentFragment`1.set_Expiry(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentFragment`1.AllInstances.OpStatusInt32">
            <summary>DocumentFragment`1.OpStatus(Int32 index)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentFragment`1.AllInstances.OpStatusString">
            <summary>DocumentFragment`1.OpStatus(String path)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentFragment`1.AllInstances.SerializerGet">
            <summary>DocumentFragment`1.get_Serializer()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentFragment`1.AllInstances.ValueCouchbaseIOperationResultTDocumentget">
            <summary>DocumentFragment`1.Couchbase.IOperationResult&lt;TDocument&gt;.get_Value()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.ShimDocumentResult`1">
            <summary>Couchbase.DocumentResult`1의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDocumentResult`1.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDocumentResult`1.#ctor(Couchbase.DocumentResult{`0})">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDocumentResult`1.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDocumentResult`1.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDocumentResult`1.Bind(Couchbase.IDocumentResult)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDocumentResult`1.Bind(Couchbase.IResult)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimDocumentResult`1.Bind(Couchbase.IDocumentResult{`0})">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentResult`1.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentResult`1.ConstructorIOperationResultOfT0">
            <summary>DocumentResult`1.DocumentResult`1(IOperationResult`1&lt;!0&gt; result)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentResult`1.ConstructorIOperationResultOfT0IDocumentOfT0">
            <summary>DocumentResult`1.DocumentResult`1(IOperationResult`1&lt;!0&gt; result, IDocument`1&lt;!0&gt; document)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentResult`1.ContentGet">
            <summary>DocumentResult`1.get_Content()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentResult`1.ContentSetT0">
            <summary>DocumentResult`1.set_Content(!0 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentResult`1.DocumentGet">
            <summary>DocumentResult`1.get_Document()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentResult`1.DocumentSetDocumentOfT0">
            <summary>DocumentResult`1.set_Document(Document`1&lt;!0&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentResult`1.ExceptionGet">
            <summary>DocumentResult`1.get_Exception()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentResult`1.ExceptionSetException">
            <summary>DocumentResult`1.set_Exception(Exception value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentResult`1.IdGet">
            <summary>DocumentResult`1.get_Id()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentResult`1.IdSetString">
            <summary>DocumentResult`1.set_Id(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentResult`1.MessageGet">
            <summary>DocumentResult`1.get_Message()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentResult`1.MessageSetString">
            <summary>DocumentResult`1.set_Message(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentResult`1.ShouldRetry">
            <summary>DocumentResult`1.ShouldRetry()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentResult`1.StatusGet">
            <summary>DocumentResult`1.get_Status()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentResult`1.StatusSetResponseStatus">
            <summary>DocumentResult`1.set_Status(ResponseStatus value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentResult`1.SuccessGet">
            <summary>DocumentResult`1.get_Success()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentResult`1.SuccessSetBoolean">
            <summary>DocumentResult`1.set_Success(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentResult`1.ToString">
            <summary>DocumentResult`1.ToString()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentResult`1.TokenGet">
            <summary>DocumentResult`1.get_Token()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentResult`1.TokenSetMutationToken">
            <summary>DocumentResult`1.set_Token(MutationToken value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.ShimDocumentResult`1.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentResult`1.AllInstances.ContentGet">
            <summary>DocumentResult`1.get_Content()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentResult`1.AllInstances.ContentSetT0">
            <summary>DocumentResult`1.set_Content(!0 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentResult`1.AllInstances.DocumentGet">
            <summary>DocumentResult`1.get_Document()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentResult`1.AllInstances.DocumentSetDocumentOfT0">
            <summary>DocumentResult`1.set_Document(Document`1&lt;!0&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentResult`1.AllInstances.ExceptionGet">
            <summary>DocumentResult`1.get_Exception()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentResult`1.AllInstances.ExceptionSetException">
            <summary>DocumentResult`1.set_Exception(Exception value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentResult`1.AllInstances.IdGet">
            <summary>DocumentResult`1.get_Id()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentResult`1.AllInstances.IdSetString">
            <summary>DocumentResult`1.set_Id(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentResult`1.AllInstances.MessageGet">
            <summary>DocumentResult`1.get_Message()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentResult`1.AllInstances.MessageSetString">
            <summary>DocumentResult`1.set_Message(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentResult`1.AllInstances.ShouldRetry">
            <summary>DocumentResult`1.ShouldRetry()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentResult`1.AllInstances.StatusGet">
            <summary>DocumentResult`1.get_Status()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentResult`1.AllInstances.StatusSetResponseStatus">
            <summary>DocumentResult`1.set_Status(ResponseStatus value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentResult`1.AllInstances.SuccessGet">
            <summary>DocumentResult`1.get_Success()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentResult`1.AllInstances.SuccessSetBoolean">
            <summary>DocumentResult`1.set_Success(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentResult`1.AllInstances.ToString01">
            <summary>DocumentResult`1.ToString()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentResult`1.AllInstances.TokenGet">
            <summary>DocumentResult`1.get_Token()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimDocumentResult`1.AllInstances.TokenSetMutationToken">
            <summary>DocumentResult`1.set_Token(MutationToken value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.ShimMemcachedBucket">
            <summary>Couchbase.MemcachedBucket의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.#ctor(Couchbase.MemcachedBucket)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.Bind(Couchbase.Core.IBucket)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.Bind(System.IDisposable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.GetAndLockAsyncOf1StringTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.TimeSpan,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.GetAndLockAsync(String key, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.GetAndLockAsyncOf1StringUInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.UInt32,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.GetAndLockAsync(String key, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.GetAndLockOf1StringTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.TimeSpan,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.GetAndLock(String key, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.GetAndLockOf1StringUInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.UInt32,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.GetAndLock(String key, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.GetAndTouchAsyncOf1StringTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.TimeSpan,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.GetAndTouchAsync(String key, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.GetAndTouchDocumentAsyncOf1StringTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.TimeSpan,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>MemcachedBucket.GetAndTouchDocumentAsync(String key, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.GetAndTouchDocumentOf1StringTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.TimeSpan,Couchbase.IDocumentResult{``0}})">
            <summary>MemcachedBucket.GetAndTouchDocument(String key, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.GetAndTouchOf1StringTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.TimeSpan,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.GetAndTouch(String key, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.GetAsyncOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.GetAsync(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.GetDocumentAsyncOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>MemcachedBucket.GetDocumentAsync(String id)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.GetDocumentOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,Couchbase.IDocumentResult{``0}})">
            <summary>MemcachedBucket.GetDocument(String id)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.GetDocumentsAsyncOf1IEnumerableOfString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{System.String},System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>MemcachedBucket.GetDocumentsAsync(IEnumerable`1&lt;String&gt; ids)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.GetFromReplicaAsyncOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.GetFromReplicaAsync(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.GetFromReplicaOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.GetFromReplica(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.GetOf1IListOfString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{System.String},System.Collections.Generic.IDictionary{System.String,Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.Get(IList`1&lt;String&gt; keys)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.GetOf1IListOfStringParallelOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{System.String},System.Threading.Tasks.ParallelOptions,System.Collections.Generic.IDictionary{System.String,Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.Get(IList`1&lt;String&gt; keys, ParallelOptions options)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.GetOf1IListOfStringParallelOptionsInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{System.String},System.Threading.Tasks.ParallelOptions,System.Int32,System.Collections.Generic.IDictionary{System.String,Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.Get(IList`1&lt;String&gt; keys, ParallelOptions options, Int32 rangeSize)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.GetOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Get(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.GetWithLockAsyncOf1StringTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.TimeSpan,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.GetWithLockAsync(String key, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.GetWithLockAsyncOf1StringUInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.UInt32,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.GetWithLockAsync(String key, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.GetWithLockOf1StringTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.TimeSpan,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.GetWithLock(String key, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.GetWithLockOf1StringUInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.UInt32,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.GetWithLock(String key, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.InsertAsyncOf1IDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>MemcachedBucket.InsertAsync(IDocument`1&lt;!!0&gt; document)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.InsertAsyncOf1IDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>MemcachedBucket.InsertAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.InsertAsyncOf1IDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>MemcachedBucket.InsertAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.InsertAsyncOf1ListOfIDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{Couchbase.IDocument{``0}},System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>MemcachedBucket.InsertAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.InsertAsyncOf1ListOfIDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>MemcachedBucket.InsertAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.InsertAsyncOf1ListOfIDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>MemcachedBucket.InsertAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.InsertAsyncOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.InsertAsync(String key, !!0 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.InsertAsyncOf1StringM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.InsertAsync(String key, !!0 value, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.InsertAsyncOf1StringM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.InsertAsync(String key, !!0 value, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.InsertAsyncOf1StringM0TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.TimeSpan,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.InsertAsync(String key, !!0 value, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.InsertAsyncOf1StringM0TimeSpanReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.InsertAsync(String key, !!0 value, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.InsertAsyncOf1StringM0UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt32,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.InsertAsync(String key, !!0 value, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.InsertAsyncOf1StringM0UInt32ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.InsertAsync(String key, !!0 value, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.InsertOf1IDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.IDocumentResult{``0}})">
            <summary>MemcachedBucket.Insert(IDocument`1&lt;!!0&gt; document)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.InsertOf1IDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.IDocumentResult{``0}})">
            <summary>MemcachedBucket.Insert(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.InsertOf1IDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IDocumentResult{``0}})">
            <summary>MemcachedBucket.Insert(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.InsertOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Insert(String key, !!0 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.InsertOf1StringM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Couchbase.ReplicateTo,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Insert(String key, !!0 value, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.InsertOf1StringM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Insert(String key, !!0 value, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.InsertOf1StringM0TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.TimeSpan,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Insert(String key, !!0 value, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.InsertOf1StringM0TimeSpanReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Insert(String key, !!0 value, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.InsertOf1StringM0UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt32,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Insert(String key, !!0 value, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.InsertOf1StringM0UInt32ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Insert(String key, !!0 value, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.LookupInOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,Couchbase.Core.ILookupInBuilder{``0}})">
            <summary>MemcachedBucket.LookupIn(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.MutateInOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,Couchbase.Core.IMutateInBuilder{``0}})">
            <summary>MemcachedBucket.MutateIn(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.QueryAsyncOf1IQueryRequest``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.N1QL.IQueryRequest,System.Threading.Tasks.Task{Couchbase.N1QL.IQueryResult{``0}}})">
            <summary>MemcachedBucket.QueryAsync(IQueryRequest queryRequest)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.QueryAsyncOf1IViewQueryable``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.Views.IViewQueryable,System.Threading.Tasks.Task{Couchbase.Views.IViewResult{``0}}})">
            <summary>MemcachedBucket.QueryAsync(IViewQueryable query)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.QueryAsyncOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Threading.Tasks.Task{Couchbase.N1QL.IQueryResult{``0}}})">
            <summary>MemcachedBucket.QueryAsync(String query)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.QueryOf1IQueryRequest``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.N1QL.IQueryRequest,Couchbase.N1QL.IQueryResult{``0}})">
            <summary>MemcachedBucket.Query(IQueryRequest queryRequest)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.QueryOf1IViewQueryable``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.Views.IViewQueryable,Couchbase.Views.IViewResult{``0}})">
            <summary>MemcachedBucket.Query(IViewQueryable query)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.QueryOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,Couchbase.N1QL.IQueryResult{``0}})">
            <summary>MemcachedBucket.Query(String query)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.RemoveAsyncOf1IDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},System.Threading.Tasks.Task{Couchbase.IOperationResult}})">
            <summary>MemcachedBucket.RemoveAsync(IDocument`1&lt;!!0&gt; document)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.RemoveAsyncOf1IDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IOperationResult}})">
            <summary>MemcachedBucket.RemoveAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.RemoveAsyncOf1IDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult}})">
            <summary>MemcachedBucket.RemoveAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.RemoveAsyncOf1ListOfIDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{Couchbase.IDocument{``0}},System.Threading.Tasks.Task{Couchbase.IOperationResult[]}})">
            <summary>MemcachedBucket.RemoveAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.RemoveAsyncOf1ListOfIDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IOperationResult[]}})">
            <summary>MemcachedBucket.RemoveAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.RemoveAsyncOf1ListOfIDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult[]}})">
            <summary>MemcachedBucket.RemoveAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.RemoveOf1IDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.IOperationResult})">
            <summary>MemcachedBucket.Remove(IDocument`1&lt;!!0&gt; document)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.RemoveOf1IDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.IOperationResult})">
            <summary>MemcachedBucket.Remove(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.RemoveOf1IDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult})">
            <summary>MemcachedBucket.Remove(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.ReplaceAsyncOf1IDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>MemcachedBucket.ReplaceAsync(IDocument`1&lt;!!0&gt; document)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.ReplaceAsyncOf1IDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>MemcachedBucket.ReplaceAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.ReplaceAsyncOf1IDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>MemcachedBucket.ReplaceAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.ReplaceAsyncOf1ListOfIDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{Couchbase.IDocument{``0}},System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>MemcachedBucket.ReplaceAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.ReplaceAsyncOf1ListOfIDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>MemcachedBucket.ReplaceAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.ReplaceAsyncOf1ListOfIDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>MemcachedBucket.ReplaceAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.ReplaceAsyncOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.ReplaceAsync(String key, !!0 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.ReplaceAsyncOf1StringM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.ReplaceAsync(String key, !!0 value, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.ReplaceAsyncOf1StringM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.ReplaceAsync(String key, !!0 value, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.ReplaceAsyncOf1StringM0TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.TimeSpan,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.ReplaceAsync(String key, !!0 value, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.ReplaceAsyncOf1StringM0UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt32,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.ReplaceAsync(String key, !!0 value, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.ReplaceAsyncOf1StringM0UInt64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.ReplaceAsync(String key, !!0 value, UInt64 cas)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.ReplaceAsyncOf1StringM0UInt64ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.ReplaceAsync(String key, !!0 value, UInt64 cas, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.ReplaceAsyncOf1StringM0UInt64ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.ReplaceAsync(String key, !!0 value, UInt64 cas, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.ReplaceAsyncOf1StringM0UInt64TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.TimeSpan,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.ReplaceAsync(String key, !!0 value, UInt64 cas, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.ReplaceAsyncOf1StringM0UInt64TimeSpanReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.ReplaceAsync(String key, !!0 value, UInt64 cas, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.ReplaceAsyncOf1StringM0UInt64UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.UInt32,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.ReplaceAsync(String key, !!0 value, UInt64 cas, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.ReplaceAsyncOf1StringM0UInt64UInt32ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.ReplaceAsync(String key, !!0 value, UInt64 cas, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.ReplaceOf1IDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.IDocumentResult{``0}})">
            <summary>MemcachedBucket.Replace(IDocument`1&lt;!!0&gt; document)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.ReplaceOf1IDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.IDocumentResult{``0}})">
            <summary>MemcachedBucket.Replace(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.ReplaceOf1IDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IDocumentResult{``0}})">
            <summary>MemcachedBucket.Replace(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.ReplaceOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Replace(String key, !!0 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.ReplaceOf1StringM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Couchbase.ReplicateTo,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Replace(String key, !!0 value, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.ReplaceOf1StringM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Replace(String key, !!0 value, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.ReplaceOf1StringM0TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.TimeSpan,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Replace(String key, !!0 value, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.ReplaceOf1StringM0UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt32,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Replace(String key, !!0 value, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.ReplaceOf1StringM0UInt64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Replace(String key, !!0 value, UInt64 cas)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.ReplaceOf1StringM0UInt64ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,Couchbase.ReplicateTo,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Replace(String key, !!0 value, UInt64 cas, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.ReplaceOf1StringM0UInt64ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Replace(String key, !!0 value, UInt64 cas, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.ReplaceOf1StringM0UInt64TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.TimeSpan,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Replace(String key, !!0 value, UInt64 cas, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.ReplaceOf1StringM0UInt64TimeSpanReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Replace(String key, !!0 value, UInt64 cas, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.ReplaceOf1StringM0UInt64UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.UInt32,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Replace(String key, !!0 value, UInt64 cas, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.ReplaceOf1StringM0UInt64UInt32ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Replace(String key, !!0 value, UInt64 cas, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.UpsertAsyncOf1IDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>MemcachedBucket.UpsertAsync(IDocument`1&lt;!!0&gt; document)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.UpsertAsyncOf1IDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>MemcachedBucket.UpsertAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.UpsertAsyncOf1IDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>MemcachedBucket.UpsertAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.UpsertAsyncOf1ListOfIDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{Couchbase.IDocument{``0}},System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>MemcachedBucket.UpsertAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.UpsertAsyncOf1ListOfIDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>MemcachedBucket.UpsertAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.UpsertAsyncOf1ListOfIDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>MemcachedBucket.UpsertAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.UpsertAsyncOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.UpsertAsync(String key, !!0 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.UpsertAsyncOf1StringM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.UpsertAsync(String key, !!0 value, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.UpsertAsyncOf1StringM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.UpsertAsync(String key, !!0 value, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.UpsertAsyncOf1StringM0TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.TimeSpan,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.UpsertAsync(String key, !!0 value, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.UpsertAsyncOf1StringM0TimeSpanReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.UpsertAsync(String key, !!0 value, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.UpsertAsyncOf1StringM0UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt32,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.UpsertAsync(String key, !!0 value, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.UpsertAsyncOf1StringM0UInt32ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.UpsertAsync(String key, !!0 value, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.UpsertAsyncOf1StringM0UInt64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.UpsertAsync(String key, !!0 value, UInt64 cas)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.UpsertAsyncOf1StringM0UInt64TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.TimeSpan,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.UpsertAsync(String key, !!0 value, UInt64 cas, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.UpsertAsyncOf1StringM0UInt64TimeSpanReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.UpsertAsync(String key, !!0 value, UInt64 cas, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.UpsertAsyncOf1StringM0UInt64UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.UInt32,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.UpsertAsync(String key, !!0 value, UInt64 cas, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.UpsertAsyncOf1StringM0UInt64UInt32ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.UpsertAsync(String key, !!0 value, UInt64 cas, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.UpsertOf1IDictionaryOfStringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IDictionary{System.String,``0},System.Collections.Generic.IDictionary{System.String,Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.Upsert(IDictionary`2&lt;String,!!0&gt; items)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.UpsertOf1IDictionaryOfStringM0ParallelOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IDictionary{System.String,``0},System.Threading.Tasks.ParallelOptions,System.Collections.Generic.IDictionary{System.String,Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.Upsert(IDictionary`2&lt;String,!!0&gt; items, ParallelOptions options)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.UpsertOf1IDictionaryOfStringM0ParallelOptionsInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IDictionary{System.String,``0},System.Threading.Tasks.ParallelOptions,System.Int32,System.Collections.Generic.IDictionary{System.String,Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.Upsert(IDictionary`2&lt;String,!!0&gt; items, ParallelOptions options, Int32 rangeSize)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.UpsertOf1IDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.IDocumentResult{``0}})">
            <summary>MemcachedBucket.Upsert(IDocument`1&lt;!!0&gt; document)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.UpsertOf1IDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.IDocumentResult{``0}})">
            <summary>MemcachedBucket.Upsert(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.UpsertOf1IDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IDocumentResult{``0}})">
            <summary>MemcachedBucket.Upsert(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.UpsertOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Upsert(String key, !!0 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.UpsertOf1StringM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Couchbase.ReplicateTo,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Upsert(String key, !!0 value, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.UpsertOf1StringM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Upsert(String key, !!0 value, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.UpsertOf1StringM0TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.TimeSpan,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Upsert(String key, !!0 value, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.UpsertOf1StringM0TimeSpanReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Upsert(String key, !!0 value, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.UpsertOf1StringM0UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt32,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Upsert(String key, !!0 value, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.UpsertOf1StringM0UInt32ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Upsert(String key, !!0 value, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.UpsertOf1StringM0UInt64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Upsert(String key, !!0 value, UInt64 cas)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.UpsertOf1StringM0UInt64TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.TimeSpan,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Upsert(String key, !!0 value, UInt64 cas, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.UpsertOf1StringM0UInt64TimeSpanReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Upsert(String key, !!0 value, UInt64 cas, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.UpsertOf1StringM0UInt64UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.UInt32,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Upsert(String key, !!0 value, UInt64 cas, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.UpsertOf1StringM0UInt64UInt32ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.UInt64,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Upsert(String key, !!0 value, UInt64 cas, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AddRef">
            <summary>MemcachedBucket.AddRef()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AppendAsyncStringByteArray">
            <summary>MemcachedBucket.AppendAsync(String key, Byte[] value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AppendAsyncStringString">
            <summary>MemcachedBucket.AppendAsync(String key, String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AppendStringByteArray">
            <summary>MemcachedBucket.Append(String key, Byte[] value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AppendStringString">
            <summary>MemcachedBucket.Append(String key, String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.BucketTypeGet">
            <summary>MemcachedBucket.get_BucketType()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.CheckDisposed">
            <summary>MemcachedBucket.CheckDisposed()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.ClusterGet">
            <summary>MemcachedBucket.get_Cluster()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.ConfigurationCouchbaseCoreIBucketget">
            <summary>MemcachedBucket.Couchbase.Core.IBucket.get_Configuration()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.CreateManagerStringString">
            <summary>MemcachedBucket.CreateManager(String username, String password)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.CreateQueryBoolean">
            <summary>MemcachedBucket.CreateQuery(Boolean development)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.CreateQueryStringString">
            <summary>MemcachedBucket.CreateQuery(String designDoc, String view)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.CreateQueryStringStringBoolean">
            <summary>MemcachedBucket.CreateQuery(String designdoc, String view, Boolean development)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.DecrementAsyncString">
            <summary>MemcachedBucket.DecrementAsync(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.DecrementAsyncStringUInt64">
            <summary>MemcachedBucket.DecrementAsync(String key, UInt64 delta)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.DecrementAsyncStringUInt64UInt64">
            <summary>MemcachedBucket.DecrementAsync(String key, UInt64 delta, UInt64 initial)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.DecrementAsyncStringUInt64UInt64TimeSpan">
            <summary>MemcachedBucket.DecrementAsync(String key, UInt64 delta, UInt64 initial, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.DecrementAsyncStringUInt64UInt64UInt32">
            <summary>MemcachedBucket.DecrementAsync(String key, UInt64 delta, UInt64 initial, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.DecrementString">
            <summary>MemcachedBucket.Decrement(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.DecrementStringUInt64">
            <summary>MemcachedBucket.Decrement(String key, UInt64 delta)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.DecrementStringUInt64UInt64">
            <summary>MemcachedBucket.Decrement(String key, UInt64 delta, UInt64 initial)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.DecrementStringUInt64UInt64TimeSpan">
            <summary>MemcachedBucket.Decrement(String key, UInt64 delta, UInt64 initial, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.DecrementStringUInt64UInt64UInt32">
            <summary>MemcachedBucket.Decrement(String key, UInt64 delta, UInt64 initial, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.Dispose">
            <summary>MemcachedBucket.Dispose()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.DisposeBoolean">
            <summary>MemcachedBucket.Dispose(Boolean disposing)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.ExistsAsyncString">
            <summary>MemcachedBucket.ExistsAsync(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.ExistsString">
            <summary>MemcachedBucket.Exists(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.IncrementAsyncString">
            <summary>MemcachedBucket.IncrementAsync(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.IncrementAsyncStringUInt64">
            <summary>MemcachedBucket.IncrementAsync(String key, UInt64 delta)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.IncrementAsyncStringUInt64UInt64">
            <summary>MemcachedBucket.IncrementAsync(String key, UInt64 delta, UInt64 initial)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.IncrementAsyncStringUInt64UInt64TimeSpan">
            <summary>MemcachedBucket.IncrementAsync(String key, UInt64 delta, UInt64 initial, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.IncrementAsyncStringUInt64UInt64UInt32">
            <summary>MemcachedBucket.IncrementAsync(String key, UInt64 delta, UInt64 initial, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.IncrementString">
            <summary>MemcachedBucket.Increment(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.IncrementStringUInt64">
            <summary>MemcachedBucket.Increment(String key, UInt64 delta)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.IncrementStringUInt64UInt64">
            <summary>MemcachedBucket.Increment(String key, UInt64 delta, UInt64 initial)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.IncrementStringUInt64UInt64TimeSpan">
            <summary>MemcachedBucket.Increment(String key, UInt64 delta, UInt64 initial, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.IncrementStringUInt64UInt64UInt32">
            <summary>MemcachedBucket.Increment(String key, UInt64 delta, UInt64 initial, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.IsSecureGet">
            <summary>MemcachedBucket.get_IsSecure()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.NameGet">
            <summary>MemcachedBucket.get_Name()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.NameSetString">
            <summary>MemcachedBucket.set_Name(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.ObserveAsyncStringUInt64BooleanReplicateToPersistTo">
            <summary>MemcachedBucket.ObserveAsync(String key, UInt64 cas, Boolean deletion, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.ObserveStringUInt64BooleanReplicateToPersistTo">
            <summary>MemcachedBucket.Observe(String key, UInt64 cas, Boolean remove, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.PrependAsyncStringByteArray">
            <summary>MemcachedBucket.PrependAsync(String key, Byte[] value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.PrependAsyncStringString">
            <summary>MemcachedBucket.PrependAsync(String key, String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.PrependStringByteArray">
            <summary>MemcachedBucket.Prepend(String key, Byte[] value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.PrependStringString">
            <summary>MemcachedBucket.Prepend(String key, String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.QueryAsyncSearchQuery">
            <summary>MemcachedBucket.QueryAsync(SearchQuery query1)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.QuerySearchQuery">
            <summary>MemcachedBucket.Query(SearchQuery query1)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.Release">
            <summary>MemcachedBucket.Release()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.RemoveAsyncString">
            <summary>MemcachedBucket.RemoveAsync(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.RemoveAsyncStringReplicateTo">
            <summary>MemcachedBucket.RemoveAsync(String key, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.RemoveAsyncStringReplicateToPersistTo">
            <summary>MemcachedBucket.RemoveAsync(String key, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.RemoveAsyncStringUInt64">
            <summary>MemcachedBucket.RemoveAsync(String key, UInt64 cas)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.RemoveAsyncStringUInt64ReplicateTo">
            <summary>MemcachedBucket.RemoveAsync(String key, UInt64 cas, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.RemoveAsyncStringUInt64ReplicateToPersistTo">
            <summary>MemcachedBucket.RemoveAsync(String key, UInt64 cas, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.RemoveIListOfString">
            <summary>MemcachedBucket.Remove(IList`1&lt;String&gt; keys)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.RemoveIListOfStringParallelOptions">
            <summary>MemcachedBucket.Remove(IList`1&lt;String&gt; keys, ParallelOptions options)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.RemoveIListOfStringParallelOptionsInt32">
            <summary>MemcachedBucket.Remove(IList`1&lt;String&gt; keys, ParallelOptions options, Int32 rangeSize)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.RemoveString">
            <summary>MemcachedBucket.Remove(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.RemoveStringReplicateTo">
            <summary>MemcachedBucket.Remove(String key, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.RemoveStringReplicateToPersistTo">
            <summary>MemcachedBucket.Remove(String key, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.RemoveStringUInt64">
            <summary>MemcachedBucket.Remove(String key, UInt64 cas)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.RemoveStringUInt64ReplicateTo">
            <summary>MemcachedBucket.Remove(String key, UInt64 cas, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.RemoveStringUInt64ReplicateToPersistTo">
            <summary>MemcachedBucket.Remove(String key, UInt64 cas, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.StaticConstructor">
            <summary>MemcachedBucket.MemcachedBucket()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.SupportsEnhancedDurabilityGet">
            <summary>MemcachedBucket.get_SupportsEnhancedDurability()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.TouchAsyncStringTimeSpan">
            <summary>MemcachedBucket.TouchAsync(String key, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.TouchStringTimeSpan">
            <summary>MemcachedBucket.Touch(String key, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.UnlockAsyncStringUInt64">
            <summary>MemcachedBucket.UnlockAsync(String key, UInt64 cas)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.UnlockStringUInt64">
            <summary>MemcachedBucket.Unlock(String key, UInt64 cas)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.ShimMemcachedBucket.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.GetAndLockAsyncOf1StringTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,System.TimeSpan,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.GetAndLockAsync(String key, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.GetAndLockAsyncOf1StringUInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,System.UInt32,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.GetAndLockAsync(String key, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.GetAndLockOf1StringTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,System.TimeSpan,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.GetAndLock(String key, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.GetAndLockOf1StringUInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,System.UInt32,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.GetAndLock(String key, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.GetAndTouchAsyncOf1StringTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,System.TimeSpan,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.GetAndTouchAsync(String key, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.GetAndTouchDocumentAsyncOf1StringTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,System.TimeSpan,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>MemcachedBucket.GetAndTouchDocumentAsync(String key, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.GetAndTouchDocumentOf1StringTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,System.TimeSpan,Couchbase.IDocumentResult{``0}})">
            <summary>MemcachedBucket.GetAndTouchDocument(String key, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.GetAndTouchOf1StringTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,System.TimeSpan,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.GetAndTouch(String key, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.GetAsyncOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.GetAsync(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.GetDocumentAsyncOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>MemcachedBucket.GetDocumentAsync(String id)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.GetDocumentOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,Couchbase.IDocumentResult{``0}})">
            <summary>MemcachedBucket.GetDocument(String id)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.GetDocumentsAsyncOf1IEnumerableOfString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.Collections.Generic.IEnumerable{System.String},System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>MemcachedBucket.GetDocumentsAsync(IEnumerable`1&lt;String&gt; ids)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.GetFromReplicaAsyncOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.GetFromReplicaAsync(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.GetFromReplicaOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.GetFromReplica(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.GetOf1IListOfString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.Collections.Generic.IList{System.String},System.Collections.Generic.IDictionary{System.String,Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.Get(IList`1&lt;String&gt; keys)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.GetOf1IListOfStringParallelOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.Collections.Generic.IList{System.String},System.Threading.Tasks.ParallelOptions,System.Collections.Generic.IDictionary{System.String,Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.Get(IList`1&lt;String&gt; keys, ParallelOptions options)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.GetOf1IListOfStringParallelOptionsInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.Collections.Generic.IList{System.String},System.Threading.Tasks.ParallelOptions,System.Int32,System.Collections.Generic.IDictionary{System.String,Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.Get(IList`1&lt;String&gt; keys, ParallelOptions options, Int32 rangeSize)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.GetOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Get(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.GetWithLockAsyncOf1StringTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,System.TimeSpan,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.GetWithLockAsync(String key, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.GetWithLockAsyncOf1StringUInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,System.UInt32,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.GetWithLockAsync(String key, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.GetWithLockOf1StringTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,System.TimeSpan,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.GetWithLock(String key, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.GetWithLockOf1StringUInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,System.UInt32,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.GetWithLock(String key, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.InsertAsyncOf1IDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,Couchbase.IDocument{``0},System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>MemcachedBucket.InsertAsync(IDocument`1&lt;!!0&gt; document)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.InsertAsyncOf1IDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,Couchbase.IDocument{``0},Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>MemcachedBucket.InsertAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.InsertAsyncOf1IDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>MemcachedBucket.InsertAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.InsertAsyncOf1ListOfIDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.Collections.Generic.List{Couchbase.IDocument{``0}},System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>MemcachedBucket.InsertAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.InsertAsyncOf1ListOfIDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>MemcachedBucket.InsertAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.InsertAsyncOf1ListOfIDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>MemcachedBucket.InsertAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.InsertAsyncOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.InsertAsync(String key, !!0 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.InsertAsyncOf1StringM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.InsertAsync(String key, !!0 value, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.InsertAsyncOf1StringM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.InsertAsync(String key, !!0 value, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.InsertAsyncOf1StringM0TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.TimeSpan,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.InsertAsync(String key, !!0 value, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.InsertAsyncOf1StringM0TimeSpanReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.InsertAsync(String key, !!0 value, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.InsertAsyncOf1StringM0UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.UInt32,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.InsertAsync(String key, !!0 value, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.InsertAsyncOf1StringM0UInt32ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.InsertAsync(String key, !!0 value, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.InsertOf1IDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,Couchbase.IDocument{``0},Couchbase.IDocumentResult{``0}})">
            <summary>MemcachedBucket.Insert(IDocument`1&lt;!!0&gt; document)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.InsertOf1IDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.IDocumentResult{``0}})">
            <summary>MemcachedBucket.Insert(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.InsertOf1IDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IDocumentResult{``0}})">
            <summary>MemcachedBucket.Insert(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.InsertOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Insert(String key, !!0 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.InsertOf1StringM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,Couchbase.ReplicateTo,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Insert(String key, !!0 value, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.InsertOf1StringM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Insert(String key, !!0 value, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.InsertOf1StringM0TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.TimeSpan,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Insert(String key, !!0 value, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.InsertOf1StringM0TimeSpanReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Insert(String key, !!0 value, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.InsertOf1StringM0UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.UInt32,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Insert(String key, !!0 value, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.InsertOf1StringM0UInt32ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Insert(String key, !!0 value, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.LookupInOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,Couchbase.Core.ILookupInBuilder{``0}})">
            <summary>MemcachedBucket.LookupIn(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.MutateInOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,Couchbase.Core.IMutateInBuilder{``0}})">
            <summary>MemcachedBucket.MutateIn(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.QueryAsyncOf1IQueryRequest``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,Couchbase.N1QL.IQueryRequest,System.Threading.Tasks.Task{Couchbase.N1QL.IQueryResult{``0}}})">
            <summary>MemcachedBucket.QueryAsync(IQueryRequest queryRequest)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.QueryAsyncOf1IViewQueryable``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,Couchbase.Views.IViewQueryable,System.Threading.Tasks.Task{Couchbase.Views.IViewResult{``0}}})">
            <summary>MemcachedBucket.QueryAsync(IViewQueryable query)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.QueryAsyncOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,System.Threading.Tasks.Task{Couchbase.N1QL.IQueryResult{``0}}})">
            <summary>MemcachedBucket.QueryAsync(String query)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.QueryOf1IQueryRequest``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,Couchbase.N1QL.IQueryRequest,Couchbase.N1QL.IQueryResult{``0}})">
            <summary>MemcachedBucket.Query(IQueryRequest queryRequest)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.QueryOf1IViewQueryable``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,Couchbase.Views.IViewQueryable,Couchbase.Views.IViewResult{``0}})">
            <summary>MemcachedBucket.Query(IViewQueryable query)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.QueryOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,Couchbase.N1QL.IQueryResult{``0}})">
            <summary>MemcachedBucket.Query(String query)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.RemoveAsyncOf1IDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,Couchbase.IDocument{``0},System.Threading.Tasks.Task{Couchbase.IOperationResult}})">
            <summary>MemcachedBucket.RemoveAsync(IDocument`1&lt;!!0&gt; document)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.RemoveAsyncOf1IDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,Couchbase.IDocument{``0},Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IOperationResult}})">
            <summary>MemcachedBucket.RemoveAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.RemoveAsyncOf1IDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult}})">
            <summary>MemcachedBucket.RemoveAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.RemoveAsyncOf1ListOfIDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.Collections.Generic.List{Couchbase.IDocument{``0}},System.Threading.Tasks.Task{Couchbase.IOperationResult[]}})">
            <summary>MemcachedBucket.RemoveAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.RemoveAsyncOf1ListOfIDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IOperationResult[]}})">
            <summary>MemcachedBucket.RemoveAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.RemoveAsyncOf1ListOfIDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult[]}})">
            <summary>MemcachedBucket.RemoveAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.RemoveOf1IDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,Couchbase.IDocument{``0},Couchbase.IOperationResult})">
            <summary>MemcachedBucket.Remove(IDocument`1&lt;!!0&gt; document)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.RemoveOf1IDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.IOperationResult})">
            <summary>MemcachedBucket.Remove(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.RemoveOf1IDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult})">
            <summary>MemcachedBucket.Remove(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.ReplaceAsyncOf1IDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,Couchbase.IDocument{``0},System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>MemcachedBucket.ReplaceAsync(IDocument`1&lt;!!0&gt; document)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.ReplaceAsyncOf1IDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,Couchbase.IDocument{``0},Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>MemcachedBucket.ReplaceAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.ReplaceAsyncOf1IDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>MemcachedBucket.ReplaceAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.ReplaceAsyncOf1ListOfIDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.Collections.Generic.List{Couchbase.IDocument{``0}},System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>MemcachedBucket.ReplaceAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.ReplaceAsyncOf1ListOfIDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>MemcachedBucket.ReplaceAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.ReplaceAsyncOf1ListOfIDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>MemcachedBucket.ReplaceAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.ReplaceAsyncOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.ReplaceAsync(String key, !!0 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.ReplaceAsyncOf1StringM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.ReplaceAsync(String key, !!0 value, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.ReplaceAsyncOf1StringM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.ReplaceAsync(String key, !!0 value, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.ReplaceAsyncOf1StringM0TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.TimeSpan,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.ReplaceAsync(String key, !!0 value, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.ReplaceAsyncOf1StringM0UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.UInt32,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.ReplaceAsync(String key, !!0 value, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.ReplaceAsyncOf1StringM0UInt64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.UInt64,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.ReplaceAsync(String key, !!0 value, UInt64 cas)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.ReplaceAsyncOf1StringM0UInt64ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.UInt64,Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.ReplaceAsync(String key, !!0 value, UInt64 cas, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.ReplaceAsyncOf1StringM0UInt64ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.UInt64,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.ReplaceAsync(String key, !!0 value, UInt64 cas, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.ReplaceAsyncOf1StringM0UInt64TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.UInt64,System.TimeSpan,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.ReplaceAsync(String key, !!0 value, UInt64 cas, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.ReplaceAsyncOf1StringM0UInt64TimeSpanReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.UInt64,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.ReplaceAsync(String key, !!0 value, UInt64 cas, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.ReplaceAsyncOf1StringM0UInt64UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.UInt64,System.UInt32,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.ReplaceAsync(String key, !!0 value, UInt64 cas, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.ReplaceAsyncOf1StringM0UInt64UInt32ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.UInt64,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.ReplaceAsync(String key, !!0 value, UInt64 cas, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.ReplaceOf1IDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,Couchbase.IDocument{``0},Couchbase.IDocumentResult{``0}})">
            <summary>MemcachedBucket.Replace(IDocument`1&lt;!!0&gt; document)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.ReplaceOf1IDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.IDocumentResult{``0}})">
            <summary>MemcachedBucket.Replace(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.ReplaceOf1IDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IDocumentResult{``0}})">
            <summary>MemcachedBucket.Replace(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.ReplaceOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Replace(String key, !!0 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.ReplaceOf1StringM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,Couchbase.ReplicateTo,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Replace(String key, !!0 value, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.ReplaceOf1StringM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Replace(String key, !!0 value, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.ReplaceOf1StringM0TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.TimeSpan,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Replace(String key, !!0 value, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.ReplaceOf1StringM0UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.UInt32,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Replace(String key, !!0 value, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.ReplaceOf1StringM0UInt64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.UInt64,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Replace(String key, !!0 value, UInt64 cas)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.ReplaceOf1StringM0UInt64ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.UInt64,Couchbase.ReplicateTo,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Replace(String key, !!0 value, UInt64 cas, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.ReplaceOf1StringM0UInt64ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.UInt64,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Replace(String key, !!0 value, UInt64 cas, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.ReplaceOf1StringM0UInt64TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.UInt64,System.TimeSpan,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Replace(String key, !!0 value, UInt64 cas, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.ReplaceOf1StringM0UInt64TimeSpanReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.UInt64,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Replace(String key, !!0 value, UInt64 cas, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.ReplaceOf1StringM0UInt64UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.UInt64,System.UInt32,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Replace(String key, !!0 value, UInt64 cas, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.ReplaceOf1StringM0UInt64UInt32ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.UInt64,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Replace(String key, !!0 value, UInt64 cas, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.UpsertAsyncOf1IDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,Couchbase.IDocument{``0},System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>MemcachedBucket.UpsertAsync(IDocument`1&lt;!!0&gt; document)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.UpsertAsyncOf1IDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,Couchbase.IDocument{``0},Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>MemcachedBucket.UpsertAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.UpsertAsyncOf1IDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}}})">
            <summary>MemcachedBucket.UpsertAsync(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.UpsertAsyncOf1ListOfIDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.Collections.Generic.List{Couchbase.IDocument{``0}},System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>MemcachedBucket.UpsertAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.UpsertAsyncOf1ListOfIDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>MemcachedBucket.UpsertAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.UpsertAsyncOf1ListOfIDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.Collections.Generic.List{Couchbase.IDocument{``0}},Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IDocumentResult{``0}[]}})">
            <summary>MemcachedBucket.UpsertAsync(List`1&lt;IDocument`1&lt;!!0&gt;&gt; documents, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.UpsertAsyncOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.UpsertAsync(String key, !!0 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.UpsertAsyncOf1StringM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,Couchbase.ReplicateTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.UpsertAsync(String key, !!0 value, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.UpsertAsyncOf1StringM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.UpsertAsync(String key, !!0 value, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.UpsertAsyncOf1StringM0TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.TimeSpan,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.UpsertAsync(String key, !!0 value, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.UpsertAsyncOf1StringM0TimeSpanReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.UpsertAsync(String key, !!0 value, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.UpsertAsyncOf1StringM0UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.UInt32,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.UpsertAsync(String key, !!0 value, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.UpsertAsyncOf1StringM0UInt32ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.UpsertAsync(String key, !!0 value, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.UpsertAsyncOf1StringM0UInt64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.UInt64,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.UpsertAsync(String key, !!0 value, UInt64 cas)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.UpsertAsyncOf1StringM0UInt64TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.UInt64,System.TimeSpan,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.UpsertAsync(String key, !!0 value, UInt64 cas, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.UpsertAsyncOf1StringM0UInt64TimeSpanReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.UInt64,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.UpsertAsync(String key, !!0 value, UInt64 cas, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.UpsertAsyncOf1StringM0UInt64UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.UInt64,System.UInt32,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.UpsertAsync(String key, !!0 value, UInt64 cas, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.UpsertAsyncOf1StringM0UInt64UInt32ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.UInt64,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo,System.Threading.Tasks.Task{Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.UpsertAsync(String key, !!0 value, UInt64 cas, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.UpsertOf1IDictionaryOfStringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.Collections.Generic.IDictionary{System.String,``0},System.Collections.Generic.IDictionary{System.String,Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.Upsert(IDictionary`2&lt;String,!!0&gt; items)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.UpsertOf1IDictionaryOfStringM0ParallelOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.Collections.Generic.IDictionary{System.String,``0},System.Threading.Tasks.ParallelOptions,System.Collections.Generic.IDictionary{System.String,Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.Upsert(IDictionary`2&lt;String,!!0&gt; items, ParallelOptions options)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.UpsertOf1IDictionaryOfStringM0ParallelOptionsInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.Collections.Generic.IDictionary{System.String,``0},System.Threading.Tasks.ParallelOptions,System.Int32,System.Collections.Generic.IDictionary{System.String,Couchbase.IOperationResult{``0}}})">
            <summary>MemcachedBucket.Upsert(IDictionary`2&lt;String,!!0&gt; items, ParallelOptions options, Int32 rangeSize)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.UpsertOf1IDocumentOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,Couchbase.IDocument{``0},Couchbase.IDocumentResult{``0}})">
            <summary>MemcachedBucket.Upsert(IDocument`1&lt;!!0&gt; document)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.UpsertOf1IDocumentOfM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.IDocumentResult{``0}})">
            <summary>MemcachedBucket.Upsert(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.UpsertOf1IDocumentOfM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,Couchbase.IDocument{``0},Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IDocumentResult{``0}})">
            <summary>MemcachedBucket.Upsert(IDocument`1&lt;!!0&gt; document, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.UpsertOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Upsert(String key, !!0 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.UpsertOf1StringM0ReplicateTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,Couchbase.ReplicateTo,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Upsert(String key, !!0 value, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.UpsertOf1StringM0ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Upsert(String key, !!0 value, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.UpsertOf1StringM0TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.TimeSpan,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Upsert(String key, !!0 value, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.UpsertOf1StringM0TimeSpanReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Upsert(String key, !!0 value, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.UpsertOf1StringM0UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.UInt32,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Upsert(String key, !!0 value, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.UpsertOf1StringM0UInt32ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Upsert(String key, !!0 value, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.UpsertOf1StringM0UInt64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.UInt64,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Upsert(String key, !!0 value, UInt64 cas)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.UpsertOf1StringM0UInt64TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.UInt64,System.TimeSpan,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Upsert(String key, !!0 value, UInt64 cas, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.UpsertOf1StringM0UInt64TimeSpanReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.UInt64,System.TimeSpan,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Upsert(String key, !!0 value, UInt64 cas, TimeSpan expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.UpsertOf1StringM0UInt64UInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.UInt64,System.UInt32,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Upsert(String key, !!0 value, UInt64 cas, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.UpsertOf1StringM0UInt64UInt32ReplicateToPersistTo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.MemcachedBucket,System.String,``0,System.UInt64,System.UInt32,Couchbase.ReplicateTo,Couchbase.PersistTo,Couchbase.IOperationResult{``0}})">
            <summary>MemcachedBucket.Upsert(String key, !!0 value, UInt64 cas, UInt32 expiration, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.AddRef">
            <summary>MemcachedBucket.AddRef()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.AppendAsyncStringByteArray">
            <summary>MemcachedBucket.AppendAsync(String key, Byte[] value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.AppendAsyncStringString">
            <summary>MemcachedBucket.AppendAsync(String key, String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.AppendStringByteArray">
            <summary>MemcachedBucket.Append(String key, Byte[] value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.AppendStringString">
            <summary>MemcachedBucket.Append(String key, String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.BucketTypeGet">
            <summary>MemcachedBucket.get_BucketType()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.CheckDisposed">
            <summary>MemcachedBucket.CheckDisposed()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.ClusterGet">
            <summary>MemcachedBucket.get_Cluster()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.ConfigurationCouchbaseCoreIBucketget">
            <summary>MemcachedBucket.Couchbase.Core.IBucket.get_Configuration()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.CreateManagerStringString">
            <summary>MemcachedBucket.CreateManager(String username, String password)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.CreateQueryBoolean">
            <summary>MemcachedBucket.CreateQuery(Boolean development)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.CreateQueryStringString">
            <summary>MemcachedBucket.CreateQuery(String designDoc, String view)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.CreateQueryStringStringBoolean">
            <summary>MemcachedBucket.CreateQuery(String designdoc, String view, Boolean development)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.DecrementAsyncString">
            <summary>MemcachedBucket.DecrementAsync(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.DecrementAsyncStringUInt64">
            <summary>MemcachedBucket.DecrementAsync(String key, UInt64 delta)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.DecrementAsyncStringUInt64UInt64">
            <summary>MemcachedBucket.DecrementAsync(String key, UInt64 delta, UInt64 initial)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.DecrementAsyncStringUInt64UInt64TimeSpan">
            <summary>MemcachedBucket.DecrementAsync(String key, UInt64 delta, UInt64 initial, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.DecrementAsyncStringUInt64UInt64UInt32">
            <summary>MemcachedBucket.DecrementAsync(String key, UInt64 delta, UInt64 initial, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.DecrementString">
            <summary>MemcachedBucket.Decrement(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.DecrementStringUInt64">
            <summary>MemcachedBucket.Decrement(String key, UInt64 delta)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.DecrementStringUInt64UInt64">
            <summary>MemcachedBucket.Decrement(String key, UInt64 delta, UInt64 initial)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.DecrementStringUInt64UInt64TimeSpan">
            <summary>MemcachedBucket.Decrement(String key, UInt64 delta, UInt64 initial, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.DecrementStringUInt64UInt64UInt32">
            <summary>MemcachedBucket.Decrement(String key, UInt64 delta, UInt64 initial, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.Dispose">
            <summary>MemcachedBucket.Dispose()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.DisposeBoolean">
            <summary>MemcachedBucket.Dispose(Boolean disposing)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.ExistsAsyncString">
            <summary>MemcachedBucket.ExistsAsync(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.ExistsString">
            <summary>MemcachedBucket.Exists(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.IncrementAsyncString">
            <summary>MemcachedBucket.IncrementAsync(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.IncrementAsyncStringUInt64">
            <summary>MemcachedBucket.IncrementAsync(String key, UInt64 delta)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.IncrementAsyncStringUInt64UInt64">
            <summary>MemcachedBucket.IncrementAsync(String key, UInt64 delta, UInt64 initial)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.IncrementAsyncStringUInt64UInt64TimeSpan">
            <summary>MemcachedBucket.IncrementAsync(String key, UInt64 delta, UInt64 initial, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.IncrementAsyncStringUInt64UInt64UInt32">
            <summary>MemcachedBucket.IncrementAsync(String key, UInt64 delta, UInt64 initial, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.IncrementString">
            <summary>MemcachedBucket.Increment(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.IncrementStringUInt64">
            <summary>MemcachedBucket.Increment(String key, UInt64 delta)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.IncrementStringUInt64UInt64">
            <summary>MemcachedBucket.Increment(String key, UInt64 delta, UInt64 initial)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.IncrementStringUInt64UInt64TimeSpan">
            <summary>MemcachedBucket.Increment(String key, UInt64 delta, UInt64 initial, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.IncrementStringUInt64UInt64UInt32">
            <summary>MemcachedBucket.Increment(String key, UInt64 delta, UInt64 initial, UInt32 expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.IsSecureGet">
            <summary>MemcachedBucket.get_IsSecure()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.NameGet">
            <summary>MemcachedBucket.get_Name()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.NameSetString">
            <summary>MemcachedBucket.set_Name(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.ObserveAsyncStringUInt64BooleanReplicateToPersistTo">
            <summary>MemcachedBucket.ObserveAsync(String key, UInt64 cas, Boolean deletion, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.ObserveStringUInt64BooleanReplicateToPersistTo">
            <summary>MemcachedBucket.Observe(String key, UInt64 cas, Boolean remove, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.PrependAsyncStringByteArray">
            <summary>MemcachedBucket.PrependAsync(String key, Byte[] value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.PrependAsyncStringString">
            <summary>MemcachedBucket.PrependAsync(String key, String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.PrependStringByteArray">
            <summary>MemcachedBucket.Prepend(String key, Byte[] value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.PrependStringString">
            <summary>MemcachedBucket.Prepend(String key, String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.QueryAsyncSearchQuery">
            <summary>MemcachedBucket.QueryAsync(SearchQuery query1)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.QuerySearchQuery">
            <summary>MemcachedBucket.Query(SearchQuery query1)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.Release">
            <summary>MemcachedBucket.Release()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.RemoveAsyncString">
            <summary>MemcachedBucket.RemoveAsync(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.RemoveAsyncStringReplicateTo">
            <summary>MemcachedBucket.RemoveAsync(String key, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.RemoveAsyncStringReplicateToPersistTo">
            <summary>MemcachedBucket.RemoveAsync(String key, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.RemoveAsyncStringUInt64">
            <summary>MemcachedBucket.RemoveAsync(String key, UInt64 cas)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.RemoveAsyncStringUInt64ReplicateTo">
            <summary>MemcachedBucket.RemoveAsync(String key, UInt64 cas, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.RemoveAsyncStringUInt64ReplicateToPersistTo">
            <summary>MemcachedBucket.RemoveAsync(String key, UInt64 cas, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.RemoveIListOfString">
            <summary>MemcachedBucket.Remove(IList`1&lt;String&gt; keys)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.RemoveIListOfStringParallelOptions">
            <summary>MemcachedBucket.Remove(IList`1&lt;String&gt; keys, ParallelOptions options)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.RemoveIListOfStringParallelOptionsInt32">
            <summary>MemcachedBucket.Remove(IList`1&lt;String&gt; keys, ParallelOptions options, Int32 rangeSize)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.RemoveString">
            <summary>MemcachedBucket.Remove(String key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.RemoveStringReplicateTo">
            <summary>MemcachedBucket.Remove(String key, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.RemoveStringReplicateToPersistTo">
            <summary>MemcachedBucket.Remove(String key, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.RemoveStringUInt64">
            <summary>MemcachedBucket.Remove(String key, UInt64 cas)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.RemoveStringUInt64ReplicateTo">
            <summary>MemcachedBucket.Remove(String key, UInt64 cas, ReplicateTo replicateTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.RemoveStringUInt64ReplicateToPersistTo">
            <summary>MemcachedBucket.Remove(String key, UInt64 cas, ReplicateTo replicateTo, PersistTo persistTo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.SupportsEnhancedDurabilityGet">
            <summary>MemcachedBucket.get_SupportsEnhancedDurability()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.TouchAsyncStringTimeSpan">
            <summary>MemcachedBucket.TouchAsync(String key, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.TouchStringTimeSpan">
            <summary>MemcachedBucket.Touch(String key, TimeSpan expiration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.UnlockAsyncStringUInt64">
            <summary>MemcachedBucket.UnlockAsync(String key, UInt64 cas)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimMemcachedBucket.AllInstances.UnlockStringUInt64">
            <summary>MemcachedBucket.Unlock(String key, UInt64 cas)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.ShimNullConfigException">
            <summary>Couchbase.NullConfigException의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimNullConfigException.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimNullConfigException.#ctor(Couchbase.NullConfigException)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimNullConfigException.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimNullConfigException.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimNullConfigException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimNullConfigException.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimNullConfigException.Constructor">
            <summary>NullConfigException.NullConfigException()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimNullConfigException.ConstructorSerializationInfoStreamingContext">
            <summary>NullConfigException.NullConfigException(SerializationInfo info, StreamingContext context)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimNullConfigException.ConstructorString">
            <summary>NullConfigException.NullConfigException(String message)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimNullConfigException.ConstructorStringException">
            <summary>NullConfigException.NullConfigException(String message, Exception innerException)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.ShimNullConfigException.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Fakes.ShimOperationResult">
            <summary>Couchbase.OperationResult의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimOperationResult.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimOperationResult.#ctor(Couchbase.OperationResult)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimOperationResult.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimOperationResult.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimOperationResult.Bind(Couchbase.IOperationResult)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimOperationResult.Bind(Couchbase.IResult)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.CasGet">
            <summary>OperationResult.get_Cas()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.CasSetUInt64">
            <summary>OperationResult.set_Cas(UInt64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.Constructor">
            <summary>OperationResult.OperationResult()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.DurabilityGet">
            <summary>OperationResult.get_Durability()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.DurabilitySetDurability">
            <summary>OperationResult.set_Durability(Durability value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.ExceptionGet">
            <summary>OperationResult.get_Exception()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.ExceptionSetException">
            <summary>OperationResult.set_Exception(Exception value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.IdGet">
            <summary>OperationResult.get_Id()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.IdSetString">
            <summary>OperationResult.set_Id(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.IsClientFailureRetriable">
            <summary>OperationResult.IsClientFailureRetriable()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.IsNmv">
            <summary>OperationResult.IsNmv()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.MessageGet">
            <summary>OperationResult.get_Message()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.MessageSetString">
            <summary>OperationResult.set_Message(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.OpCodeGet">
            <summary>OperationResult.get_OpCode()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.OpCodeSetOperationCode">
            <summary>OperationResult.set_OpCode(OperationCode value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.SetException">
            <summary>OperationResult.SetException()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.ShouldRetry">
            <summary>OperationResult.ShouldRetry()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.StatusGet">
            <summary>OperationResult.get_Status()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.StatusSetResponseStatus">
            <summary>OperationResult.set_Status(ResponseStatus value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.SuccessGet">
            <summary>OperationResult.get_Success()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.SuccessSetBoolean">
            <summary>OperationResult.set_Success(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.ToString">
            <summary>OperationResult.ToString()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.TokenGet">
            <summary>OperationResult.get_Token()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.TokenSetMutationToken">
            <summary>OperationResult.set_Token(MutationToken value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.ShimOperationResult.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.AllInstances.CasGet">
            <summary>OperationResult.get_Cas()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.AllInstances.CasSetUInt64">
            <summary>OperationResult.set_Cas(UInt64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.AllInstances.DurabilityGet">
            <summary>OperationResult.get_Durability()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.AllInstances.DurabilitySetDurability">
            <summary>OperationResult.set_Durability(Durability value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.AllInstances.ExceptionGet">
            <summary>OperationResult.get_Exception()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.AllInstances.ExceptionSetException">
            <summary>OperationResult.set_Exception(Exception value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.AllInstances.IdGet">
            <summary>OperationResult.get_Id()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.AllInstances.IdSetString">
            <summary>OperationResult.set_Id(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.AllInstances.IsClientFailureRetriable">
            <summary>OperationResult.IsClientFailureRetriable()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.AllInstances.IsNmv">
            <summary>OperationResult.IsNmv()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.AllInstances.MessageGet">
            <summary>OperationResult.get_Message()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.AllInstances.MessageSetString">
            <summary>OperationResult.set_Message(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.AllInstances.OpCodeGet">
            <summary>OperationResult.get_OpCode()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.AllInstances.OpCodeSetOperationCode">
            <summary>OperationResult.set_OpCode(OperationCode value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.AllInstances.SetException">
            <summary>OperationResult.SetException()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.AllInstances.ShouldRetry">
            <summary>OperationResult.ShouldRetry()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.AllInstances.StatusGet">
            <summary>OperationResult.get_Status()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.AllInstances.StatusSetResponseStatus">
            <summary>OperationResult.set_Status(ResponseStatus value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.AllInstances.SuccessGet">
            <summary>OperationResult.get_Success()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.AllInstances.SuccessSetBoolean">
            <summary>OperationResult.set_Success(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.AllInstances.ToString01">
            <summary>OperationResult.ToString()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.AllInstances.TokenGet">
            <summary>OperationResult.get_Token()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult.AllInstances.TokenSetMutationToken">
            <summary>OperationResult.set_Token(MutationToken value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.ShimOperationResult`1">
            <summary>Couchbase.OperationResult`1의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimOperationResult`1.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimOperationResult`1.#ctor(Couchbase.OperationResult{`0})">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimOperationResult`1.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimOperationResult`1.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimOperationResult`1.Bind(Couchbase.IOperationResult)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimOperationResult`1.Bind(Couchbase.IResult)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimOperationResult`1.Bind(Couchbase.IOperationResult{`0})">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult`1.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult`1.Constructor">
            <summary>OperationResult`1.OperationResult`1()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult`1.ToString">
            <summary>OperationResult`1.ToString()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult`1.ValueGet">
            <summary>OperationResult`1.get_Value()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult`1.ValueSetT0">
            <summary>OperationResult`1.set_Value(!0 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.ShimOperationResult`1.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult`1.AllInstances.ToString01">
            <summary>OperationResult`1.ToString()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult`1.AllInstances.ValueGet">
            <summary>OperationResult`1.get_Value()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimOperationResult`1.AllInstances.ValueSetT0">
            <summary>OperationResult`1.set_Value(!0 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.ShimPrepareStatementException">
            <summary>Couchbase.PrepareStatementException의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimPrepareStatementException.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimPrepareStatementException.#ctor(Couchbase.PrepareStatementException)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimPrepareStatementException.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimPrepareStatementException.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimPrepareStatementException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimPrepareStatementException.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimPrepareStatementException.ConstructorString">
            <summary>PrepareStatementException.PrepareStatementException(String message)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.ShimPrepareStatementException.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Fakes.ShimServerUnavailableException">
            <summary>Couchbase.ServerUnavailableException의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimServerUnavailableException.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimServerUnavailableException.#ctor(Couchbase.ServerUnavailableException)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimServerUnavailableException.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimServerUnavailableException.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimServerUnavailableException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimServerUnavailableException.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimServerUnavailableException.Constructor">
            <summary>ServerUnavailableException.ServerUnavailableException()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimServerUnavailableException.ConstructorSerializationInfoStreamingContext">
            <summary>ServerUnavailableException.ServerUnavailableException(SerializationInfo info, StreamingContext context)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimServerUnavailableException.ConstructorString">
            <summary>ServerUnavailableException.ServerUnavailableException(String message)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimServerUnavailableException.ConstructorStringException">
            <summary>ServerUnavailableException.ServerUnavailableException(String message, Exception innerException)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.ShimServerUnavailableException.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Fakes.ShimSubdocExtensions">
            <summary>Couchbase.SubdocExtensions의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimSubdocExtensions.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimSubdocExtensions.ArrayAddUniqueOf3IMutateInBuilderOfM0ExpressionOfFuncOfM0M1M2Boolean``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.Core.IMutateInBuilder{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},``2,System.Boolean,Couchbase.Core.IMutateInBuilder{``0}})">
            <summary>SubdocExtensions.ArrayAddUnique(IMutateInBuilder`1&lt;!!0&gt; builder, Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; path, !!2 value, Boolean createParents)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimSubdocExtensions.ArrayAppendOf3IMutateInBuilderOfM0ExpressionOfFuncOfM0M1M2Boolean``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.Core.IMutateInBuilder{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},``2,System.Boolean,Couchbase.Core.IMutateInBuilder{``0}})">
            <summary>SubdocExtensions.ArrayAppend(IMutateInBuilder`1&lt;!!0&gt; builder, Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; path, !!2 value, Boolean createParents)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimSubdocExtensions.ArrayInsertOf2IMutateInBuilderOfM0ExpressionOfFuncOfM0M1M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.Core.IMutateInBuilder{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,Couchbase.Core.IMutateInBuilder{``0}})">
            <summary>SubdocExtensions.ArrayInsert(IMutateInBuilder`1&lt;!!0&gt; builder, Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; path, !!1 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimSubdocExtensions.ArrayPrependOf3IMutateInBuilderOfM0ExpressionOfFuncOfM0M1M2Boolean``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.Core.IMutateInBuilder{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},``2,System.Boolean,Couchbase.Core.IMutateInBuilder{``0}})">
            <summary>SubdocExtensions.ArrayPrepend(IMutateInBuilder`1&lt;!!0&gt; builder, Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; path, !!2 value, Boolean createParents)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimSubdocExtensions.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimSubdocExtensions.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimSubdocExtensions.ContentOf2IDocumentFragmentOfM0ExpressionOfFuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocumentFragment{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},``1})">
            <summary>SubdocExtensions.Content(IDocumentFragment`1&lt;!!0&gt; result, Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; path)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimSubdocExtensions.CounterOf2IMutateInBuilderOfM0ExpressionOfFuncOfM0M1Int64Boolean``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.Core.IMutateInBuilder{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int64,System.Boolean,Couchbase.Core.IMutateInBuilder{``0}})">
            <summary>SubdocExtensions.Counter(IMutateInBuilder`1&lt;!!0&gt; builder, Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; path, Int64 delta, Boolean createParents)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimSubdocExtensions.ExistsOf2IDocumentFragmentOfM0ExpressionOfFuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IDocumentFragment{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Boolean})">
            <summary>SubdocExtensions.Exists(IDocumentFragment`1&lt;!!0&gt; result, Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; path)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimSubdocExtensions.ExistsOf2ILookupInBuilderOfM0ExpressionOfFuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.Core.ILookupInBuilder{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},Couchbase.Core.ILookupInBuilder{``0}})">
            <summary>SubdocExtensions.Exists(ILookupInBuilder`1&lt;!!0&gt; builder, Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; path)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimSubdocExtensions.GetOf2ILookupInBuilderOfM0ExpressionOfFuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.Core.ILookupInBuilder{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},Couchbase.Core.ILookupInBuilder{``0}})">
            <summary>SubdocExtensions.Get(ILookupInBuilder`1&lt;!!0&gt; builder, Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; path)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimSubdocExtensions.InsertOf2IMutateInBuilderOfM0ExpressionOfFuncOfM0M1M1Boolean``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.Core.IMutateInBuilder{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,Couchbase.Core.IMutateInBuilder{``0}})">
            <summary>SubdocExtensions.Insert(IMutateInBuilder`1&lt;!!0&gt; builder, Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; path, !!1 value, Boolean createParents)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimSubdocExtensions.ParsePathOf2ITypeSerializerProviderExpressionOfFuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.Core.Serialization.ITypeSerializerProvider,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String})">
            <summary>SubdocExtensions.ParsePath(ITypeSerializerProvider typeSerializerProvider, Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; path)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimSubdocExtensions.RemoveOf2IMutateInBuilderOfM0ExpressionOfFuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.Core.IMutateInBuilder{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},Couchbase.Core.IMutateInBuilder{``0}})">
            <summary>SubdocExtensions.Remove(IMutateInBuilder`1&lt;!!0&gt; builder, Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; path)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimSubdocExtensions.ReplaceOf2IMutateInBuilderOfM0ExpressionOfFuncOfM0M1M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.Core.IMutateInBuilder{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,Couchbase.Core.IMutateInBuilder{``0}})">
            <summary>SubdocExtensions.Replace(IMutateInBuilder`1&lt;!!0&gt; builder, Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; path, !!1 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimSubdocExtensions.UpsertOf2IMutateInBuilderOfM0ExpressionOfFuncOfM0M1M1Boolean``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.Core.IMutateInBuilder{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Boolean,Couchbase.Core.IMutateInBuilder{``0}})">
            <summary>SubdocExtensions.Upsert(IMutateInBuilder`1&lt;!!0&gt; builder, Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; path, !!1 value, Boolean createParents)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimSubdocExtensions.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.ShimTemporaryLockFailureException">
            <summary>Couchbase.TemporaryLockFailureException의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimTemporaryLockFailureException.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimTemporaryLockFailureException.#ctor(Couchbase.TemporaryLockFailureException)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimTemporaryLockFailureException.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimTemporaryLockFailureException.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.ShimTemporaryLockFailureException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimTemporaryLockFailureException.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimTemporaryLockFailureException.Constructor">
            <summary>TemporaryLockFailureException.TemporaryLockFailureException()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimTemporaryLockFailureException.ConstructorSerializationInfoStreamingContext">
            <summary>TemporaryLockFailureException.TemporaryLockFailureException(SerializationInfo info, StreamingContext context)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimTemporaryLockFailureException.ConstructorString">
            <summary>TemporaryLockFailureException.TemporaryLockFailureException(String message)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.ShimTemporaryLockFailureException.ConstructorStringException">
            <summary>TemporaryLockFailureException.TemporaryLockFailureException(String message, Exception innerException)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.ShimTemporaryLockFailureException.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Fakes.StubCasMismatchException">
            <summary>Couchbase.CasMismatchException의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubCasMismatchException.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubCasMismatchException.#ctor(System.String)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubCasMismatchException.#ctor(System.String,System.Exception)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubCasMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubCasMismatchException.AttachBackingFieldToHelpLink">
            <summary>대리자를 연결하여 StubCasMismatchException.HelpLink을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubCasMismatchException.AttachBackingFieldToSource">
            <summary>대리자를 연결하여 StubCasMismatchException.Source을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubCasMismatchException.DataGet">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubCasMismatchException.GetBaseException">
            <summary>Exception.GetBaseException()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubCasMismatchException.GetBaseException01">
            <summary>Exception.GetBaseException()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubCasMismatchException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Exception.GetObjectData(SerializationInfo info, StreamingContext context)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubCasMismatchException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Exception.GetObjectData(SerializationInfo info, StreamingContext context)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubCasMismatchException.HelpLinkGet">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubCasMismatchException.HelpLinkSetString">
            <summary>Exception.set_HelpLink(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubCasMismatchException.InitializeStub">
            <summary>type StubCasMismatchException의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubCasMismatchException.MessageGet">
            <summary>Exception.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubCasMismatchException.SourceGet">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubCasMismatchException.SourceSetString">
            <summary>Exception.set_Source(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubCasMismatchException.StackTraceGet">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubCasMismatchException.ToString">
            <summary>Exception.ToString()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubCasMismatchException.ToString01">
            <summary>Exception.ToString()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubCasMismatchException.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubCasMismatchException.Data">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubCasMismatchException.HelpLink">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubCasMismatchException.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubCasMismatchException.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubCasMismatchException.Message">
            <summary>Exception.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubCasMismatchException.Source">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubCasMismatchException.StackTrace">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.StubClusterHelper">
            <summary>Couchbase.ClusterHelper의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubClusterHelper.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubClusterHelper.#ctor(Couchbase.Configuration.Client.ClientConfiguration)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubClusterHelper.InitializeStub">
            <summary>type StubClusterHelper의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubClusterHelper.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubClusterHelper.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubClusterHelper.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.StubDefaultResult">
            <summary>Couchbase.DefaultResult의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubDefaultResult.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubDefaultResult.#ctor(System.Boolean,System.String,System.Exception)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubDefaultResult.InitializeStub">
            <summary>type StubDefaultResult의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubDefaultResult.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubDefaultResult.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubDefaultResult.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.StubDefaultResult`1">
            <summary>Couchbase.DefaultResult`1의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubDefaultResult`1.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubDefaultResult`1.#ctor(System.Boolean,System.String,System.Exception)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubDefaultResult`1.InitializeStub">
            <summary>type StubDefaultResult의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubDefaultResult`1.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubDefaultResult`1.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubDefaultResult`1.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.StubDocument`1">
            <summary>Couchbase.Document`1의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubDocument`1.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubDocument`1.InitializeStub">
            <summary>type StubDocument의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubDocument`1.ToString">
            <summary>Document`1.ToString()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubDocument`1.ToString01">
            <summary>Document`1.ToString()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubDocument`1.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubDocument`1.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubDocument`1.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.StubDocumentAlreadyExistsException">
            <summary>Couchbase.DocumentAlreadyExistsException의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubDocumentAlreadyExistsException.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubDocumentAlreadyExistsException.#ctor(System.String)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubDocumentAlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubDocumentAlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubDocumentAlreadyExistsException.AttachBackingFieldToHelpLink">
            <summary>대리자를 연결하여 StubDocumentAlreadyExistsException.HelpLink을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubDocumentAlreadyExistsException.AttachBackingFieldToSource">
            <summary>대리자를 연결하여 StubDocumentAlreadyExistsException.Source을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubDocumentAlreadyExistsException.DataGet">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubDocumentAlreadyExistsException.GetBaseException">
            <summary>Exception.GetBaseException()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubDocumentAlreadyExistsException.GetBaseException01">
            <summary>Exception.GetBaseException()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubDocumentAlreadyExistsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Exception.GetObjectData(SerializationInfo info, StreamingContext context)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubDocumentAlreadyExistsException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Exception.GetObjectData(SerializationInfo info, StreamingContext context)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubDocumentAlreadyExistsException.HelpLinkGet">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubDocumentAlreadyExistsException.HelpLinkSetString">
            <summary>Exception.set_HelpLink(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubDocumentAlreadyExistsException.InitializeStub">
            <summary>type StubDocumentAlreadyExistsException의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubDocumentAlreadyExistsException.MessageGet">
            <summary>Exception.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubDocumentAlreadyExistsException.SourceGet">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubDocumentAlreadyExistsException.SourceSetString">
            <summary>Exception.set_Source(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubDocumentAlreadyExistsException.StackTraceGet">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubDocumentAlreadyExistsException.ToString">
            <summary>Exception.ToString()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubDocumentAlreadyExistsException.ToString01">
            <summary>Exception.ToString()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubDocumentAlreadyExistsException.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubDocumentAlreadyExistsException.Data">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubDocumentAlreadyExistsException.HelpLink">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubDocumentAlreadyExistsException.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubDocumentAlreadyExistsException.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubDocumentAlreadyExistsException.Message">
            <summary>Exception.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubDocumentAlreadyExistsException.Source">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubDocumentAlreadyExistsException.StackTrace">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.StubDocumentDoesNotExistException">
            <summary>Couchbase.DocumentDoesNotExistException의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubDocumentDoesNotExistException.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubDocumentDoesNotExistException.#ctor(System.String)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubDocumentDoesNotExistException.#ctor(System.String,System.Exception)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubDocumentDoesNotExistException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubDocumentDoesNotExistException.AttachBackingFieldToHelpLink">
            <summary>대리자를 연결하여 StubDocumentDoesNotExistException.HelpLink을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubDocumentDoesNotExistException.AttachBackingFieldToSource">
            <summary>대리자를 연결하여 StubDocumentDoesNotExistException.Source을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubDocumentDoesNotExistException.DataGet">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubDocumentDoesNotExistException.GetBaseException">
            <summary>Exception.GetBaseException()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubDocumentDoesNotExistException.GetBaseException01">
            <summary>Exception.GetBaseException()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubDocumentDoesNotExistException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Exception.GetObjectData(SerializationInfo info, StreamingContext context)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubDocumentDoesNotExistException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Exception.GetObjectData(SerializationInfo info, StreamingContext context)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubDocumentDoesNotExistException.HelpLinkGet">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubDocumentDoesNotExistException.HelpLinkSetString">
            <summary>Exception.set_HelpLink(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubDocumentDoesNotExistException.InitializeStub">
            <summary>type StubDocumentDoesNotExistException의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubDocumentDoesNotExistException.MessageGet">
            <summary>Exception.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubDocumentDoesNotExistException.SourceGet">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubDocumentDoesNotExistException.SourceSetString">
            <summary>Exception.set_Source(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubDocumentDoesNotExistException.StackTraceGet">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubDocumentDoesNotExistException.ToString">
            <summary>Exception.ToString()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubDocumentDoesNotExistException.ToString01">
            <summary>Exception.ToString()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubDocumentDoesNotExistException.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubDocumentDoesNotExistException.Data">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubDocumentDoesNotExistException.HelpLink">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubDocumentDoesNotExistException.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubDocumentDoesNotExistException.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubDocumentDoesNotExistException.Message">
            <summary>Exception.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubDocumentDoesNotExistException.Source">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubDocumentDoesNotExistException.StackTrace">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.StubDocumentFragment`1">
            <summary>Couchbase.DocumentFragment`1의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubDocumentFragment`1.#ctor(Couchbase.Core.Serialization.ITypeSerializerProvider)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubDocumentFragment`1.InitializeStub">
            <summary>type StubDocumentFragment의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubDocumentFragment`1.ToString">
            <summary>OperationResult.ToString()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubDocumentFragment`1.ToString01">
            <summary>OperationResult.ToString()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubDocumentFragment`1.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubDocumentFragment`1.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubDocumentFragment`1.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.StubDocumentResult`1">
            <summary>Couchbase.DocumentResult`1의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubDocumentResult`1.#ctor(Couchbase.IOperationResult{`0})">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubDocumentResult`1.#ctor(Couchbase.IOperationResult{`0},Couchbase.IDocument{`0})">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubDocumentResult`1.InitializeStub">
            <summary>type StubDocumentResult의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubDocumentResult`1.ToString">
            <summary>DocumentResult`1.ToString()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubDocumentResult`1.ToString01">
            <summary>DocumentResult`1.ToString()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubDocumentResult`1.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubDocumentResult`1.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubDocumentResult`1.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.StubIDocument">
            <summary>Couchbase.IDocument의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIDocument.#ctor">
            <summary>type StubIDocument의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIDocument.AttachBackingFieldToCas">
            <summary>대리자를 연결하여 StubIDocument.Cas을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIDocument.AttachBackingFieldToExpiry">
            <summary>대리자를 연결하여 StubIDocument.Expiry을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIDocument.AttachBackingFieldToId">
            <summary>대리자를 연결하여 StubIDocument.Id을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocument.CasGet">
            <summary>IDocument.get_Cas()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocument.CasSetUInt64">
            <summary>IDocument.set_Cas(UInt64 value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocument.ExpiryGet">
            <summary>IDocument.get_Expiry()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocument.ExpirySetUInt32">
            <summary>IDocument.set_Expiry(UInt32 value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocument.IdGet">
            <summary>IDocument.get_Id()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocument.IdSetString">
            <summary>IDocument.set_Id(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocument.TokenGet">
            <summary>IDocument.get_Token()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIDocument.cnc::Couchbase#IDocument#Cas">
            <summary>IDocument.get_Cas()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIDocument.cnc::Couchbase#IDocument#Expiry">
            <summary>IDocument.get_Expiry()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIDocument.cnc::Couchbase#IDocument#Id">
            <summary>IDocument.get_Id()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIDocument.cnc::Couchbase#IDocument#Token">
            <summary>IDocument.get_Token()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.StubIDocument`1">
            <summary>Couchbase.IDocument`1의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIDocument`1.#ctor">
            <summary>type StubIDocument의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIDocument`1.AttachBackingFieldToCas">
            <summary>대리자를 연결하여 StubIDocument.Cas을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIDocument`1.AttachBackingFieldToContent">
            <summary>대리자를 연결하여 StubIDocument.Content을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIDocument`1.AttachBackingFieldToExpiry">
            <summary>대리자를 연결하여 StubIDocument.Expiry을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIDocument`1.AttachBackingFieldToId">
            <summary>대리자를 연결하여 StubIDocument.Id을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocument`1.CasGet">
            <summary>IDocument.get_Cas()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocument`1.CasSetUInt64">
            <summary>IDocument.set_Cas(UInt64 value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocument`1.ContentGet">
            <summary>IDocument`1.get_Content()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocument`1.ContentSetT0">
            <summary>IDocument`1.set_Content(!0 value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocument`1.ExpiryGet">
            <summary>IDocument.get_Expiry()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocument`1.ExpirySetUInt32">
            <summary>IDocument.set_Expiry(UInt32 value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocument`1.IdGet">
            <summary>IDocument.get_Id()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocument`1.IdSetString">
            <summary>IDocument.set_Id(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocument`1.TokenGet">
            <summary>IDocument.get_Token()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIDocument`1.cnc::Couchbase#IDocument#Cas">
            <summary>IDocument.get_Cas()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIDocument`1.cnc::Couchbase#IDocument{T}#Content">
            <summary>IDocument`1.get_Content()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIDocument`1.cnc::Couchbase#IDocument#Expiry">
            <summary>IDocument.get_Expiry()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIDocument`1.cnc::Couchbase#IDocument#Id">
            <summary>IDocument.get_Id()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIDocument`1.cnc::Couchbase#IDocument#Token">
            <summary>IDocument.get_Token()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.StubIDocumentFragment">
            <summary>Couchbase.IDocumentFragment의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIDocumentFragment.#ctor">
            <summary>type StubIDocumentFragment의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIDocumentFragment.AttachBackingFieldToDurability">
            <summary>대리자를 연결하여 StubIDocumentFragment.Durability을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentFragment.CasGet">
            <summary>IOperationResult.get_Cas()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentFragment.ContentInt32">
            <summary>IDocumentFragment.Content(Int32 index)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIDocumentFragment.ContentOf1Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,``0})">
            <summary>Content(Int32 index)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIDocumentFragment.ContentOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>Content(String path)의 스텁을 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentFragment.ContentString">
            <summary>IDocumentFragment.Content(String path)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIDocumentFragment.cnc::Couchbase#IDocumentFragment#Content``1(System.Int32)">
            <summary>IDocumentFragment.Content(Int32 index)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIDocumentFragment.cnc::Couchbase#IDocumentFragment#Content(System.String)">
            <summary>IDocumentFragment.Content(String path)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIDocumentFragment.cnc::Couchbase#IDocumentFragment#Content``1(System.String)">
            <summary>IDocumentFragment.Content(String path)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIDocumentFragment.cnc::Couchbase#IDocumentFragment#Content(System.Int32)">
            <summary>IDocumentFragment.Content(Int32 index)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIDocumentFragment.cnc::Couchbase#IDocumentFragment#Count">
            <summary>IDocumentFragment.Count()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIDocumentFragment.cnc::Couchbase#IDocumentFragment#Exists(System.String)">
            <summary>IDocumentFragment.Exists(String path)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIDocumentFragment.cnc::Couchbase#IDocumentFragment#OpStatus(System.String)">
            <summary>IDocumentFragment.OpStatus(String path)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIDocumentFragment.cnc::Couchbase#IDocumentFragment#OpStatus(System.Int32)">
            <summary>IDocumentFragment.OpStatus(Int32 index)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIDocumentFragment.cnc::Couchbase#IOperationResult#IsNmv">
            <summary>IOperationResult.IsNmv()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIDocumentFragment.cnc::Couchbase#IResult#ShouldRetry">
            <summary>IResult.ShouldRetry()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentFragment.Count">
            <summary>IDocumentFragment.Count()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentFragment.DurabilityGet">
            <summary>IOperationResult.get_Durability()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentFragment.DurabilitySetDurability">
            <summary>IOperationResult.set_Durability(Durability value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentFragment.ExceptionGet">
            <summary>IResult.get_Exception()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentFragment.ExistsString">
            <summary>IDocumentFragment.Exists(String path)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentFragment.IdGet">
            <summary>IOperationResult.get_Id()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentFragment.IsNmv">
            <summary>IOperationResult.IsNmv()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentFragment.MessageGet">
            <summary>IResult.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentFragment.OpCodeGet">
            <summary>IOperationResult.get_OpCode()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentFragment.OpStatusInt32">
            <summary>IDocumentFragment.OpStatus(Int32 index)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentFragment.OpStatusString">
            <summary>IDocumentFragment.OpStatus(String path)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentFragment.ShouldRetry">
            <summary>IResult.ShouldRetry()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentFragment.StatusGet">
            <summary>IOperationResult.get_Status()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentFragment.SuccessGet">
            <summary>IResult.get_Success()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentFragment.TokenGet">
            <summary>IOperationResult.get_Token()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIDocumentFragment.cnc::Couchbase#IOperationResult#Cas">
            <summary>IOperationResult.get_Cas()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIDocumentFragment.cnc::Couchbase#IOperationResult#Durability">
            <summary>IOperationResult.get_Durability()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIDocumentFragment.cnc::Couchbase#IResult#Exception">
            <summary>IResult.get_Exception()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIDocumentFragment.cnc::Couchbase#IOperationResult#Id">
            <summary>IOperationResult.get_Id()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIDocumentFragment.cnc::Couchbase#IResult#Message">
            <summary>IResult.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIDocumentFragment.cnc::Couchbase#IOperationResult#OpCode">
            <summary>IOperationResult.get_OpCode()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIDocumentFragment.cnc::Couchbase#IOperationResult#Status">
            <summary>IOperationResult.get_Status()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIDocumentFragment.cnc::Couchbase#IResult#Success">
            <summary>IResult.get_Success()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIDocumentFragment.cnc::Couchbase#IOperationResult#Token">
            <summary>IOperationResult.get_Token()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.StubIDocumentFragment`1">
            <summary>Couchbase.IDocumentFragment`1의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIDocumentFragment`1.#ctor">
            <summary>type StubIDocumentFragment의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIDocumentFragment`1.AttachBackingFieldToDurability">
            <summary>대리자를 연결하여 StubIDocumentFragment.Durability을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIDocumentFragment`1.AttachBackingFieldToExpiry">
            <summary>대리자를 연결하여 StubIDocumentFragment.Expiry을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentFragment`1.CasGet">
            <summary>IOperationResult.get_Cas()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentFragment`1.ContentInt32">
            <summary>IDocumentFragment.Content(Int32 index)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIDocumentFragment`1.ContentOf1Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,``0})">
            <summary>Content(Int32 index)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIDocumentFragment`1.ContentOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>Content(String path)의 스텁을 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentFragment`1.ContentString">
            <summary>IDocumentFragment.Content(String path)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIDocumentFragment`1.cnc::Couchbase#IDocumentFragment#Content(System.Int32)">
            <summary>IDocumentFragment.Content(Int32 index)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIDocumentFragment`1.cnc::Couchbase#IDocumentFragment#Content``1(System.Int32)">
            <summary>IDocumentFragment.Content(Int32 index)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIDocumentFragment`1.cnc::Couchbase#IDocumentFragment#Content(System.String)">
            <summary>IDocumentFragment.Content(String path)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIDocumentFragment`1.cnc::Couchbase#IDocumentFragment#Content``1(System.String)">
            <summary>IDocumentFragment.Content(String path)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIDocumentFragment`1.cnc::Couchbase#IDocumentFragment#Count">
            <summary>IDocumentFragment.Count()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIDocumentFragment`1.cnc::Couchbase#IDocumentFragment#Exists(System.String)">
            <summary>IDocumentFragment.Exists(String path)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIDocumentFragment`1.cnc::Couchbase#IDocumentFragment#OpStatus(System.Int32)">
            <summary>IDocumentFragment.OpStatus(Int32 index)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIDocumentFragment`1.cnc::Couchbase#IDocumentFragment#OpStatus(System.String)">
            <summary>IDocumentFragment.OpStatus(String path)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIDocumentFragment`1.cnc::Couchbase#IOperationResult#IsNmv">
            <summary>IOperationResult.IsNmv()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIDocumentFragment`1.cnc::Couchbase#IResult#ShouldRetry">
            <summary>IResult.ShouldRetry()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentFragment`1.Count">
            <summary>IDocumentFragment.Count()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentFragment`1.DurabilityGet">
            <summary>IOperationResult.get_Durability()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentFragment`1.DurabilitySetDurability">
            <summary>IOperationResult.set_Durability(Durability value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentFragment`1.ExceptionGet">
            <summary>IResult.get_Exception()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentFragment`1.ExistsString">
            <summary>IDocumentFragment.Exists(String path)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentFragment`1.ExpiryGet">
            <summary>IDocumentFragment`1.get_Expiry()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentFragment`1.ExpirySetUInt32">
            <summary>IDocumentFragment`1.set_Expiry(UInt32 value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentFragment`1.IdGet">
            <summary>IOperationResult.get_Id()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentFragment`1.IsNmv">
            <summary>IOperationResult.IsNmv()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentFragment`1.MessageGet">
            <summary>IResult.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentFragment`1.OpCodeGet">
            <summary>IOperationResult.get_OpCode()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentFragment`1.OpStatusInt32">
            <summary>IDocumentFragment.OpStatus(Int32 index)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentFragment`1.OpStatusString">
            <summary>IDocumentFragment.OpStatus(String path)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentFragment`1.ShouldRetry">
            <summary>IResult.ShouldRetry()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentFragment`1.StatusGet">
            <summary>IOperationResult.get_Status()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentFragment`1.SuccessGet">
            <summary>IResult.get_Success()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentFragment`1.TokenGet">
            <summary>IOperationResult.get_Token()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentFragment`1.ValueGet">
            <summary>IOperationResult`1.get_Value()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIDocumentFragment`1.cnc::Couchbase#IOperationResult#Cas">
            <summary>IOperationResult.get_Cas()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIDocumentFragment`1.cnc::Couchbase#IOperationResult#Durability">
            <summary>IOperationResult.get_Durability()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIDocumentFragment`1.cnc::Couchbase#IResult#Exception">
            <summary>IResult.get_Exception()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIDocumentFragment`1.cnc::Couchbase#IDocumentFragment{TDocument}#Expiry">
            <summary>IDocumentFragment`1.get_Expiry()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIDocumentFragment`1.cnc::Couchbase#IOperationResult#Id">
            <summary>IOperationResult.get_Id()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIDocumentFragment`1.cnc::Couchbase#IResult#Message">
            <summary>IResult.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIDocumentFragment`1.cnc::Couchbase#IOperationResult#OpCode">
            <summary>IOperationResult.get_OpCode()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIDocumentFragment`1.cnc::Couchbase#IOperationResult#Status">
            <summary>IOperationResult.get_Status()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIDocumentFragment`1.cnc::Couchbase#IResult#Success">
            <summary>IResult.get_Success()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIDocumentFragment`1.cnc::Couchbase#IOperationResult#Token">
            <summary>IOperationResult.get_Token()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIDocumentFragment`1.cnc::Couchbase#IOperationResult{TDocument}#Value">
            <summary>IOperationResult`1.get_Value()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.StubIDocumentResult">
            <summary>Couchbase.IDocumentResult의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIDocumentResult.#ctor">
            <summary>type StubIDocumentResult의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIDocumentResult.cnc::Couchbase#IResult#ShouldRetry">
            <summary>IResult.ShouldRetry()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentResult.ExceptionGet">
            <summary>IResult.get_Exception()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentResult.IdGet">
            <summary>IDocumentResult.get_Id()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentResult.MessageGet">
            <summary>IResult.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentResult.ShouldRetry">
            <summary>IResult.ShouldRetry()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentResult.StatusGet">
            <summary>IDocumentResult.get_Status()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentResult.SuccessGet">
            <summary>IResult.get_Success()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIDocumentResult.cnc::Couchbase#IResult#Exception">
            <summary>IResult.get_Exception()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIDocumentResult.cnc::Couchbase#IDocumentResult#Id">
            <summary>IDocumentResult.get_Id()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIDocumentResult.cnc::Couchbase#IResult#Message">
            <summary>IResult.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIDocumentResult.cnc::Couchbase#IDocumentResult#Status">
            <summary>IDocumentResult.get_Status()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIDocumentResult.cnc::Couchbase#IResult#Success">
            <summary>IResult.get_Success()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.StubIDocumentResult`1">
            <summary>Couchbase.IDocumentResult`1의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIDocumentResult`1.#ctor">
            <summary>type StubIDocumentResult의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentResult`1.ContentGet">
            <summary>IDocumentResult`1.get_Content()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIDocumentResult`1.cnc::Couchbase#IResult#ShouldRetry">
            <summary>IResult.ShouldRetry()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentResult`1.DocumentGet">
            <summary>IDocumentResult`1.get_Document()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentResult`1.ExceptionGet">
            <summary>IResult.get_Exception()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentResult`1.IdGet">
            <summary>IDocumentResult.get_Id()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentResult`1.MessageGet">
            <summary>IResult.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentResult`1.ShouldRetry">
            <summary>IResult.ShouldRetry()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentResult`1.StatusGet">
            <summary>IDocumentResult.get_Status()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIDocumentResult`1.SuccessGet">
            <summary>IResult.get_Success()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIDocumentResult`1.cnc::Couchbase#IDocumentResult{T}#Content">
            <summary>IDocumentResult`1.get_Content()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIDocumentResult`1.cnc::Couchbase#IDocumentResult{T}#Document">
            <summary>IDocumentResult`1.get_Document()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIDocumentResult`1.cnc::Couchbase#IResult#Exception">
            <summary>IResult.get_Exception()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIDocumentResult`1.cnc::Couchbase#IDocumentResult#Id">
            <summary>IDocumentResult.get_Id()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIDocumentResult`1.cnc::Couchbase#IResult#Message">
            <summary>IResult.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIDocumentResult`1.cnc::Couchbase#IDocumentResult#Status">
            <summary>IDocumentResult.get_Status()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIDocumentResult`1.cnc::Couchbase#IResult#Success">
            <summary>IResult.get_Success()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.StubIOperationResult">
            <summary>Couchbase.IOperationResult의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIOperationResult.#ctor">
            <summary>type StubIOperationResult의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIOperationResult.AttachBackingFieldToDurability">
            <summary>대리자를 연결하여 StubIOperationResult.Durability을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIOperationResult.CasGet">
            <summary>IOperationResult.get_Cas()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIOperationResult.cnc::Couchbase#IOperationResult#IsNmv">
            <summary>IOperationResult.IsNmv()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIOperationResult.cnc::Couchbase#IResult#ShouldRetry">
            <summary>IResult.ShouldRetry()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIOperationResult.DurabilityGet">
            <summary>IOperationResult.get_Durability()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIOperationResult.DurabilitySetDurability">
            <summary>IOperationResult.set_Durability(Durability value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIOperationResult.ExceptionGet">
            <summary>IResult.get_Exception()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIOperationResult.IdGet">
            <summary>IOperationResult.get_Id()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIOperationResult.IsNmv">
            <summary>IOperationResult.IsNmv()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIOperationResult.MessageGet">
            <summary>IResult.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIOperationResult.OpCodeGet">
            <summary>IOperationResult.get_OpCode()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIOperationResult.ShouldRetry">
            <summary>IResult.ShouldRetry()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIOperationResult.StatusGet">
            <summary>IOperationResult.get_Status()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIOperationResult.SuccessGet">
            <summary>IResult.get_Success()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIOperationResult.TokenGet">
            <summary>IOperationResult.get_Token()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIOperationResult.cnc::Couchbase#IOperationResult#Cas">
            <summary>IOperationResult.get_Cas()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIOperationResult.cnc::Couchbase#IOperationResult#Durability">
            <summary>IOperationResult.get_Durability()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIOperationResult.cnc::Couchbase#IResult#Exception">
            <summary>IResult.get_Exception()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIOperationResult.cnc::Couchbase#IOperationResult#Id">
            <summary>IOperationResult.get_Id()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIOperationResult.cnc::Couchbase#IResult#Message">
            <summary>IResult.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIOperationResult.cnc::Couchbase#IOperationResult#OpCode">
            <summary>IOperationResult.get_OpCode()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIOperationResult.cnc::Couchbase#IOperationResult#Status">
            <summary>IOperationResult.get_Status()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIOperationResult.cnc::Couchbase#IResult#Success">
            <summary>IResult.get_Success()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIOperationResult.cnc::Couchbase#IOperationResult#Token">
            <summary>IOperationResult.get_Token()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.StubIOperationResult`1">
            <summary>Couchbase.IOperationResult`1의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIOperationResult`1.#ctor">
            <summary>type StubIOperationResult의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIOperationResult`1.AttachBackingFieldToDurability">
            <summary>대리자를 연결하여 StubIOperationResult.Durability을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIOperationResult`1.CasGet">
            <summary>IOperationResult.get_Cas()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIOperationResult`1.cnc::Couchbase#IOperationResult#IsNmv">
            <summary>IOperationResult.IsNmv()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIOperationResult`1.cnc::Couchbase#IResult#ShouldRetry">
            <summary>IResult.ShouldRetry()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIOperationResult`1.DurabilityGet">
            <summary>IOperationResult.get_Durability()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIOperationResult`1.DurabilitySetDurability">
            <summary>IOperationResult.set_Durability(Durability value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIOperationResult`1.ExceptionGet">
            <summary>IResult.get_Exception()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIOperationResult`1.IdGet">
            <summary>IOperationResult.get_Id()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIOperationResult`1.IsNmv">
            <summary>IOperationResult.IsNmv()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIOperationResult`1.MessageGet">
            <summary>IResult.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIOperationResult`1.OpCodeGet">
            <summary>IOperationResult.get_OpCode()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIOperationResult`1.ShouldRetry">
            <summary>IResult.ShouldRetry()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIOperationResult`1.StatusGet">
            <summary>IOperationResult.get_Status()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIOperationResult`1.SuccessGet">
            <summary>IResult.get_Success()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIOperationResult`1.TokenGet">
            <summary>IOperationResult.get_Token()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIOperationResult`1.ValueGet">
            <summary>IOperationResult`1.get_Value()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIOperationResult`1.cnc::Couchbase#IOperationResult#Cas">
            <summary>IOperationResult.get_Cas()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIOperationResult`1.cnc::Couchbase#IOperationResult#Durability">
            <summary>IOperationResult.get_Durability()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIOperationResult`1.cnc::Couchbase#IResult#Exception">
            <summary>IResult.get_Exception()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIOperationResult`1.cnc::Couchbase#IOperationResult#Id">
            <summary>IOperationResult.get_Id()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIOperationResult`1.cnc::Couchbase#IResult#Message">
            <summary>IResult.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIOperationResult`1.cnc::Couchbase#IOperationResult#OpCode">
            <summary>IOperationResult.get_OpCode()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIOperationResult`1.cnc::Couchbase#IOperationResult#Status">
            <summary>IOperationResult.get_Status()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIOperationResult`1.cnc::Couchbase#IResult#Success">
            <summary>IResult.get_Success()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIOperationResult`1.cnc::Couchbase#IOperationResult#Token">
            <summary>IOperationResult.get_Token()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIOperationResult`1.cnc::Couchbase#IOperationResult{T}#Value">
            <summary>IOperationResult`1.get_Value()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.StubIQueryCacheInvalidator">
            <summary>Couchbase.IQueryCacheInvalidator의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIQueryCacheInvalidator.#ctor">
            <summary>type StubIQueryCacheInvalidator의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIQueryCacheInvalidator.cnc::Couchbase#IQueryCacheInvalidator#InvalidateQueryCache">
            <summary>IQueryCacheInvalidator.InvalidateQueryCache()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIQueryCacheInvalidator.InvalidateQueryCache">
            <summary>IQueryCacheInvalidator.InvalidateQueryCache()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.StubIResult">
            <summary>Couchbase.IResult의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIResult.#ctor">
            <summary>type StubIResult의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIResult.cnc::Couchbase#IResult#ShouldRetry">
            <summary>IResult.ShouldRetry()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIResult.ExceptionGet">
            <summary>IResult.get_Exception()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIResult.MessageGet">
            <summary>IResult.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIResult.ShouldRetry">
            <summary>IResult.ShouldRetry()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIResult.SuccessGet">
            <summary>IResult.get_Success()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIResult.cnc::Couchbase#IResult#Exception">
            <summary>IResult.get_Exception()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIResult.cnc::Couchbase#IResult#Message">
            <summary>IResult.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIResult.cnc::Couchbase#IResult#Success">
            <summary>IResult.get_Success()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.StubIResult`1">
            <summary>Couchbase.IResult`1의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIResult`1.#ctor">
            <summary>type StubIResult의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubIResult`1.cnc::Couchbase#IResult#ShouldRetry">
            <summary>IResult.ShouldRetry()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIResult`1.ExceptionGet">
            <summary>IResult.get_Exception()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIResult`1.MessageGet">
            <summary>IResult.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIResult`1.ShouldRetry">
            <summary>IResult.ShouldRetry()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIResult`1.SuccessGet">
            <summary>IResult.get_Success()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubIResult`1.ValueGet">
            <summary>IResult`1.get_Value()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIResult`1.cnc::Couchbase#IResult#Exception">
            <summary>IResult.get_Exception()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIResult`1.cnc::Couchbase#IResult#Message">
            <summary>IResult.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIResult`1.cnc::Couchbase#IResult#Success">
            <summary>IResult.get_Success()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubIResult`1.cnc::Couchbase#IResult{T}#Value">
            <summary>IResult`1.get_Value()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.StubNullConfigException">
            <summary>Couchbase.NullConfigException의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubNullConfigException.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubNullConfigException.#ctor(System.String)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubNullConfigException.#ctor(System.String,System.Exception)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubNullConfigException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubNullConfigException.AttachBackingFieldToHelpLink">
            <summary>대리자를 연결하여 StubNullConfigException.HelpLink을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubNullConfigException.AttachBackingFieldToSource">
            <summary>대리자를 연결하여 StubNullConfigException.Source을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubNullConfigException.DataGet">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubNullConfigException.GetBaseException">
            <summary>Exception.GetBaseException()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubNullConfigException.GetBaseException01">
            <summary>Exception.GetBaseException()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubNullConfigException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Exception.GetObjectData(SerializationInfo info, StreamingContext context)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubNullConfigException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Exception.GetObjectData(SerializationInfo info, StreamingContext context)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubNullConfigException.HelpLinkGet">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubNullConfigException.HelpLinkSetString">
            <summary>Exception.set_HelpLink(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubNullConfigException.InitializeStub">
            <summary>type StubNullConfigException의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubNullConfigException.MessageGet">
            <summary>Exception.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubNullConfigException.SourceGet">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubNullConfigException.SourceSetString">
            <summary>Exception.set_Source(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubNullConfigException.StackTraceGet">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubNullConfigException.ToString">
            <summary>Exception.ToString()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubNullConfigException.ToString01">
            <summary>Exception.ToString()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubNullConfigException.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubNullConfigException.Data">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubNullConfigException.HelpLink">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubNullConfigException.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubNullConfigException.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubNullConfigException.Message">
            <summary>Exception.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubNullConfigException.Source">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubNullConfigException.StackTrace">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.StubOperationResult">
            <summary>Couchbase.OperationResult의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubOperationResult.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubOperationResult.InitializeStub">
            <summary>type StubOperationResult의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubOperationResult.ToString">
            <summary>OperationResult.ToString()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubOperationResult.ToString01">
            <summary>OperationResult.ToString()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubOperationResult.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubOperationResult.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubOperationResult.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.StubOperationResult`1">
            <summary>Couchbase.OperationResult`1의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubOperationResult`1.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubOperationResult`1.InitializeStub">
            <summary>type StubOperationResult의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubOperationResult`1.ToString">
            <summary>OperationResult`1.ToString()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubOperationResult`1.ToString01">
            <summary>OperationResult`1.ToString()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubOperationResult`1.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubOperationResult`1.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubOperationResult`1.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Fakes.StubTemporaryLockFailureException">
            <summary>Couchbase.TemporaryLockFailureException의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubTemporaryLockFailureException.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubTemporaryLockFailureException.#ctor(System.String)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubTemporaryLockFailureException.#ctor(System.String,System.Exception)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubTemporaryLockFailureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubTemporaryLockFailureException.AttachBackingFieldToHelpLink">
            <summary>대리자를 연결하여 StubTemporaryLockFailureException.HelpLink을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubTemporaryLockFailureException.AttachBackingFieldToSource">
            <summary>대리자를 연결하여 StubTemporaryLockFailureException.Source을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubTemporaryLockFailureException.DataGet">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubTemporaryLockFailureException.GetBaseException">
            <summary>Exception.GetBaseException()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubTemporaryLockFailureException.GetBaseException01">
            <summary>Exception.GetBaseException()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubTemporaryLockFailureException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Exception.GetObjectData(SerializationInfo info, StreamingContext context)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubTemporaryLockFailureException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Exception.GetObjectData(SerializationInfo info, StreamingContext context)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubTemporaryLockFailureException.HelpLinkGet">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubTemporaryLockFailureException.HelpLinkSetString">
            <summary>Exception.set_HelpLink(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubTemporaryLockFailureException.InitializeStub">
            <summary>type StubTemporaryLockFailureException의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubTemporaryLockFailureException.MessageGet">
            <summary>Exception.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubTemporaryLockFailureException.SourceGet">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubTemporaryLockFailureException.SourceSetString">
            <summary>Exception.set_Source(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubTemporaryLockFailureException.StackTraceGet">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Fakes.StubTemporaryLockFailureException.ToString">
            <summary>Exception.ToString()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Fakes.StubTemporaryLockFailureException.ToString01">
            <summary>Exception.ToString()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubTemporaryLockFailureException.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubTemporaryLockFailureException.Data">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubTemporaryLockFailureException.HelpLink">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubTemporaryLockFailureException.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubTemporaryLockFailureException.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubTemporaryLockFailureException.Message">
            <summary>Exception.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubTemporaryLockFailureException.Source">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Fakes.StubTemporaryLockFailureException.StackTrace">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Converters.Fakes.ShimConverterFactory">
            <summary>Couchbase.IO.Converters.ConverterFactory의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.ShimConverterFactory.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.ShimConverterFactory.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.ShimConverterFactory.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimConverterFactory.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimConverterFactory.GetConverter">
            <summary>ConverterFactory.GetConverter()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimConverterFactory.GetConverterConverterElement">
            <summary>ConverterFactory.GetConverter(ConverterElement element)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimConverterFactory.GetConverterString">
            <summary>ConverterFactory.GetConverter(String typeName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Converters.Fakes.ShimDefaultConverter">
            <summary>Couchbase.IO.Converters.DefaultConverter의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.#ctor(Couchbase.IO.Converters.DefaultConverter)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.Bind(Couchbase.IO.Converters.IByteConverter)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.Constructor">
            <summary>DefaultConverter.DefaultConverter()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.CopyAndReverseByteArrayByteArrayRefInt32Int32">
            <summary>DefaultConverter.CopyAndReverse(Byte[] src, Byte[]&amp; dst, Int32 offset, Int32 length)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.CopyAndReverseByteArrayInt32Int32">
            <summary>DefaultConverter.CopyAndReverse(Byte[] src, Int32 offset, Int32 length)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.FromByteByteByteArrayInt32">
            <summary>DefaultConverter.FromByte(Byte value, Byte[] buffer, Int32 offset)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.FromInt16Int16ByteArrayInt32">
            <summary>DefaultConverter.FromInt16(Int16 value, Byte[] buffer, Int32 offset)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.FromInt32Int32ByteArrayInt32">
            <summary>DefaultConverter.FromInt32(Int32 value, Byte[] buffer, Int32 offset)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.FromInt64Int64ByteArrayInt32">
            <summary>DefaultConverter.FromInt64(Int64 value, Byte[] buffer, Int32 offset)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.FromStringStringByteArrayInt32">
            <summary>DefaultConverter.FromString(String value, Byte[] buffer, Int32 offset)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.FromUInt16UInt16ByteArrayInt32">
            <summary>DefaultConverter.FromUInt16(UInt16 value, Byte[] buffer, Int32 offset)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.FromUInt32UInt32ByteArrayInt32">
            <summary>DefaultConverter.FromUInt32(UInt32 value, Byte[] buffer, Int32 offset)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.FromUInt64UInt64ByteArrayInt32">
            <summary>DefaultConverter.FromUInt64(UInt64 value, Byte[] buffer, Int32 offset)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.GetBitByteInt32">
            <summary>DefaultConverter.GetBit(Byte theByte, Int32 position)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.ToBooleanByteArrayInt32Boolean">
            <summary>DefaultConverter.ToBoolean(Byte[] buffer, Int32 offset, Boolean useNbo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.ToByteByteArrayInt32">
            <summary>DefaultConverter.ToByte(Byte[] buffer, Int32 offset)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.ToDateTimeByteArrayInt32Boolean">
            <summary>DefaultConverter.ToDateTime(Byte[] buffer, Int32 offset, Boolean useNbo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.ToDoubleByteArrayInt32Boolean">
            <summary>DefaultConverter.ToDouble(Byte[] buffer, Int32 offset, Boolean useNbo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.ToInt16ByteArrayInt32">
            <summary>DefaultConverter.ToInt16(Byte[] buffer, Int32 offset)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.ToInt16ByteArrayInt32Boolean">
            <summary>DefaultConverter.ToInt16(Byte[] buffer, Int32 offset, Boolean useNbo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.ToInt32ByteArrayInt32">
            <summary>DefaultConverter.ToInt32(Byte[] buffer, Int32 offset)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.ToInt32ByteArrayInt32Boolean">
            <summary>DefaultConverter.ToInt32(Byte[] buffer, Int32 offset, Boolean useNbo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.ToInt64ByteArrayInt32">
            <summary>DefaultConverter.ToInt64(Byte[] buffer, Int32 offset)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.ToInt64ByteArrayInt32Boolean">
            <summary>DefaultConverter.ToInt64(Byte[] buffer, Int32 offset, Boolean useNbo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.ToSingleByteArrayInt32Boolean">
            <summary>DefaultConverter.ToSingle(Byte[] buffer, Int32 offset, Boolean useNbo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.ToStringByteArrayInt32Int32">
            <summary>DefaultConverter.ToString(Byte[] buffer, Int32 offset, Int32 length)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.ToUInt16ByteArrayInt32">
            <summary>DefaultConverter.ToUInt16(Byte[] buffer, Int32 offset)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.ToUInt16ByteArrayInt32Boolean">
            <summary>DefaultConverter.ToUInt16(Byte[] buffer, Int32 offset, Boolean useNbo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.ToUInt32ByteArrayInt32">
            <summary>DefaultConverter.ToUInt32(Byte[] buffer, Int32 offset)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.ToUInt32ByteArrayInt32Boolean">
            <summary>DefaultConverter.ToUInt32(Byte[] buffer, Int32 offset, Boolean useNbo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.ToUInt64ByteArrayInt32">
            <summary>DefaultConverter.ToUInt64(Byte[] buffer, Int32 offset)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.ToUInt64ByteArrayInt32Boolean">
            <summary>DefaultConverter.ToUInt64(Byte[] buffer, Int32 offset, Boolean useNbo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.AllInstances.FromByteByteByteArrayInt32">
            <summary>DefaultConverter.FromByte(Byte value, Byte[] buffer, Int32 offset)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.AllInstances.FromByteByteByteArrayRefInt32">
            <summary>DefaultConverter.FromByte(Byte value, Byte[]&amp; buffer, Int32 offset)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.AllInstances.FromInt16Int16ByteArrayInt32">
            <summary>DefaultConverter.FromInt16(Int16 value, Byte[] buffer, Int32 offset)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.AllInstances.FromInt16Int16ByteArrayRefInt32">
            <summary>DefaultConverter.FromInt16(Int16 value, Byte[]&amp; buffer, Int32 offset)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.AllInstances.FromInt16Int16ByteArrayRefInt32Boolean">
            <summary>DefaultConverter.FromInt16(Int16 value, Byte[]&amp; buffer, Int32 offset, Boolean useNbo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.AllInstances.FromInt32Int32ByteArrayInt32">
            <summary>DefaultConverter.FromInt32(Int32 value, Byte[] buffer, Int32 offset)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.AllInstances.FromInt32Int32ByteArrayRefInt32">
            <summary>DefaultConverter.FromInt32(Int32 value, Byte[]&amp; buffer, Int32 offset)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.AllInstances.FromInt32Int32ByteArrayRefInt32Boolean">
            <summary>DefaultConverter.FromInt32(Int32 value, Byte[]&amp; buffer, Int32 offset, Boolean useNbo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.AllInstances.FromInt64Int64ByteArrayInt32">
            <summary>DefaultConverter.FromInt64(Int64 value, Byte[] buffer, Int32 offset)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.AllInstances.FromInt64Int64ByteArrayRefInt32">
            <summary>DefaultConverter.FromInt64(Int64 value, Byte[]&amp; buffer, Int32 offset)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.AllInstances.FromInt64Int64ByteArrayRefInt32Boolean">
            <summary>DefaultConverter.FromInt64(Int64 value, Byte[]&amp; buffer, Int32 offset, Boolean useNbo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.AllInstances.FromStringStringByteArrayInt32">
            <summary>DefaultConverter.FromString(String value, Byte[] buffer, Int32 offset)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.AllInstances.FromStringStringByteArrayRefInt32">
            <summary>DefaultConverter.FromString(String value, Byte[]&amp; buffer, Int32 offset)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.AllInstances.FromUInt16UInt16ByteArrayInt32">
            <summary>DefaultConverter.FromUInt16(UInt16 value, Byte[] buffer, Int32 offset)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.AllInstances.FromUInt16UInt16ByteArrayRefInt32">
            <summary>DefaultConverter.FromUInt16(UInt16 value, Byte[]&amp; buffer, Int32 offset)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.AllInstances.FromUInt16UInt16ByteArrayRefInt32Boolean">
            <summary>DefaultConverter.FromUInt16(UInt16 value, Byte[]&amp; buffer, Int32 offset, Boolean useNbo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.AllInstances.FromUInt32UInt32ByteArrayInt32">
            <summary>DefaultConverter.FromUInt32(UInt32 value, Byte[] buffer, Int32 offset)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.AllInstances.FromUInt32UInt32ByteArrayRefInt32">
            <summary>DefaultConverter.FromUInt32(UInt32 value, Byte[]&amp; buffer, Int32 offset)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.AllInstances.FromUInt32UInt32ByteArrayRefInt32Boolean">
            <summary>DefaultConverter.FromUInt32(UInt32 value, Byte[]&amp; buffer, Int32 offset, Boolean useNbo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.AllInstances.FromUInt64UInt64ByteArrayInt32">
            <summary>DefaultConverter.FromUInt64(UInt64 value, Byte[] buffer, Int32 offset)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.AllInstances.FromUInt64UInt64ByteArrayRefInt32">
            <summary>DefaultConverter.FromUInt64(UInt64 value, Byte[]&amp; buffer, Int32 offset)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.AllInstances.FromUInt64UInt64ByteArrayRefInt32Boolean">
            <summary>DefaultConverter.FromUInt64(UInt64 value, Byte[]&amp; buffer, Int32 offset, Boolean useNbo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.AllInstances.GetBitByteInt32">
            <summary>DefaultConverter.GetBit(Byte theByte, Int32 position)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.AllInstances.SetBitByteRefInt32Boolean">
            <summary>DefaultConverter.SetBit(Byte&amp; theByte, Int32 position, Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.AllInstances.ToBooleanByteArrayInt32Boolean">
            <summary>DefaultConverter.ToBoolean(Byte[] buffer, Int32 offset, Boolean useNbo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.AllInstances.ToByteByteArrayInt32">
            <summary>DefaultConverter.ToByte(Byte[] buffer, Int32 offset)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.AllInstances.ToDateTimeByteArrayInt32Boolean">
            <summary>DefaultConverter.ToDateTime(Byte[] buffer, Int32 offset, Boolean useNbo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.AllInstances.ToDoubleByteArrayInt32Boolean">
            <summary>DefaultConverter.ToDouble(Byte[] buffer, Int32 offset, Boolean useNbo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.AllInstances.ToInt16ByteArrayInt32">
            <summary>DefaultConverter.ToInt16(Byte[] buffer, Int32 offset)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.AllInstances.ToInt16ByteArrayInt32Boolean">
            <summary>DefaultConverter.ToInt16(Byte[] buffer, Int32 offset, Boolean useNbo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.AllInstances.ToInt32ByteArrayInt32">
            <summary>DefaultConverter.ToInt32(Byte[] buffer, Int32 offset)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.AllInstances.ToInt32ByteArrayInt32Boolean">
            <summary>DefaultConverter.ToInt32(Byte[] buffer, Int32 offset, Boolean useNbo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.AllInstances.ToInt64ByteArrayInt32">
            <summary>DefaultConverter.ToInt64(Byte[] buffer, Int32 offset)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.AllInstances.ToInt64ByteArrayInt32Boolean">
            <summary>DefaultConverter.ToInt64(Byte[] buffer, Int32 offset, Boolean useNbo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.AllInstances.ToSingleByteArrayInt32Boolean">
            <summary>DefaultConverter.ToSingle(Byte[] buffer, Int32 offset, Boolean useNbo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.AllInstances.ToStringByteArrayInt32Int32">
            <summary>DefaultConverter.ToString(Byte[] buffer, Int32 offset, Int32 length)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.AllInstances.ToUInt16ByteArrayInt32">
            <summary>DefaultConverter.ToUInt16(Byte[] buffer, Int32 offset)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.AllInstances.ToUInt16ByteArrayInt32Boolean">
            <summary>DefaultConverter.ToUInt16(Byte[] buffer, Int32 offset, Boolean useNbo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.AllInstances.ToUInt32ByteArrayInt32">
            <summary>DefaultConverter.ToUInt32(Byte[] buffer, Int32 offset)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.AllInstances.ToUInt32ByteArrayInt32Boolean">
            <summary>DefaultConverter.ToUInt32(Byte[] buffer, Int32 offset, Boolean useNbo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.AllInstances.ToUInt64ByteArrayInt32">
            <summary>DefaultConverter.ToUInt64(Byte[] buffer, Int32 offset)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Converters.Fakes.ShimDefaultConverter.AllInstances.ToUInt64ByteArrayInt32Boolean">
            <summary>DefaultConverter.ToUInt64(Byte[] buffer, Int32 offset, Boolean useNbo)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Converters.Fakes.StubIByteConverter">
            <summary>Couchbase.IO.Converters.IByteConverter의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.StubIByteConverter.#ctor">
            <summary>type StubIByteConverter의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.StubIByteConverter.cnc::Couchbase#IO#Converters#IByteConverter#FromByte(System.Byte,System.Byte[]@,System.Int32)">
            <summary>IByteConverter.FromByte(Byte value, Byte[]&amp; buffer, Int32 offset)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.StubIByteConverter.cnc::Couchbase#IO#Converters#IByteConverter#FromByte(System.Byte,System.Byte[],System.Int32)">
            <summary>IByteConverter.FromByte(Byte value, Byte[] buffer, Int32 offset)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.StubIByteConverter.cnc::Couchbase#IO#Converters#IByteConverter#FromInt16(System.Int16,System.Byte[]@,System.Int32)">
            <summary>IByteConverter.FromInt16(Int16 value, Byte[]&amp; buffer, Int32 offset)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.StubIByteConverter.cnc::Couchbase#IO#Converters#IByteConverter#FromInt16(System.Int16,System.Byte[],System.Int32)">
            <summary>IByteConverter.FromInt16(Int16 value, Byte[] buffer, Int32 offset)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.StubIByteConverter.cnc::Couchbase#IO#Converters#IByteConverter#FromInt16(System.Int16,System.Byte[]@,System.Int32,System.Boolean)">
            <summary>IByteConverter.FromInt16(Int16 value, Byte[]&amp; buffer, Int32 offset, Boolean useNbo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.StubIByteConverter.cnc::Couchbase#IO#Converters#IByteConverter#FromInt32(System.Int32,System.Byte[]@,System.Int32)">
            <summary>IByteConverter.FromInt32(Int32 value, Byte[]&amp; buffer, Int32 offset)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.StubIByteConverter.cnc::Couchbase#IO#Converters#IByteConverter#FromInt32(System.Int32,System.Byte[],System.Int32)">
            <summary>IByteConverter.FromInt32(Int32 value, Byte[] buffer, Int32 offset)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.StubIByteConverter.cnc::Couchbase#IO#Converters#IByteConverter#FromInt32(System.Int32,System.Byte[]@,System.Int32,System.Boolean)">
            <summary>IByteConverter.FromInt32(Int32 value, Byte[]&amp; buffer, Int32 offset, Boolean useNbo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.StubIByteConverter.cnc::Couchbase#IO#Converters#IByteConverter#FromInt64(System.Int64,System.Byte[],System.Int32)">
            <summary>IByteConverter.FromInt64(Int64 value, Byte[] buffer, Int32 offset)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.StubIByteConverter.cnc::Couchbase#IO#Converters#IByteConverter#FromInt64(System.Int64,System.Byte[]@,System.Int32)">
            <summary>IByteConverter.FromInt64(Int64 value, Byte[]&amp; buffer, Int32 offset)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.StubIByteConverter.cnc::Couchbase#IO#Converters#IByteConverter#FromInt64(System.Int64,System.Byte[]@,System.Int32,System.Boolean)">
            <summary>IByteConverter.FromInt64(Int64 value, Byte[]&amp; buffer, Int32 offset, Boolean useNbo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.StubIByteConverter.cnc::Couchbase#IO#Converters#IByteConverter#FromString(System.String,System.Byte[],System.Int32)">
            <summary>IByteConverter.FromString(String value, Byte[] buffer, Int32 offset)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.StubIByteConverter.cnc::Couchbase#IO#Converters#IByteConverter#FromString(System.String,System.Byte[]@,System.Int32)">
            <summary>IByteConverter.FromString(String value, Byte[]&amp; buffer, Int32 offset)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.StubIByteConverter.cnc::Couchbase#IO#Converters#IByteConverter#FromUInt16(System.UInt16,System.Byte[]@,System.Int32)">
            <summary>IByteConverter.FromUInt16(UInt16 value, Byte[]&amp; buffer, Int32 offset)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.StubIByteConverter.cnc::Couchbase#IO#Converters#IByteConverter#FromUInt16(System.UInt16,System.Byte[],System.Int32)">
            <summary>IByteConverter.FromUInt16(UInt16 value, Byte[] buffer, Int32 offset)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.StubIByteConverter.cnc::Couchbase#IO#Converters#IByteConverter#FromUInt16(System.UInt16,System.Byte[]@,System.Int32,System.Boolean)">
            <summary>IByteConverter.FromUInt16(UInt16 value, Byte[]&amp; buffer, Int32 offset, Boolean useNbo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.StubIByteConverter.cnc::Couchbase#IO#Converters#IByteConverter#FromUInt32(System.UInt32,System.Byte[]@,System.Int32)">
            <summary>IByteConverter.FromUInt32(UInt32 value, Byte[]&amp; buffer, Int32 offset)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.StubIByteConverter.cnc::Couchbase#IO#Converters#IByteConverter#FromUInt32(System.UInt32,System.Byte[],System.Int32)">
            <summary>IByteConverter.FromUInt32(UInt32 value, Byte[] buffer, Int32 offset)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.StubIByteConverter.cnc::Couchbase#IO#Converters#IByteConverter#FromUInt32(System.UInt32,System.Byte[]@,System.Int32,System.Boolean)">
            <summary>IByteConverter.FromUInt32(UInt32 value, Byte[]&amp; buffer, Int32 offset, Boolean useNbo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.StubIByteConverter.cnc::Couchbase#IO#Converters#IByteConverter#FromUInt64(System.UInt64,System.Byte[],System.Int32)">
            <summary>IByteConverter.FromUInt64(UInt64 value, Byte[] buffer, Int32 offset)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.StubIByteConverter.cnc::Couchbase#IO#Converters#IByteConverter#FromUInt64(System.UInt64,System.Byte[]@,System.Int32)">
            <summary>IByteConverter.FromUInt64(UInt64 value, Byte[]&amp; buffer, Int32 offset)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.StubIByteConverter.cnc::Couchbase#IO#Converters#IByteConverter#FromUInt64(System.UInt64,System.Byte[]@,System.Int32,System.Boolean)">
            <summary>IByteConverter.FromUInt64(UInt64 value, Byte[]&amp; buffer, Int32 offset, Boolean useNbo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.StubIByteConverter.cnc::Couchbase#IO#Converters#IByteConverter#GetBit(System.Byte,System.Int32)">
            <summary>IByteConverter.GetBit(Byte theByte, Int32 position)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.StubIByteConverter.cnc::Couchbase#IO#Converters#IByteConverter#SetBit(System.Byte@,System.Int32,System.Boolean)">
            <summary>IByteConverter.SetBit(Byte&amp; theByte, Int32 position, Boolean value)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.StubIByteConverter.cnc::Couchbase#IO#Converters#IByteConverter#ToBoolean(System.Byte[],System.Int32,System.Boolean)">
            <summary>IByteConverter.ToBoolean(Byte[] buffer, Int32 offset, Boolean useNbo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.StubIByteConverter.cnc::Couchbase#IO#Converters#IByteConverter#ToByte(System.Byte[],System.Int32)">
            <summary>IByteConverter.ToByte(Byte[] buffer, Int32 offset)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.StubIByteConverter.cnc::Couchbase#IO#Converters#IByteConverter#ToDateTime(System.Byte[],System.Int32,System.Boolean)">
            <summary>IByteConverter.ToDateTime(Byte[] buffer, Int32 offset, Boolean useNbo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.StubIByteConverter.cnc::Couchbase#IO#Converters#IByteConverter#ToDouble(System.Byte[],System.Int32,System.Boolean)">
            <summary>IByteConverter.ToDouble(Byte[] buffer, Int32 offset, Boolean useNbo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.StubIByteConverter.cnc::Couchbase#IO#Converters#IByteConverter#ToInt16(System.Byte[],System.Int32)">
            <summary>IByteConverter.ToInt16(Byte[] buffer, Int32 offset)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.StubIByteConverter.cnc::Couchbase#IO#Converters#IByteConverter#ToInt16(System.Byte[],System.Int32,System.Boolean)">
            <summary>IByteConverter.ToInt16(Byte[] buffer, Int32 offset, Boolean useNbo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.StubIByteConverter.cnc::Couchbase#IO#Converters#IByteConverter#ToInt32(System.Byte[],System.Int32)">
            <summary>IByteConverter.ToInt32(Byte[] buffer, Int32 offset)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.StubIByteConverter.cnc::Couchbase#IO#Converters#IByteConverter#ToInt32(System.Byte[],System.Int32,System.Boolean)">
            <summary>IByteConverter.ToInt32(Byte[] buffer, Int32 offset, Boolean useNbo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.StubIByteConverter.cnc::Couchbase#IO#Converters#IByteConverter#ToInt64(System.Byte[],System.Int32)">
            <summary>IByteConverter.ToInt64(Byte[] buffer, Int32 offset)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.StubIByteConverter.cnc::Couchbase#IO#Converters#IByteConverter#ToInt64(System.Byte[],System.Int32,System.Boolean)">
            <summary>IByteConverter.ToInt64(Byte[] buffer, Int32 offset, Boolean useNbo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.StubIByteConverter.cnc::Couchbase#IO#Converters#IByteConverter#ToSingle(System.Byte[],System.Int32,System.Boolean)">
            <summary>IByteConverter.ToSingle(Byte[] buffer, Int32 offset, Boolean useNbo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.StubIByteConverter.cnc::Couchbase#IO#Converters#IByteConverter#ToString(System.Byte[],System.Int32,System.Int32)">
            <summary>IByteConverter.ToString(Byte[] buffer, Int32 offset, Int32 length)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.StubIByteConverter.cnc::Couchbase#IO#Converters#IByteConverter#ToUInt16(System.Byte[],System.Int32)">
            <summary>IByteConverter.ToUInt16(Byte[] buffer, Int32 offset)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.StubIByteConverter.cnc::Couchbase#IO#Converters#IByteConverter#ToUInt16(System.Byte[],System.Int32,System.Boolean)">
            <summary>IByteConverter.ToUInt16(Byte[] buffer, Int32 offset, Boolean useNbo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.StubIByteConverter.cnc::Couchbase#IO#Converters#IByteConverter#ToUInt32(System.Byte[],System.Int32)">
            <summary>IByteConverter.ToUInt32(Byte[] buffer, Int32 offset)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.StubIByteConverter.cnc::Couchbase#IO#Converters#IByteConverter#ToUInt32(System.Byte[],System.Int32,System.Boolean)">
            <summary>IByteConverter.ToUInt32(Byte[] buffer, Int32 offset, Boolean useNbo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.StubIByteConverter.cnc::Couchbase#IO#Converters#IByteConverter#ToUInt64(System.Byte[],System.Int32)">
            <summary>IByteConverter.ToUInt64(Byte[] buffer, Int32 offset)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Converters.Fakes.StubIByteConverter.cnc::Couchbase#IO#Converters#IByteConverter#ToUInt64(System.Byte[],System.Int32,System.Boolean)">
            <summary>IByteConverter.ToUInt64(Byte[] buffer, Int32 offset, Boolean useNbo)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Converters.Fakes.StubIByteConverter.FromByteByteByteArrayInt32">
            <summary>IByteConverter.FromByte(Byte value, Byte[] buffer, Int32 offset)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Converters.Fakes.StubIByteConverter.FromByteByteByteArrayRefInt32">
            <summary>IByteConverter.FromByte(Byte value, Byte[]&amp; buffer, Int32 offset)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Converters.Fakes.StubIByteConverter.FromInt16Int16ByteArrayInt32">
            <summary>IByteConverter.FromInt16(Int16 value, Byte[] buffer, Int32 offset)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Converters.Fakes.StubIByteConverter.FromInt16Int16ByteArrayRefInt32">
            <summary>IByteConverter.FromInt16(Int16 value, Byte[]&amp; buffer, Int32 offset)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Converters.Fakes.StubIByteConverter.FromInt16Int16ByteArrayRefInt32Boolean">
            <summary>IByteConverter.FromInt16(Int16 value, Byte[]&amp; buffer, Int32 offset, Boolean useNbo)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Converters.Fakes.StubIByteConverter.FromInt32Int32ByteArrayInt32">
            <summary>IByteConverter.FromInt32(Int32 value, Byte[] buffer, Int32 offset)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Converters.Fakes.StubIByteConverter.FromInt32Int32ByteArrayRefInt32">
            <summary>IByteConverter.FromInt32(Int32 value, Byte[]&amp; buffer, Int32 offset)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Converters.Fakes.StubIByteConverter.FromInt32Int32ByteArrayRefInt32Boolean">
            <summary>IByteConverter.FromInt32(Int32 value, Byte[]&amp; buffer, Int32 offset, Boolean useNbo)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Converters.Fakes.StubIByteConverter.FromInt64Int64ByteArrayInt32">
            <summary>IByteConverter.FromInt64(Int64 value, Byte[] buffer, Int32 offset)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Converters.Fakes.StubIByteConverter.FromInt64Int64ByteArrayRefInt32">
            <summary>IByteConverter.FromInt64(Int64 value, Byte[]&amp; buffer, Int32 offset)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Converters.Fakes.StubIByteConverter.FromInt64Int64ByteArrayRefInt32Boolean">
            <summary>IByteConverter.FromInt64(Int64 value, Byte[]&amp; buffer, Int32 offset, Boolean useNbo)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Converters.Fakes.StubIByteConverter.FromStringStringByteArrayInt32">
            <summary>IByteConverter.FromString(String value, Byte[] buffer, Int32 offset)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Converters.Fakes.StubIByteConverter.FromStringStringByteArrayRefInt32">
            <summary>IByteConverter.FromString(String value, Byte[]&amp; buffer, Int32 offset)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Converters.Fakes.StubIByteConverter.FromUInt16UInt16ByteArrayInt32">
            <summary>IByteConverter.FromUInt16(UInt16 value, Byte[] buffer, Int32 offset)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Converters.Fakes.StubIByteConverter.FromUInt16UInt16ByteArrayRefInt32">
            <summary>IByteConverter.FromUInt16(UInt16 value, Byte[]&amp; buffer, Int32 offset)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Converters.Fakes.StubIByteConverter.FromUInt16UInt16ByteArrayRefInt32Boolean">
            <summary>IByteConverter.FromUInt16(UInt16 value, Byte[]&amp; buffer, Int32 offset, Boolean useNbo)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Converters.Fakes.StubIByteConverter.FromUInt32UInt32ByteArrayInt32">
            <summary>IByteConverter.FromUInt32(UInt32 value, Byte[] buffer, Int32 offset)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Converters.Fakes.StubIByteConverter.FromUInt32UInt32ByteArrayRefInt32">
            <summary>IByteConverter.FromUInt32(UInt32 value, Byte[]&amp; buffer, Int32 offset)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Converters.Fakes.StubIByteConverter.FromUInt32UInt32ByteArrayRefInt32Boolean">
            <summary>IByteConverter.FromUInt32(UInt32 value, Byte[]&amp; buffer, Int32 offset, Boolean useNbo)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Converters.Fakes.StubIByteConverter.FromUInt64UInt64ByteArrayInt32">
            <summary>IByteConverter.FromUInt64(UInt64 value, Byte[] buffer, Int32 offset)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Converters.Fakes.StubIByteConverter.FromUInt64UInt64ByteArrayRefInt32">
            <summary>IByteConverter.FromUInt64(UInt64 value, Byte[]&amp; buffer, Int32 offset)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Converters.Fakes.StubIByteConverter.FromUInt64UInt64ByteArrayRefInt32Boolean">
            <summary>IByteConverter.FromUInt64(UInt64 value, Byte[]&amp; buffer, Int32 offset, Boolean useNbo)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Converters.Fakes.StubIByteConverter.GetBitByteInt32">
            <summary>IByteConverter.GetBit(Byte theByte, Int32 position)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Converters.Fakes.StubIByteConverter.SetBitByteRefInt32Boolean">
            <summary>IByteConverter.SetBit(Byte&amp; theByte, Int32 position, Boolean value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Converters.Fakes.StubIByteConverter.ToBooleanByteArrayInt32Boolean">
            <summary>IByteConverter.ToBoolean(Byte[] buffer, Int32 offset, Boolean useNbo)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Converters.Fakes.StubIByteConverter.ToByteByteArrayInt32">
            <summary>IByteConverter.ToByte(Byte[] buffer, Int32 offset)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Converters.Fakes.StubIByteConverter.ToDateTimeByteArrayInt32Boolean">
            <summary>IByteConverter.ToDateTime(Byte[] buffer, Int32 offset, Boolean useNbo)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Converters.Fakes.StubIByteConverter.ToDoubleByteArrayInt32Boolean">
            <summary>IByteConverter.ToDouble(Byte[] buffer, Int32 offset, Boolean useNbo)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Converters.Fakes.StubIByteConverter.ToInt16ByteArrayInt32">
            <summary>IByteConverter.ToInt16(Byte[] buffer, Int32 offset)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Converters.Fakes.StubIByteConverter.ToInt16ByteArrayInt32Boolean">
            <summary>IByteConverter.ToInt16(Byte[] buffer, Int32 offset, Boolean useNbo)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Converters.Fakes.StubIByteConverter.ToInt32ByteArrayInt32">
            <summary>IByteConverter.ToInt32(Byte[] buffer, Int32 offset)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Converters.Fakes.StubIByteConverter.ToInt32ByteArrayInt32Boolean">
            <summary>IByteConverter.ToInt32(Byte[] buffer, Int32 offset, Boolean useNbo)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Converters.Fakes.StubIByteConverter.ToInt64ByteArrayInt32">
            <summary>IByteConverter.ToInt64(Byte[] buffer, Int32 offset)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Converters.Fakes.StubIByteConverter.ToInt64ByteArrayInt32Boolean">
            <summary>IByteConverter.ToInt64(Byte[] buffer, Int32 offset, Boolean useNbo)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Converters.Fakes.StubIByteConverter.ToSingleByteArrayInt32Boolean">
            <summary>IByteConverter.ToSingle(Byte[] buffer, Int32 offset, Boolean useNbo)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Converters.Fakes.StubIByteConverter.ToStringByteArrayInt32Int32">
            <summary>IByteConverter.ToString(Byte[] buffer, Int32 offset, Int32 length)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Converters.Fakes.StubIByteConverter.ToUInt16ByteArrayInt32">
            <summary>IByteConverter.ToUInt16(Byte[] buffer, Int32 offset)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Converters.Fakes.StubIByteConverter.ToUInt16ByteArrayInt32Boolean">
            <summary>IByteConverter.ToUInt16(Byte[] buffer, Int32 offset, Boolean useNbo)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Converters.Fakes.StubIByteConverter.ToUInt32ByteArrayInt32">
            <summary>IByteConverter.ToUInt32(Byte[] buffer, Int32 offset)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Converters.Fakes.StubIByteConverter.ToUInt32ByteArrayInt32Boolean">
            <summary>IByteConverter.ToUInt32(Byte[] buffer, Int32 offset, Boolean useNbo)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Converters.Fakes.StubIByteConverter.ToUInt64ByteArrayInt32">
            <summary>IByteConverter.ToUInt64(Byte[] buffer, Int32 offset)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Converters.Fakes.StubIByteConverter.ToUInt64ByteArrayInt32Boolean">
            <summary>IByteConverter.ToUInt64(Byte[] buffer, Int32 offset, Boolean useNbo)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Fakes.ShimBufferAllocator">
            <summary>Couchbase.IO.BufferAllocator의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimBufferAllocator.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimBufferAllocator.#ctor(Couchbase.IO.BufferAllocator)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimBufferAllocator.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimBufferAllocator.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimBufferAllocator.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimBufferAllocator.ConstructorInt32Int32">
            <summary>BufferAllocator.BufferAllocator(Int32 totalBytes, Int32 bufferSize)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimBufferAllocator.EnsureBufferAllocated">
            <summary>BufferAllocator.EnsureBufferAllocated()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimBufferAllocator.GetBuffer">
            <summary>BufferAllocator.GetBuffer()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimBufferAllocator.ReleaseBufferIOBuffer">
            <summary>BufferAllocator.ReleaseBuffer(IOBuffer buffer)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimBufferAllocator.ReleaseBufferInt32">
            <summary>BufferAllocator.ReleaseBuffer(Int32 offset)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimBufferAllocator.ReleaseBufferSocketAsyncEventArgs">
            <summary>BufferAllocator.ReleaseBuffer(SocketAsyncEventArgs eventArgs)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimBufferAllocator.SetBufferSocketAsyncEventArgs">
            <summary>BufferAllocator.SetBuffer(SocketAsyncEventArgs eventArgs)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimBufferAllocator.StaticConstructor">
            <summary>BufferAllocator.BufferAllocator()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Fakes.ShimBufferAllocator.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimBufferAllocator.AllInstances.EnsureBufferAllocated">
            <summary>BufferAllocator.EnsureBufferAllocated()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimBufferAllocator.AllInstances.GetBuffer">
            <summary>BufferAllocator.GetBuffer()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimBufferAllocator.AllInstances.ReleaseBufferIOBuffer">
            <summary>BufferAllocator.ReleaseBuffer(IOBuffer buffer)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimBufferAllocator.AllInstances.ReleaseBufferInt32">
            <summary>BufferAllocator.ReleaseBuffer(Int32 offset)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimBufferAllocator.AllInstances.ReleaseBufferSocketAsyncEventArgs">
            <summary>BufferAllocator.ReleaseBuffer(SocketAsyncEventArgs eventArgs)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimBufferAllocator.AllInstances.SetBufferSocketAsyncEventArgs">
            <summary>BufferAllocator.SetBuffer(SocketAsyncEventArgs eventArgs)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Fakes.ShimBufferUnavailableException">
            <summary>Couchbase.IO.BufferUnavailableException의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimBufferUnavailableException.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimBufferUnavailableException.#ctor(Couchbase.IO.BufferUnavailableException)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimBufferUnavailableException.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimBufferUnavailableException.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimBufferUnavailableException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimBufferUnavailableException.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimBufferUnavailableException.Constructor">
            <summary>BufferUnavailableException.BufferUnavailableException()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimBufferUnavailableException.ConstructorString">
            <summary>BufferUnavailableException.BufferUnavailableException(String message)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimBufferUnavailableException.ConstructorStringException">
            <summary>BufferUnavailableException.BufferUnavailableException(String message, Exception innerException)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimBufferUnavailableException.ConstructorStringObjectArray">
            <summary>BufferUnavailableException.BufferUnavailableException(String message, Object[] args)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Fakes.ShimBufferUnavailableException.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.IO.Fakes.ShimConnection">
            <summary>Couchbase.IO.Connection의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimConnection.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimConnection.#ctor(Couchbase.IO.Connection)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimConnection.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimConnection.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimConnection.Bind(Couchbase.IO.IConnection)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimConnection.Bind(System.IDisposable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnection.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnection.ConstructorIConnectionPoolSocketIByteConverterBufferAllocator">
            <summary>Connection.Connection(IConnectionPool connectionPool, Socket socket, IByteConverter converter, BufferAllocator allocator)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnection.Dispose">
            <summary>Connection.Dispose()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnection.OnCompletedObjectSocketAsyncEventArgs">
            <summary>Connection.OnCompleted(Object sender, SocketAsyncEventArgs args)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnection.ReceiveSocketSocketAsyncEventArgs">
            <summary>Connection.Receive(Socket socket, SocketAsyncEventArgs e)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnection.SendAsyncByteArrayFuncOfSocketAsyncStateTask">
            <summary>Connection.SendAsync(Byte[] buffer, Func`2&lt;SocketAsyncState,Task&gt; callback)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnection.SendByteArray">
            <summary>Connection.Send(Byte[] buffer)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnection.SendSocketSocketAsyncEventArgs">
            <summary>Connection.Send(Socket socket, SocketAsyncEventArgs e)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Fakes.ShimConnection.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnection.AllInstances.Dispose">
            <summary>Connection.Dispose()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnection.AllInstances.OnCompletedObjectSocketAsyncEventArgs">
            <summary>Connection.OnCompleted(Object sender, SocketAsyncEventArgs args)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnection.AllInstances.ReceiveSocketSocketAsyncEventArgs">
            <summary>Connection.Receive(Socket socket, SocketAsyncEventArgs e)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnection.AllInstances.SendAsyncByteArrayFuncOfSocketAsyncStateTask">
            <summary>Connection.SendAsync(Byte[] buffer, Func`2&lt;SocketAsyncState,Task&gt; callback)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnection.AllInstances.SendByteArray">
            <summary>Connection.Send(Byte[] buffer)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnection.AllInstances.SendSocketSocketAsyncEventArgs">
            <summary>Connection.Send(Socket socket, SocketAsyncEventArgs e)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Fakes.ShimConnectionBase">
            <summary>Couchbase.IO.ConnectionBase의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimConnectionBase.#ctor(Couchbase.IO.ConnectionBase)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimConnectionBase.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimConnectionBase.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimConnectionBase.Bind(Couchbase.IO.IConnection)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimConnectionBase.Bind(System.IDisposable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimConnectionBase.SendOf1IOperationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Couchbase.IO.Operations.IOperation{``0}})">
            <summary>ConnectionBase.Send(IOperation`1&lt;!!0&gt; operation)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.Authenticate">
            <summary>ConnectionBase.Authenticate()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.CloseAttemptsGet">
            <summary>ConnectionBase.get_CloseAttempts()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.ConstructorSocketIByteConverterBufferAllocator">
            <summary>ConnectionBase.ConnectionBase(Socket socket, IByteConverter converter, BufferAllocator bufferAllocator)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.ConstructorSocketOperationAsyncStateIByteConverterBufferAllocator">
            <summary>ConnectionBase.ConnectionBase(Socket socket, OperationAsyncState asyncState, IByteConverter converter, BufferAllocator bufferAllocator)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.CountdownToCloseUInt32">
            <summary>ConnectionBase.CountdownToClose(UInt32 interval)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.Dispose">
            <summary>ConnectionBase.Dispose()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.EndPointGet">
            <summary>ConnectionBase.get_EndPoint()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.EndPointSetEndPoint">
            <summary>ConnectionBase.set_EndPoint(EndPoint value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.HandleExceptionExceptionIOperation">
            <summary>ConnectionBase.HandleException(Exception e, IOperation operation)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.HasShutdownGet">
            <summary>ConnectionBase.get_HasShutdown()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.HasShutdownSetBoolean">
            <summary>ConnectionBase.set_HasShutdown(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.IdentityGet">
            <summary>ConnectionBase.get_Identity()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.InUseGet">
            <summary>ConnectionBase.get_InUse()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.IncrementCloseAttempts">
            <summary>ConnectionBase.IncrementCloseAttempts()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.IsAuthenticatedGet">
            <summary>ConnectionBase.get_IsAuthenticated()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.IsAuthenticatedSetBoolean">
            <summary>ConnectionBase.set_IsAuthenticated(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.IsDeadGet">
            <summary>ConnectionBase.get_IsDead()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.IsDeadSetBoolean">
            <summary>ConnectionBase.set_IsDead(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.IsDisposedGet">
            <summary>ConnectionBase.get_IsDisposed()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.IsSecureGet">
            <summary>ConnectionBase.get_IsSecure()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.IsSecureSetBoolean">
            <summary>ConnectionBase.set_IsSecure(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.MarkUsedBoolean">
            <summary>ConnectionBase.MarkUsed(Boolean isUsed)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.MaxCloseAttemptsGet">
            <summary>ConnectionBase.get_MaxCloseAttempts()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.MaxCloseAttemptsSetInt32">
            <summary>ConnectionBase.set_MaxCloseAttempts(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.SendAsyncByteArrayFuncOfSocketAsyncStateTask">
            <summary>ConnectionBase.SendAsync(Byte[] request, Func`2&lt;SocketAsyncState,Task&gt; callback)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.SendByteArray">
            <summary>ConnectionBase.Send(Byte[] request)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.SocketGet">
            <summary>ConnectionBase.get_Socket()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.StateGet">
            <summary>ConnectionBase.get_State()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.StaticConstructor">
            <summary>ConnectionBase.ConnectionBase()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.WriteBufferGet">
            <summary>ConnectionBase.get_WriteBuffer()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.WriteBufferSetByteArray">
            <summary>ConnectionBase.set_WriteBuffer(Byte[] value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Fakes.ShimConnectionBase.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimConnectionBase.AllInstances.SendOf1IOperationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Couchbase.IO.ConnectionBase,Couchbase.IO.Operations.IOperation{``0}})">
            <summary>ConnectionBase.Send(IOperation`1&lt;!!0&gt; operation)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.AllInstances.Authenticate">
            <summary>ConnectionBase.Authenticate()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.AllInstances.CloseAttemptsGet">
            <summary>ConnectionBase.get_CloseAttempts()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.AllInstances.CountdownToCloseUInt32">
            <summary>ConnectionBase.CountdownToClose(UInt32 interval)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.AllInstances.Dispose">
            <summary>ConnectionBase.Dispose()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.AllInstances.EndPointGet">
            <summary>ConnectionBase.get_EndPoint()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.AllInstances.EndPointSetEndPoint">
            <summary>ConnectionBase.set_EndPoint(EndPoint value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.AllInstances.HandleExceptionExceptionIOperation">
            <summary>ConnectionBase.HandleException(Exception e, IOperation operation)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.AllInstances.HasShutdownGet">
            <summary>ConnectionBase.get_HasShutdown()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.AllInstances.HasShutdownSetBoolean">
            <summary>ConnectionBase.set_HasShutdown(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.AllInstances.IdentityGet">
            <summary>ConnectionBase.get_Identity()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.AllInstances.InUseGet">
            <summary>ConnectionBase.get_InUse()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.AllInstances.IncrementCloseAttempts">
            <summary>ConnectionBase.IncrementCloseAttempts()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.AllInstances.IsAuthenticatedGet">
            <summary>ConnectionBase.get_IsAuthenticated()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.AllInstances.IsAuthenticatedSetBoolean">
            <summary>ConnectionBase.set_IsAuthenticated(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.AllInstances.IsDeadGet">
            <summary>ConnectionBase.get_IsDead()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.AllInstances.IsDeadSetBoolean">
            <summary>ConnectionBase.set_IsDead(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.AllInstances.IsDisposedGet">
            <summary>ConnectionBase.get_IsDisposed()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.AllInstances.IsSecureGet">
            <summary>ConnectionBase.get_IsSecure()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.AllInstances.IsSecureSetBoolean">
            <summary>ConnectionBase.set_IsSecure(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.AllInstances.MarkUsedBoolean">
            <summary>ConnectionBase.MarkUsed(Boolean isUsed)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.AllInstances.MaxCloseAttemptsGet">
            <summary>ConnectionBase.get_MaxCloseAttempts()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.AllInstances.MaxCloseAttemptsSetInt32">
            <summary>ConnectionBase.set_MaxCloseAttempts(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.AllInstances.SendAsyncByteArrayFuncOfSocketAsyncStateTask">
            <summary>ConnectionBase.SendAsync(Byte[] request, Func`2&lt;SocketAsyncState,Task&gt; callback)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.AllInstances.SendByteArray">
            <summary>ConnectionBase.Send(Byte[] request)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.AllInstances.SocketGet">
            <summary>ConnectionBase.get_Socket()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.AllInstances.StateGet">
            <summary>ConnectionBase.get_State()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.AllInstances.WriteBufferGet">
            <summary>ConnectionBase.get_WriteBuffer()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionBase.AllInstances.WriteBufferSetByteArray">
            <summary>ConnectionBase.set_WriteBuffer(Byte[] value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Fakes.ShimConnectionPool`1">
            <summary>Couchbase.IO.ConnectionPool`1의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimConnectionPool`1.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimConnectionPool`1.#ctor(Couchbase.IO.ConnectionPool{`0})">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimConnectionPool`1.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimConnectionPool`1.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimConnectionPool`1.Bind(Couchbase.IO.IConnectionPool)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimConnectionPool`1.Bind(System.IDisposable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPool`1.Acquire">
            <summary>ConnectionPool`1.Acquire()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPool`1.AcquireFromPool">
            <summary>ConnectionPool`1.AcquireFromPool()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPool`1.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPool`1.ConfigurationGet">
            <summary>ConnectionPool`1.get_Configuration()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPool`1.ConnectionsCouchbaseIOIConnectionPoolget">
            <summary>ConnectionPool`1.Couchbase.IO.IConnectionPool.get_Connections()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPool`1.ConnectionsGet">
            <summary>ConnectionPool`1.get_Connections()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPool`1.ConstructorPoolConfigurationIPEndPoint">
            <summary>ConnectionPool`1.ConnectionPool`1(PoolConfiguration configuration, IPEndPoint endPoint)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPool`1.ConstructorPoolConfigurationIPEndPointFuncOfConnectionPoolOfT0IByteConverterBufferAllocatorT0IByteConverter">
            <summary>ConnectionPool`1.ConnectionPool`1(PoolConfiguration configuration, IPEndPoint endPoint, Func`4&lt;ConnectionPool`1&lt;!0&gt;,IByteConverter,BufferAllocator,!0&gt; factory, IByteConverter converter)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPool`1.CouchbaseIOIConnectionPoolAcquire">
            <summary>ConnectionPool`1.Couchbase.IO.IConnectionPool.Acquire()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPool`1.CouchbaseIOIConnectionPoolReleaseIConnection">
            <summary>ConnectionPool`1.Couchbase.IO.IConnectionPool.Release(IConnection connection)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPool`1.Count">
            <summary>ConnectionPool`1.Count()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPool`1.Dispose">
            <summary>ConnectionPool`1.Dispose()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPool`1.DisposeBoolean">
            <summary>ConnectionPool`1.Dispose(Boolean disposing)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPool`1.EndPointGet">
            <summary>ConnectionPool`1.get_EndPoint()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPool`1.EndPointSetIPEndPoint">
            <summary>ConnectionPool`1.set_EndPoint(IPEndPoint value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPool`1.InitializationFailedGet">
            <summary>ConnectionPool`1.get_InitializationFailed()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPool`1.InitializationFailedSetBoolean">
            <summary>ConnectionPool`1.set_InitializationFailed(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPool`1.Initialize">
            <summary>ConnectionPool`1.Initialize()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPool`1.OwnerGet">
            <summary>ConnectionPool`1.get_Owner()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPool`1.OwnerSetIServer">
            <summary>ConnectionPool`1.set_Owner(IServer value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPool`1.ReleaseT0">
            <summary>ConnectionPool`1.Release(!0 connection)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPool`1.StaticConstructor">
            <summary>ConnectionPool`1.ConnectionPool`1()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPool`1._Disposeb__32_0FormatMessageHandler">
            <summary>ConnectionPool`1.&lt;Dispose&gt;b__32_0(FormatMessageHandler m)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Fakes.ShimConnectionPool`1.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPool`1.AllInstances.Acquire">
            <summary>ConnectionPool`1.Acquire()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPool`1.AllInstances.AcquireFromPool">
            <summary>ConnectionPool`1.AcquireFromPool()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPool`1.AllInstances.ConfigurationGet">
            <summary>ConnectionPool`1.get_Configuration()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPool`1.AllInstances.ConnectionsCouchbaseIOIConnectionPoolget">
            <summary>ConnectionPool`1.Couchbase.IO.IConnectionPool.get_Connections()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPool`1.AllInstances.ConnectionsGet">
            <summary>ConnectionPool`1.get_Connections()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPool`1.AllInstances.CouchbaseIOIConnectionPoolAcquire">
            <summary>ConnectionPool`1.Couchbase.IO.IConnectionPool.Acquire()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPool`1.AllInstances.CouchbaseIOIConnectionPoolReleaseIConnection">
            <summary>ConnectionPool`1.Couchbase.IO.IConnectionPool.Release(IConnection connection)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPool`1.AllInstances.Count">
            <summary>ConnectionPool`1.Count()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPool`1.AllInstances.Dispose">
            <summary>ConnectionPool`1.Dispose()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPool`1.AllInstances.DisposeBoolean">
            <summary>ConnectionPool`1.Dispose(Boolean disposing)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPool`1.AllInstances.EndPointGet">
            <summary>ConnectionPool`1.get_EndPoint()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPool`1.AllInstances.EndPointSetIPEndPoint">
            <summary>ConnectionPool`1.set_EndPoint(IPEndPoint value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPool`1.AllInstances.InitializationFailedGet">
            <summary>ConnectionPool`1.get_InitializationFailed()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPool`1.AllInstances.InitializationFailedSetBoolean">
            <summary>ConnectionPool`1.set_InitializationFailed(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPool`1.AllInstances.Initialize">
            <summary>ConnectionPool`1.Initialize()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPool`1.AllInstances.OwnerGet">
            <summary>ConnectionPool`1.get_Owner()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPool`1.AllInstances.OwnerSetIServer">
            <summary>ConnectionPool`1.set_Owner(IServer value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPool`1.AllInstances.ReleaseT0">
            <summary>ConnectionPool`1.Release(!0 connection)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPool`1.AllInstances._Disposeb__32_0FormatMessageHandler">
            <summary>ConnectionPool`1.&lt;Dispose&gt;b__32_0(FormatMessageHandler m)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Fakes.ShimConnectionPoolFactory">
            <summary>Couchbase.IO.ConnectionPoolFactory의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimConnectionPoolFactory.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimConnectionPoolFactory.#ctor(Couchbase.IO.ConnectionPoolFactory)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimConnectionPoolFactory.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimConnectionPoolFactory.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimConnectionPoolFactory.GetFactoryOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{Couchbase.Configuration.Client.PoolConfiguration,System.Net.IPEndPoint,Couchbase.IO.IConnectionPool}})">
            <summary>ConnectionPoolFactory.GetFactory()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPoolFactory.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPoolFactory.Constructor">
            <summary>ConnectionPoolFactory.ConnectionPoolFactory()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPoolFactory.GetFactory">
            <summary>ConnectionPoolFactory.GetFactory()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPoolFactory.GetFactoryConnectionPoolElement">
            <summary>ConnectionPoolFactory.GetFactory(ConnectionPoolElement element)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionPoolFactory.GetFactoryString">
            <summary>ConnectionPoolFactory.GetFactory(String typeName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Fakes.ShimConnectionPoolFactory.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.IO.Fakes.ShimConnectionUnavailableException">
            <summary>Couchbase.IO.ConnectionUnavailableException의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimConnectionUnavailableException.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimConnectionUnavailableException.#ctor(Couchbase.IO.ConnectionUnavailableException)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimConnectionUnavailableException.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimConnectionUnavailableException.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimConnectionUnavailableException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionUnavailableException.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionUnavailableException.Constructor">
            <summary>ConnectionUnavailableException.ConnectionUnavailableException()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionUnavailableException.ConstructorString">
            <summary>ConnectionUnavailableException.ConnectionUnavailableException(String message)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionUnavailableException.ConstructorStringException">
            <summary>ConnectionUnavailableException.ConnectionUnavailableException(String message, Exception innerException)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimConnectionUnavailableException.ConstructorStringObjectArray">
            <summary>ConnectionUnavailableException.ConnectionUnavailableException(String message, Object[] args)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Fakes.ShimConnectionUnavailableException.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.IO.Fakes.ShimDefaultConnectionFactory">
            <summary>Couchbase.IO.DefaultConnectionFactory의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimDefaultConnectionFactory.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimDefaultConnectionFactory.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimDefaultConnectionFactory.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimDefaultConnectionFactory.GetGenericOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{Couchbase.IO.ConnectionPool{``0},Couchbase.IO.Converters.IByteConverter,Couchbase.IO.BufferAllocator,``0}})">
            <summary>DefaultConnectionFactory.GetGeneric()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimDefaultConnectionFactory.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Fakes.ShimIOBuffer">
            <summary>Couchbase.IO.IOBuffer의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimIOBuffer.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimIOBuffer.#ctor(Couchbase.IO.IOBuffer)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimIOBuffer.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimIOBuffer.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimIOBuffer.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimIOBuffer.BufferGet">
            <summary>IOBuffer.get_Buffer()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimIOBuffer.BufferSetByteArray">
            <summary>IOBuffer.set_Buffer(Byte[] value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimIOBuffer.ConstructorByteArrayInt32Int32">
            <summary>IOBuffer.IOBuffer(Byte[] buffer, Int32 offset, Int32 length)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimIOBuffer.LengthGet">
            <summary>IOBuffer.get_Length()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimIOBuffer.LengthSetInt32">
            <summary>IOBuffer.set_Length(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimIOBuffer.OffsetGet">
            <summary>IOBuffer.get_Offset()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimIOBuffer.OffsetSetInt32">
            <summary>IOBuffer.set_Offset(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Fakes.ShimIOBuffer.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimIOBuffer.AllInstances.BufferGet">
            <summary>IOBuffer.get_Buffer()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimIOBuffer.AllInstances.BufferSetByteArray">
            <summary>IOBuffer.set_Buffer(Byte[] value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimIOBuffer.AllInstances.LengthGet">
            <summary>IOBuffer.get_Length()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimIOBuffer.AllInstances.LengthSetInt32">
            <summary>IOBuffer.set_Length(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimIOBuffer.AllInstances.OffsetGet">
            <summary>IOBuffer.get_Offset()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimIOBuffer.AllInstances.OffsetSetInt32">
            <summary>IOBuffer.set_Offset(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Fakes.ShimIOServiceFactory">
            <summary>Couchbase.IO.IOServiceFactory의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimIOServiceFactory.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimIOServiceFactory.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimIOServiceFactory.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimIOServiceFactory.GetFactoryOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{Couchbase.IO.IConnectionPool,Couchbase.IO.IIOService}})">
            <summary>IOServiceFactory.GetFactory()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimIOServiceFactory.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimIOServiceFactory.GetFactory">
            <summary>IOServiceFactory.GetFactory()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimIOServiceFactory.GetFactoryIOServiceElement">
            <summary>IOServiceFactory.GetFactory(IOServiceElement element)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimIOServiceFactory.GetFactoryString">
            <summary>IOServiceFactory.GetFactory(String typeName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Fakes.ShimMultiplexingConnection">
            <summary>Couchbase.IO.MultiplexingConnection의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimMultiplexingConnection.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimMultiplexingConnection.#ctor(Couchbase.IO.MultiplexingConnection)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimMultiplexingConnection.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimMultiplexingConnection.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimMultiplexingConnection.Bind(Couchbase.IO.IConnection)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimMultiplexingConnection.Bind(System.IDisposable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimMultiplexingConnection.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimMultiplexingConnection.Close">
            <summary>MultiplexingConnection.Close()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimMultiplexingConnection.ConstructorIConnectionPoolSocketIByteConverterBufferAllocator">
            <summary>MultiplexingConnection.MultiplexingConnection(IConnectionPool connectionPool, Socket socket, IByteConverter converter, BufferAllocator allocator)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimMultiplexingConnection.Dispose">
            <summary>MultiplexingConnection.Dispose()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimMultiplexingConnection.HandleDisconnectException">
            <summary>MultiplexingConnection.HandleDisconnect(Exception exception)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimMultiplexingConnection.ParseReceivedData">
            <summary>MultiplexingConnection.ParseReceivedData()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimMultiplexingConnection.ReceiveThreadBody">
            <summary>MultiplexingConnection.ReceiveThreadBody()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimMultiplexingConnection.SendAsyncByteArrayFuncOfSocketAsyncStateTask">
            <summary>MultiplexingConnection.SendAsync(Byte[] request, Func`2&lt;SocketAsyncState,Task&gt; callback)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimMultiplexingConnection.SendByteArray">
            <summary>MultiplexingConnection.Send(Byte[] request)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimMultiplexingConnection._SendAsyncb__6_0Object">
            <summary>MultiplexingConnection.&lt;SendAsync&gt;b__6_0(Object o)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Fakes.ShimMultiplexingConnection.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimMultiplexingConnection.AllInstances.Close">
            <summary>MultiplexingConnection.Close()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimMultiplexingConnection.AllInstances.Dispose">
            <summary>MultiplexingConnection.Dispose()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimMultiplexingConnection.AllInstances.HandleDisconnectException">
            <summary>MultiplexingConnection.HandleDisconnect(Exception exception)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimMultiplexingConnection.AllInstances.ParseReceivedData">
            <summary>MultiplexingConnection.ParseReceivedData()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimMultiplexingConnection.AllInstances.ReceiveThreadBody">
            <summary>MultiplexingConnection.ReceiveThreadBody()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimMultiplexingConnection.AllInstances.SendAsyncByteArrayFuncOfSocketAsyncStateTask">
            <summary>MultiplexingConnection.SendAsync(Byte[] request, Func`2&lt;SocketAsyncState,Task&gt; callback)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimMultiplexingConnection.AllInstances.SendByteArray">
            <summary>MultiplexingConnection.Send(Byte[] request)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimMultiplexingConnection.AllInstances._SendAsyncb__6_0Object">
            <summary>MultiplexingConnection.&lt;SendAsync&gt;b__6_0(Object o)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Fakes.ShimOperationAsyncState">
            <summary>Couchbase.IO.OperationAsyncState의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimOperationAsyncState.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimOperationAsyncState.#ctor(Couchbase.IO.OperationAsyncState)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimOperationAsyncState.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimOperationAsyncState.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimOperationAsyncState.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimOperationAsyncState.BodyLengthGet">
            <summary>OperationAsyncState.get_BodyLength()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimOperationAsyncState.BodyLengthSetInt32">
            <summary>OperationAsyncState.set_BodyLength(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimOperationAsyncState.BufferGet">
            <summary>OperationAsyncState.get_Buffer()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimOperationAsyncState.BufferSetByteArray">
            <summary>OperationAsyncState.set_Buffer(Byte[] value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimOperationAsyncState.BytesReceivedGet">
            <summary>OperationAsyncState.get_BytesReceived()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimOperationAsyncState.BytesReceivedSetInt32">
            <summary>OperationAsyncState.set_BytesReceived(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimOperationAsyncState.Constructor">
            <summary>OperationAsyncState.OperationAsyncState()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimOperationAsyncState.DataGet">
            <summary>OperationAsyncState.get_Data()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimOperationAsyncState.DataSetMemoryStream">
            <summary>OperationAsyncState.set_Data(MemoryStream value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimOperationAsyncState.OpaqueGet">
            <summary>OperationAsyncState.get_Opaque()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimOperationAsyncState.OpaqueSetUInt32">
            <summary>OperationAsyncState.set_Opaque(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Fakes.ShimOperationAsyncState.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimOperationAsyncState.AllInstances.BodyLengthGet">
            <summary>OperationAsyncState.get_BodyLength()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimOperationAsyncState.AllInstances.BodyLengthSetInt32">
            <summary>OperationAsyncState.set_BodyLength(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimOperationAsyncState.AllInstances.BufferGet">
            <summary>OperationAsyncState.get_Buffer()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimOperationAsyncState.AllInstances.BufferSetByteArray">
            <summary>OperationAsyncState.set_Buffer(Byte[] value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimOperationAsyncState.AllInstances.BytesReceivedGet">
            <summary>OperationAsyncState.get_BytesReceived()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimOperationAsyncState.AllInstances.BytesReceivedSetInt32">
            <summary>OperationAsyncState.set_BytesReceived(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimOperationAsyncState.AllInstances.DataGet">
            <summary>OperationAsyncState.get_Data()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimOperationAsyncState.AllInstances.DataSetMemoryStream">
            <summary>OperationAsyncState.set_Data(MemoryStream value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimOperationAsyncState.AllInstances.OpaqueGet">
            <summary>OperationAsyncState.get_Opaque()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimOperationAsyncState.AllInstances.OpaqueSetUInt32">
            <summary>OperationAsyncState.set_Opaque(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Fakes.ShimRemoteHostClosedException">
            <summary>Couchbase.IO.RemoteHostClosedException의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimRemoteHostClosedException.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimRemoteHostClosedException.#ctor(Couchbase.IO.RemoteHostClosedException)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimRemoteHostClosedException.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimRemoteHostClosedException.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimRemoteHostClosedException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimRemoteHostClosedException.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimRemoteHostClosedException.ConstructorString">
            <summary>RemoteHostClosedException.RemoteHostClosedException(String message)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Fakes.ShimRemoteHostClosedException.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.IO.Fakes.ShimRemoteHostTimeoutException">
            <summary>Couchbase.IO.RemoteHostTimeoutException의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimRemoteHostTimeoutException.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimRemoteHostTimeoutException.#ctor(Couchbase.IO.RemoteHostTimeoutException)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimRemoteHostTimeoutException.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimRemoteHostTimeoutException.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimRemoteHostTimeoutException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimRemoteHostTimeoutException.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimRemoteHostTimeoutException.ConstructorString">
            <summary>RemoteHostTimeoutException.RemoteHostTimeoutException(String message)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Fakes.ShimRemoteHostTimeoutException.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.IO.Fakes.ShimSocketAsyncState">
            <summary>Couchbase.IO.SocketAsyncState의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimSocketAsyncState.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimSocketAsyncState.#ctor(Couchbase.IO.SocketAsyncState)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimSocketAsyncState.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimSocketAsyncState.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.BodyLengthGet">
            <summary>SocketAsyncState.get_BodyLength()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.BodyLengthSetInt32">
            <summary>SocketAsyncState.set_BodyLength(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.BufferGet">
            <summary>SocketAsyncState.get_Buffer()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.BufferLengthGet">
            <summary>SocketAsyncState.get_BufferLength()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.BufferLengthSetInt32">
            <summary>SocketAsyncState.set_BufferLength(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.BufferOffsetGet">
            <summary>SocketAsyncState.get_BufferOffset()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.BufferOffsetSetInt32">
            <summary>SocketAsyncState.set_BufferOffset(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.BufferSetByteArray">
            <summary>SocketAsyncState.set_Buffer(Byte[] value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.BytesReceivedGet">
            <summary>SocketAsyncState.get_BytesReceived()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.BytesReceivedSetInt32">
            <summary>SocketAsyncState.set_BytesReceived(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.BytesSentGet">
            <summary>SocketAsyncState.get_BytesSent()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.BytesSentSetInt32">
            <summary>SocketAsyncState.set_BytesSent(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.CompletedGet">
            <summary>SocketAsyncState.get_Completed()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.CompletedSetFuncOfSocketAsyncStateTask">
            <summary>SocketAsyncState.set_Completed(Func`2&lt;SocketAsyncState,Task&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.Constructor">
            <summary>SocketAsyncState.SocketAsyncState()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.DataGet">
            <summary>SocketAsyncState.get_Data()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.DataSetMemoryStream">
            <summary>SocketAsyncState.set_Data(MemoryStream value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.ExceptionGet">
            <summary>SocketAsyncState.get_Exception()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.ExceptionSetException">
            <summary>SocketAsyncState.set_Exception(Exception value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.IOBufferGet">
            <summary>SocketAsyncState.get_IOBuffer()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.IOBufferSetIOBuffer">
            <summary>SocketAsyncState.set_IOBuffer(IOBuffer value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.OpaqueGet">
            <summary>SocketAsyncState.get_Opaque()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.OpaqueSetUInt32">
            <summary>SocketAsyncState.set_Opaque(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.SendOffsetGet">
            <summary>SocketAsyncState.get_SendOffset()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.SendOffsetSetInt32">
            <summary>SocketAsyncState.set_SendOffset(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.SetIOBufferIOBuffer">
            <summary>SocketAsyncState.SetIOBuffer(IOBuffer ioBuffer)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.StatusGet">
            <summary>SocketAsyncState.get_Status()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.StatusSetResponseStatus">
            <summary>SocketAsyncState.set_Status(ResponseStatus value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Fakes.ShimSocketAsyncState.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.AllInstances.BodyLengthGet">
            <summary>SocketAsyncState.get_BodyLength()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.AllInstances.BodyLengthSetInt32">
            <summary>SocketAsyncState.set_BodyLength(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.AllInstances.BufferGet">
            <summary>SocketAsyncState.get_Buffer()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.AllInstances.BufferLengthGet">
            <summary>SocketAsyncState.get_BufferLength()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.AllInstances.BufferLengthSetInt32">
            <summary>SocketAsyncState.set_BufferLength(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.AllInstances.BufferOffsetGet">
            <summary>SocketAsyncState.get_BufferOffset()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.AllInstances.BufferOffsetSetInt32">
            <summary>SocketAsyncState.set_BufferOffset(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.AllInstances.BufferSetByteArray">
            <summary>SocketAsyncState.set_Buffer(Byte[] value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.AllInstances.BytesReceivedGet">
            <summary>SocketAsyncState.get_BytesReceived()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.AllInstances.BytesReceivedSetInt32">
            <summary>SocketAsyncState.set_BytesReceived(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.AllInstances.BytesSentGet">
            <summary>SocketAsyncState.get_BytesSent()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.AllInstances.BytesSentSetInt32">
            <summary>SocketAsyncState.set_BytesSent(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.AllInstances.CompletedGet">
            <summary>SocketAsyncState.get_Completed()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.AllInstances.CompletedSetFuncOfSocketAsyncStateTask">
            <summary>SocketAsyncState.set_Completed(Func`2&lt;SocketAsyncState,Task&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.AllInstances.DataGet">
            <summary>SocketAsyncState.get_Data()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.AllInstances.DataSetMemoryStream">
            <summary>SocketAsyncState.set_Data(MemoryStream value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.AllInstances.ExceptionGet">
            <summary>SocketAsyncState.get_Exception()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.AllInstances.ExceptionSetException">
            <summary>SocketAsyncState.set_Exception(Exception value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.AllInstances.IOBufferGet">
            <summary>SocketAsyncState.get_IOBuffer()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.AllInstances.IOBufferSetIOBuffer">
            <summary>SocketAsyncState.set_IOBuffer(IOBuffer value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.AllInstances.OpaqueGet">
            <summary>SocketAsyncState.get_Opaque()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.AllInstances.OpaqueSetUInt32">
            <summary>SocketAsyncState.set_Opaque(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.AllInstances.SendOffsetGet">
            <summary>SocketAsyncState.get_SendOffset()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.AllInstances.SendOffsetSetInt32">
            <summary>SocketAsyncState.set_SendOffset(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.AllInstances.SetIOBufferIOBuffer">
            <summary>SocketAsyncState.SetIOBuffer(IOBuffer ioBuffer)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.AllInstances.StatusGet">
            <summary>SocketAsyncState.get_Status()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAsyncState.AllInstances.StatusSetResponseStatus">
            <summary>SocketAsyncState.set_Status(ResponseStatus value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Fakes.ShimSocketAwaitable">
            <summary>Couchbase.IO.SocketAwaitable의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimSocketAwaitable.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimSocketAwaitable.#ctor(Couchbase.IO.SocketAwaitable)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimSocketAwaitable.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimSocketAwaitable.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAwaitable.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAwaitable.ConstructorSocketAsyncEventArgs">
            <summary>SocketAwaitable.SocketAwaitable(SocketAsyncEventArgs eventArgs)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAwaitable.EventArgsGet">
            <summary>SocketAwaitable.get_EventArgs()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAwaitable.GetAwaiter">
            <summary>SocketAwaitable.GetAwaiter()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAwaitable.GetResult">
            <summary>SocketAwaitable.GetResult()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAwaitable.IsCompletedGet">
            <summary>SocketAwaitable.get_IsCompleted()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAwaitable.IsCompletedSetBoolean">
            <summary>SocketAwaitable.set_IsCompleted(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAwaitable.OnCompletedAction">
            <summary>SocketAwaitable.OnCompleted(Action continuation)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAwaitable.Reset">
            <summary>SocketAwaitable.Reset()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAwaitable.StaticConstructor">
            <summary>SocketAwaitable.SocketAwaitable()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAwaitable._ctorb__4_0ObjectSocketAsyncEventArgs">
            <summary>SocketAwaitable.&lt;.ctor&gt;b__4_0(Object &lt;sender&gt;, SocketAsyncEventArgs &lt;e&gt;)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Fakes.ShimSocketAwaitable.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAwaitable.AllInstances.EventArgsGet">
            <summary>SocketAwaitable.get_EventArgs()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAwaitable.AllInstances.GetAwaiter">
            <summary>SocketAwaitable.GetAwaiter()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAwaitable.AllInstances.GetResult">
            <summary>SocketAwaitable.GetResult()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAwaitable.AllInstances.IsCompletedGet">
            <summary>SocketAwaitable.get_IsCompleted()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAwaitable.AllInstances.IsCompletedSetBoolean">
            <summary>SocketAwaitable.set_IsCompleted(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAwaitable.AllInstances.OnCompletedAction">
            <summary>SocketAwaitable.OnCompleted(Action continuation)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAwaitable.AllInstances.Reset">
            <summary>SocketAwaitable.Reset()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSocketAwaitable.AllInstances._ctorb__4_0ObjectSocketAsyncEventArgs">
            <summary>SocketAwaitable.&lt;.ctor&gt;b__4_0(Object &lt;sender&gt;, SocketAsyncEventArgs &lt;e&gt;)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Fakes.ShimSslConnection">
            <summary>Couchbase.IO.SslConnection의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimSslConnection.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimSslConnection.#ctor(Couchbase.IO.SslConnection)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimSslConnection.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimSslConnection.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimSslConnection.Bind(Couchbase.IO.IConnection)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimSslConnection.Bind(System.IDisposable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimSslConnection.SendOf1IOperationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Couchbase.IO.Operations.IOperation{``0}})">
            <summary>SslConnection.Send(IOperation`1&lt;!!0&gt; operation)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSslConnection.Authenticate">
            <summary>SslConnection.Authenticate()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSslConnection.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSslConnection.ConstructorIConnectionPoolSocketIByteConverterBufferAllocator">
            <summary>SslConnection.SslConnection(IConnectionPool connectionPool, Socket socket, IByteConverter converter, BufferAllocator allocator)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSslConnection.ConstructorIConnectionPoolSocketSslStreamIByteConverterBufferAllocator">
            <summary>SslConnection.SslConnection(IConnectionPool connectionPool, Socket socket, SslStream sslStream, IByteConverter converter, BufferAllocator allocator)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSslConnection.Dispose">
            <summary>SslConnection.Dispose()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSslConnection.DisposeBoolean">
            <summary>SslConnection.Dispose(Boolean disposing)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSslConnection.SendAsyncByteArrayCancellationToken">
            <summary>SslConnection.SendAsync(Byte[] buffer, CancellationToken cancellationToken)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSslConnection.SendAsyncByteArrayFuncOfSocketAsyncStateTask">
            <summary>SslConnection.SendAsync(Byte[] request, Func`2&lt;SocketAsyncState,Task&gt; callback)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSslConnection.SendByteArray">
            <summary>SslConnection.Send(Byte[] buffer)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSslConnection.ServerCertificateValidationCallbackObjectX509CertificateX509ChainSslPolicyErrors">
            <summary>SslConnection.ServerCertificateValidationCallback(Object sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Fakes.ShimSslConnection.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.ShimSslConnection.AllInstances.SendOf1IOperationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Couchbase.IO.SslConnection,Couchbase.IO.Operations.IOperation{``0}})">
            <summary>SslConnection.Send(IOperation`1&lt;!!0&gt; operation)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSslConnection.AllInstances.Authenticate">
            <summary>SslConnection.Authenticate()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSslConnection.AllInstances.Dispose">
            <summary>SslConnection.Dispose()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSslConnection.AllInstances.DisposeBoolean">
            <summary>SslConnection.Dispose(Boolean disposing)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSslConnection.AllInstances.SendAsyncByteArrayCancellationToken">
            <summary>SslConnection.SendAsync(Byte[] buffer, CancellationToken cancellationToken)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSslConnection.AllInstances.SendAsyncByteArrayFuncOfSocketAsyncStateTask">
            <summary>SslConnection.SendAsync(Byte[] request, Func`2&lt;SocketAsyncState,Task&gt; callback)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.ShimSslConnection.AllInstances.SendByteArray">
            <summary>SslConnection.Send(Byte[] buffer)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Fakes.StubBufferAllocator">
            <summary>Couchbase.IO.BufferAllocator의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubBufferAllocator.#ctor(System.Int32,System.Int32)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubBufferAllocator.GetBuffer">
            <summary>BufferAllocator.GetBuffer()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubBufferAllocator.GetBuffer01">
            <summary>BufferAllocator.GetBuffer()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubBufferAllocator.InitializeStub">
            <summary>type StubBufferAllocator의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubBufferAllocator.SetBuffer(System.Net.Sockets.SocketAsyncEventArgs)">
            <summary>BufferAllocator.SetBuffer(SocketAsyncEventArgs eventArgs)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubBufferAllocator.SetBufferSocketAsyncEventArgs">
            <summary>BufferAllocator.SetBuffer(SocketAsyncEventArgs eventArgs)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubBufferAllocator.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubBufferAllocator.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubBufferAllocator.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Fakes.StubConnection">
            <summary>Couchbase.IO.Connection의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubConnection.#ctor(Couchbase.IO.IConnectionPool,System.Net.Sockets.Socket,Couchbase.IO.Converters.IByteConverter,Couchbase.IO.BufferAllocator)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubConnection.Authenticate">
            <summary>ConnectionBase.Authenticate()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubConnection.Authenticate01">
            <summary>ConnectionBase.Authenticate()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubConnection.Dispose">
            <summary>Connection.Dispose()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubConnection.Dispose01">
            <summary>Connection.Dispose()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubConnection.HandleException(System.Exception,Couchbase.IO.Operations.IOperation)">
            <summary>ConnectionBase.HandleException(Exception e, IOperation operation)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubConnection.HandleExceptionExceptionIOperation">
            <summary>ConnectionBase.HandleException(Exception e, IOperation operation)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubConnection.InitializeStub">
            <summary>type StubConnection의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubConnection.Send(System.Byte[])">
            <summary>Connection.Send(Byte[] buffer)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubConnection.Send``1(Couchbase.IO.Operations.IOperation{``0})">
            <summary>ConnectionBase.Send(IOperation`1&lt;!!0&gt; operation)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubConnection.SendAsync(System.Byte[],System.Func{Couchbase.IO.SocketAsyncState,System.Threading.Tasks.Task})">
            <summary>Connection.SendAsync(Byte[] buffer, Func`2&lt;SocketAsyncState,Task&gt; callback)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubConnection.SendAsyncByteArrayFuncOfSocketAsyncStateTask">
            <summary>Connection.SendAsync(Byte[] buffer, Func`2&lt;SocketAsyncState,Task&gt; callback)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubConnection.SendByteArray">
            <summary>Connection.Send(Byte[] buffer)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubConnection.SendOf1IOperationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Couchbase.IO.Operations.IOperation{``0}})">
            <summary>Send(IOperation`1&lt;!!0&gt; operation)의 스텁을 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubConnection.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubConnection.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubConnection.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Fakes.StubConnectionBase">
            <summary>Couchbase.IO.ConnectionBase의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubConnectionBase.#ctor(System.Net.Sockets.Socket,Couchbase.IO.Converters.IByteConverter,Couchbase.IO.BufferAllocator)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubConnectionBase.#ctor(System.Net.Sockets.Socket,Couchbase.IO.OperationAsyncState,Couchbase.IO.Converters.IByteConverter,Couchbase.IO.BufferAllocator)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubConnectionBase.Authenticate">
            <summary>ConnectionBase.Authenticate()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubConnectionBase.Authenticate01">
            <summary>ConnectionBase.Authenticate()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubConnectionBase.Dispose">
            <summary>ConnectionBase.Dispose()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubConnectionBase.Dispose01">
            <summary>ConnectionBase.Dispose()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubConnectionBase.HandleException(System.Exception,Couchbase.IO.Operations.IOperation)">
            <summary>ConnectionBase.HandleException(Exception e, IOperation operation)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubConnectionBase.HandleExceptionExceptionIOperation">
            <summary>ConnectionBase.HandleException(Exception e, IOperation operation)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubConnectionBase.InitializeStub">
            <summary>type StubConnectionBase의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubConnectionBase.Send``1(Couchbase.IO.Operations.IOperation{``0})">
            <summary>ConnectionBase.Send(IOperation`1&lt;!!0&gt; operation)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubConnectionBase.Send(System.Byte[])">
            <summary>ConnectionBase.Send(Byte[] request)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubConnectionBase.SendAsync(System.Byte[],System.Func{Couchbase.IO.SocketAsyncState,System.Threading.Tasks.Task})">
            <summary>ConnectionBase.SendAsync(Byte[] request, Func`2&lt;SocketAsyncState,Task&gt; callback)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubConnectionBase.SendAsyncByteArrayFuncOfSocketAsyncStateTask">
            <summary>ConnectionBase.SendAsync(Byte[] request, Func`2&lt;SocketAsyncState,Task&gt; callback)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubConnectionBase.SendByteArray">
            <summary>ConnectionBase.Send(Byte[] request)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubConnectionBase.SendOf1IOperationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Couchbase.IO.Operations.IOperation{``0}})">
            <summary>Send(IOperation`1&lt;!!0&gt; operation)의 스텁을 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubConnectionBase.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubConnectionBase.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubConnectionBase.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Fakes.StubConnectionPoolFactory">
            <summary>Couchbase.IO.ConnectionPoolFactory의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubConnectionPoolFactory.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubConnectionPoolFactory.InitializeStub">
            <summary>type StubConnectionPoolFactory의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubConnectionPoolFactory.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubConnectionPoolFactory.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubConnectionPoolFactory.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Fakes.StubIConnection">
            <summary>Couchbase.IO.IConnection의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubIConnection.#ctor">
            <summary>type StubIConnection의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubIConnection.AttachBackingFieldToIsAuthenticated">
            <summary>대리자를 연결하여 StubIConnection.IsAuthenticated을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubIConnection.AttachBackingFieldToIsDead">
            <summary>대리자를 연결하여 StubIConnection.IsDead을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubIConnection.AttachBackingFieldToMaxCloseAttempts">
            <summary>대리자를 연결하여 StubIConnection.MaxCloseAttempts을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubIConnection.Authenticate">
            <summary>IConnection.Authenticate()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubIConnection.CloseAttemptsGet">
            <summary>IConnection.get_CloseAttempts()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubIConnection.cnc::Couchbase#IO#IConnection#Authenticate">
            <summary>IConnection.Authenticate()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubIConnection.cnc::Couchbase#IO#IConnection#CountdownToClose(System.UInt32)">
            <summary>IConnection.CountdownToClose(UInt32 interval)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubIConnection.cnc::Couchbase#IO#IConnection#MarkUsed(System.Boolean)">
            <summary>IConnection.MarkUsed(Boolean isUsed)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubIConnection.cnc::Couchbase#IO#IConnection#Send(System.Byte[])">
            <summary>IConnection.Send(Byte[] request)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubIConnection.cnc::Couchbase#IO#IConnection#SendAsync(System.Byte[],System.Func{Couchbase.IO.SocketAsyncState,System.Threading.Tasks.Task})">
            <summary>IConnection.SendAsync(Byte[] buffer, Func`2&lt;SocketAsyncState,Task&gt; callback)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubIConnection.CountdownToCloseUInt32">
            <summary>IConnection.CountdownToClose(UInt32 interval)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubIConnection.Dispose">
            <summary>IDisposable.Dispose()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubIConnection.EndPointGet">
            <summary>IConnection.get_EndPoint()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubIConnection.HasShutdownGet">
            <summary>IConnection.get_HasShutdown()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubIConnection.IdentityGet">
            <summary>IConnection.get_Identity()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubIConnection.InUseGet">
            <summary>IConnection.get_InUse()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubIConnection.IsAuthenticatedGet">
            <summary>IConnection.get_IsAuthenticated()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubIConnection.IsAuthenticatedSetBoolean">
            <summary>IConnection.set_IsAuthenticated(Boolean value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubIConnection.IsDeadGet">
            <summary>IConnection.get_IsDead()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubIConnection.IsDeadSetBoolean">
            <summary>IConnection.set_IsDead(Boolean value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubIConnection.IsDisposedGet">
            <summary>IConnection.get_IsDisposed()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubIConnection.IsSecureGet">
            <summary>IConnection.get_IsSecure()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubIConnection.MarkUsedBoolean">
            <summary>IConnection.MarkUsed(Boolean isUsed)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubIConnection.MaxCloseAttemptsGet">
            <summary>IConnection.get_MaxCloseAttempts()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubIConnection.MaxCloseAttemptsSetInt32">
            <summary>IConnection.set_MaxCloseAttempts(Int32 value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubIConnection.SendAsyncByteArrayFuncOfSocketAsyncStateTask">
            <summary>IConnection.SendAsync(Byte[] buffer, Func`2&lt;SocketAsyncState,Task&gt; callback)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubIConnection.SendByteArray">
            <summary>IConnection.Send(Byte[] request)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubIConnection.SocketGet">
            <summary>IConnection.get_Socket()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubIConnection.global::System#IDisposable#Dispose">
            <summary>IDisposable.Dispose()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubIConnection.cnc::Couchbase#IO#IConnection#CloseAttempts">
            <summary>IConnection.get_CloseAttempts()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubIConnection.cnc::Couchbase#IO#IConnection#EndPoint">
            <summary>IConnection.get_EndPoint()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubIConnection.cnc::Couchbase#IO#IConnection#HasShutdown">
            <summary>IConnection.get_HasShutdown()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubIConnection.cnc::Couchbase#IO#IConnection#Identity">
            <summary>IConnection.get_Identity()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubIConnection.cnc::Couchbase#IO#IConnection#InUse">
            <summary>IConnection.get_InUse()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubIConnection.cnc::Couchbase#IO#IConnection#IsAuthenticated">
            <summary>IConnection.get_IsAuthenticated()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubIConnection.cnc::Couchbase#IO#IConnection#IsDead">
            <summary>IConnection.get_IsDead()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubIConnection.cnc::Couchbase#IO#IConnection#IsDisposed">
            <summary>IConnection.get_IsDisposed()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubIConnection.cnc::Couchbase#IO#IConnection#IsSecure">
            <summary>IConnection.get_IsSecure()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubIConnection.cnc::Couchbase#IO#IConnection#MaxCloseAttempts">
            <summary>IConnection.get_MaxCloseAttempts()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubIConnection.cnc::Couchbase#IO#IConnection#Socket">
            <summary>IConnection.get_Socket()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Fakes.StubIConnectionPool">
            <summary>Couchbase.IO.IConnectionPool의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubIConnectionPool.#ctor">
            <summary>type StubIConnectionPool의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubIConnectionPool.Acquire">
            <summary>IConnectionPool.Acquire()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubIConnectionPool.AttachBackingFieldToEndPoint">
            <summary>대리자를 연결하여 StubIConnectionPool.EndPoint을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubIConnectionPool.AttachBackingFieldToOwner">
            <summary>대리자를 연결하여 StubIConnectionPool.Owner을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubIConnectionPool.ConfigurationGet">
            <summary>IConnectionPool.get_Configuration()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubIConnectionPool.ConnectionsGet">
            <summary>IConnectionPool.get_Connections()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubIConnectionPool.cnc::Couchbase#IO#IConnectionPool#Acquire">
            <summary>IConnectionPool.Acquire()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubIConnectionPool.cnc::Couchbase#IO#IConnectionPool#Count">
            <summary>IConnectionPool.Count()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubIConnectionPool.cnc::Couchbase#IO#IConnectionPool#Initialize">
            <summary>IConnectionPool.Initialize()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubIConnectionPool.cnc::Couchbase#IO#IConnectionPool#Release(Couchbase.IO.IConnection)">
            <summary>IConnectionPool.Release(IConnection connection)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubIConnectionPool.Count">
            <summary>IConnectionPool.Count()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubIConnectionPool.Dispose">
            <summary>IDisposable.Dispose()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubIConnectionPool.EndPointGet">
            <summary>IConnectionPool.get_EndPoint()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubIConnectionPool.EndPointSetIPEndPoint">
            <summary>IConnectionPool.set_EndPoint(IPEndPoint value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubIConnectionPool.InitializationFailedGet">
            <summary>IConnectionPool.get_InitializationFailed()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubIConnectionPool.Initialize">
            <summary>IConnectionPool.Initialize()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubIConnectionPool.OwnerGet">
            <summary>IConnectionPool.get_Owner()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubIConnectionPool.OwnerSetIServer">
            <summary>IConnectionPool.set_Owner(IServer value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubIConnectionPool.ReleaseIConnection">
            <summary>IConnectionPool.Release(IConnection connection)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubIConnectionPool.global::System#IDisposable#Dispose">
            <summary>IDisposable.Dispose()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubIConnectionPool.cnc::Couchbase#IO#IConnectionPool#Configuration">
            <summary>IConnectionPool.get_Configuration()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubIConnectionPool.cnc::Couchbase#IO#IConnectionPool#Connections">
            <summary>IConnectionPool.get_Connections()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubIConnectionPool.cnc::Couchbase#IO#IConnectionPool#EndPoint">
            <summary>IConnectionPool.get_EndPoint()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubIConnectionPool.cnc::Couchbase#IO#IConnectionPool#InitializationFailed">
            <summary>IConnectionPool.get_InitializationFailed()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubIConnectionPool.cnc::Couchbase#IO#IConnectionPool#Owner">
            <summary>IConnectionPool.get_Owner()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Fakes.StubIIOService">
            <summary>Couchbase.IO.IIOService의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubIIOService.#ctor">
            <summary>type StubIIOService의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubIIOService.AttachBackingFieldToSaslMechanism">
            <summary>대리자를 연결하여 StubIIOService.SaslMechanism을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubIIOService.ConnectionPoolGet">
            <summary>IIOService.get_ConnectionPool()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubIIOService.cnc::Couchbase#IO#IIOService#Execute(Couchbase.IO.Operations.IOperation)">
            <summary>IIOService.Execute(IOperation operation)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubIIOService.cnc::Couchbase#IO#IIOService#Execute``1(Couchbase.IO.Operations.IOperation{``0})">
            <summary>IIOService.Execute(IOperation`1&lt;!!0&gt; operation)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubIIOService.cnc::Couchbase#IO#IIOService#Execute``1(Couchbase.IO.Operations.IOperation{``0},Couchbase.IO.IConnection)">
            <summary>IIOService.Execute(IOperation`1&lt;!!0&gt; operation, IConnection connection)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubIIOService.cnc::Couchbase#IO#IIOService#ExecuteAsync(Couchbase.IO.Operations.IOperation)">
            <summary>IIOService.ExecuteAsync(IOperation operation)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubIIOService.cnc::Couchbase#IO#IIOService#ExecuteAsync``1(Couchbase.IO.Operations.IOperation{``0})">
            <summary>IIOService.ExecuteAsync(IOperation`1&lt;!!0&gt; operation)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubIIOService.cnc::Couchbase#IO#IIOService#ExecuteAsync(Couchbase.IO.Operations.IOperation,Couchbase.IO.IConnection)">
            <summary>IIOService.ExecuteAsync(IOperation operation, IConnection connection)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubIIOService.cnc::Couchbase#IO#IIOService#ExecuteAsync``1(Couchbase.IO.Operations.IOperation{``0},Couchbase.IO.IConnection)">
            <summary>IIOService.ExecuteAsync(IOperation`1&lt;!!0&gt; operation, IConnection connection)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubIIOService.Dispose">
            <summary>IDisposable.Dispose()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubIIOService.EndPointGet">
            <summary>IIOService.get_EndPoint()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubIIOService.ExecuteAsyncIOperation">
            <summary>IIOService.ExecuteAsync(IOperation operation)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubIIOService.ExecuteAsyncIOperationIConnection">
            <summary>IIOService.ExecuteAsync(IOperation operation, IConnection connection)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubIIOService.ExecuteAsyncOf1IOperationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IO.Operations.IOperation{``0},System.Threading.Tasks.Task})">
            <summary>ExecuteAsync(IOperation`1&lt;!!0&gt; operation)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubIIOService.ExecuteAsyncOf1IOperationOfM0IConnection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IO.Operations.IOperation{``0},Couchbase.IO.IConnection,System.Threading.Tasks.Task})">
            <summary>ExecuteAsync(IOperation`1&lt;!!0&gt; operation, IConnection connection)의 스텁을 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubIIOService.ExecuteIOperation">
            <summary>IIOService.Execute(IOperation operation)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubIIOService.ExecuteOf1IOperationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IO.Operations.IOperation{``0},Couchbase.IOperationResult{``0}})">
            <summary>Execute(IOperation`1&lt;!!0&gt; operation)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubIIOService.ExecuteOf1IOperationOfM0IConnection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IO.Operations.IOperation{``0},Couchbase.IO.IConnection,Couchbase.IOperationResult{``0}})">
            <summary>Execute(IOperation`1&lt;!!0&gt; operation, IConnection connection)의 스텁을 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubIIOService.IsSecureGet">
            <summary>IIOService.get_IsSecure()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubIIOService.SaslMechanismGet">
            <summary>IIOService.get_SaslMechanism()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubIIOService.SaslMechanismSetISaslMechanism">
            <summary>IIOService.set_SaslMechanism(ISaslMechanism value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubIIOService.SupportsEnhancedDurabilityGet">
            <summary>IIOService.get_SupportsEnhancedDurability()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubIIOService.global::System#IDisposable#Dispose">
            <summary>IDisposable.Dispose()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubIIOService.cnc::Couchbase#IO#IIOService#ConnectionPool">
            <summary>IIOService.get_ConnectionPool()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubIIOService.cnc::Couchbase#IO#IIOService#EndPoint">
            <summary>IIOService.get_EndPoint()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubIIOService.cnc::Couchbase#IO#IIOService#IsSecure">
            <summary>IIOService.get_IsSecure()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubIIOService.cnc::Couchbase#IO#IIOService#SaslMechanism">
            <summary>IIOService.get_SaslMechanism()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubIIOService.cnc::Couchbase#IO#IIOService#SupportsEnhancedDurability">
            <summary>IIOService.get_SupportsEnhancedDurability()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Fakes.StubIOBuffer">
            <summary>Couchbase.IO.IOBuffer의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubIOBuffer.#ctor(System.Byte[],System.Int32,System.Int32)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubIOBuffer.InitializeStub">
            <summary>type StubIOBuffer의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubIOBuffer.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubIOBuffer.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubIOBuffer.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Fakes.StubMultiplexingConnection">
            <summary>Couchbase.IO.MultiplexingConnection의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubMultiplexingConnection.#ctor(Couchbase.IO.IConnectionPool,System.Net.Sockets.Socket,Couchbase.IO.Converters.IByteConverter,Couchbase.IO.BufferAllocator)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubMultiplexingConnection.Authenticate">
            <summary>ConnectionBase.Authenticate()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubMultiplexingConnection.Authenticate01">
            <summary>ConnectionBase.Authenticate()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubMultiplexingConnection.Dispose">
            <summary>MultiplexingConnection.Dispose()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubMultiplexingConnection.Dispose01">
            <summary>MultiplexingConnection.Dispose()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubMultiplexingConnection.HandleException(System.Exception,Couchbase.IO.Operations.IOperation)">
            <summary>ConnectionBase.HandleException(Exception e, IOperation operation)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubMultiplexingConnection.HandleExceptionExceptionIOperation">
            <summary>ConnectionBase.HandleException(Exception e, IOperation operation)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubMultiplexingConnection.InitializeStub">
            <summary>type StubMultiplexingConnection의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubMultiplexingConnection.Send(System.Byte[])">
            <summary>MultiplexingConnection.Send(Byte[] request)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubMultiplexingConnection.Send``1(Couchbase.IO.Operations.IOperation{``0})">
            <summary>ConnectionBase.Send(IOperation`1&lt;!!0&gt; operation)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubMultiplexingConnection.SendAsync(System.Byte[],System.Func{Couchbase.IO.SocketAsyncState,System.Threading.Tasks.Task})">
            <summary>MultiplexingConnection.SendAsync(Byte[] request, Func`2&lt;SocketAsyncState,Task&gt; callback)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubMultiplexingConnection.SendAsyncByteArrayFuncOfSocketAsyncStateTask">
            <summary>MultiplexingConnection.SendAsync(Byte[] request, Func`2&lt;SocketAsyncState,Task&gt; callback)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubMultiplexingConnection.SendByteArray">
            <summary>MultiplexingConnection.Send(Byte[] request)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubMultiplexingConnection.SendOf1IOperationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Couchbase.IO.Operations.IOperation{``0}})">
            <summary>Send(IOperation`1&lt;!!0&gt; operation)의 스텁을 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubMultiplexingConnection.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubMultiplexingConnection.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubMultiplexingConnection.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Fakes.StubOperationAsyncState">
            <summary>Couchbase.IO.OperationAsyncState의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubOperationAsyncState.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubOperationAsyncState.InitializeStub">
            <summary>type StubOperationAsyncState의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubOperationAsyncState.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubOperationAsyncState.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubOperationAsyncState.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Fakes.StubRemoteHostClosedException">
            <summary>Couchbase.IO.RemoteHostClosedException의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubRemoteHostClosedException.#ctor(System.String)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubRemoteHostClosedException.AttachBackingFieldToHelpLink">
            <summary>대리자를 연결하여 StubRemoteHostClosedException.HelpLink을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubRemoteHostClosedException.AttachBackingFieldToSource">
            <summary>대리자를 연결하여 StubRemoteHostClosedException.Source을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubRemoteHostClosedException.DataGet">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubRemoteHostClosedException.GetBaseException">
            <summary>Exception.GetBaseException()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubRemoteHostClosedException.GetBaseException01">
            <summary>Exception.GetBaseException()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubRemoteHostClosedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Exception.GetObjectData(SerializationInfo info, StreamingContext context)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubRemoteHostClosedException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Exception.GetObjectData(SerializationInfo info, StreamingContext context)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubRemoteHostClosedException.HelpLinkGet">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubRemoteHostClosedException.HelpLinkSetString">
            <summary>Exception.set_HelpLink(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubRemoteHostClosedException.InitializeStub">
            <summary>type StubRemoteHostClosedException의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubRemoteHostClosedException.MessageGet">
            <summary>Exception.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubRemoteHostClosedException.SourceGet">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubRemoteHostClosedException.SourceSetString">
            <summary>Exception.set_Source(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubRemoteHostClosedException.StackTraceGet">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubRemoteHostClosedException.ToString">
            <summary>Exception.ToString()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubRemoteHostClosedException.ToString01">
            <summary>Exception.ToString()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubRemoteHostClosedException.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubRemoteHostClosedException.Data">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubRemoteHostClosedException.HelpLink">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubRemoteHostClosedException.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubRemoteHostClosedException.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubRemoteHostClosedException.Message">
            <summary>Exception.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubRemoteHostClosedException.Source">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubRemoteHostClosedException.StackTrace">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Fakes.StubRemoteHostTimeoutException">
            <summary>Couchbase.IO.RemoteHostTimeoutException의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubRemoteHostTimeoutException.#ctor(System.String)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubRemoteHostTimeoutException.AttachBackingFieldToHelpLink">
            <summary>대리자를 연결하여 StubRemoteHostTimeoutException.HelpLink을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubRemoteHostTimeoutException.AttachBackingFieldToSource">
            <summary>대리자를 연결하여 StubRemoteHostTimeoutException.Source을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubRemoteHostTimeoutException.DataGet">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubRemoteHostTimeoutException.GetBaseException">
            <summary>Exception.GetBaseException()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubRemoteHostTimeoutException.GetBaseException01">
            <summary>Exception.GetBaseException()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubRemoteHostTimeoutException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Exception.GetObjectData(SerializationInfo info, StreamingContext context)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubRemoteHostTimeoutException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Exception.GetObjectData(SerializationInfo info, StreamingContext context)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubRemoteHostTimeoutException.HelpLinkGet">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubRemoteHostTimeoutException.HelpLinkSetString">
            <summary>Exception.set_HelpLink(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubRemoteHostTimeoutException.InitializeStub">
            <summary>type StubRemoteHostTimeoutException의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubRemoteHostTimeoutException.MessageGet">
            <summary>Exception.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubRemoteHostTimeoutException.SourceGet">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubRemoteHostTimeoutException.SourceSetString">
            <summary>Exception.set_Source(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubRemoteHostTimeoutException.StackTraceGet">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubRemoteHostTimeoutException.ToString">
            <summary>Exception.ToString()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubRemoteHostTimeoutException.ToString01">
            <summary>Exception.ToString()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubRemoteHostTimeoutException.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubRemoteHostTimeoutException.Data">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubRemoteHostTimeoutException.HelpLink">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubRemoteHostTimeoutException.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubRemoteHostTimeoutException.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubRemoteHostTimeoutException.Message">
            <summary>Exception.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubRemoteHostTimeoutException.Source">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubRemoteHostTimeoutException.StackTrace">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Fakes.StubSslConnection">
            <summary>Couchbase.IO.SslConnection의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubSslConnection.#ctor(Couchbase.IO.IConnectionPool,System.Net.Sockets.Socket,Couchbase.IO.Converters.IByteConverter,Couchbase.IO.BufferAllocator)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubSslConnection.#ctor(Couchbase.IO.IConnectionPool,System.Net.Sockets.Socket,System.Net.Security.SslStream,Couchbase.IO.Converters.IByteConverter,Couchbase.IO.BufferAllocator)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubSslConnection.Authenticate">
            <summary>SslConnection.Authenticate()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubSslConnection.Authenticate01">
            <summary>SslConnection.Authenticate()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubSslConnection.Dispose">
            <summary>SslConnection.Dispose()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubSslConnection.Dispose01">
            <summary>SslConnection.Dispose()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubSslConnection.HandleException(System.Exception,Couchbase.IO.Operations.IOperation)">
            <summary>ConnectionBase.HandleException(Exception e, IOperation operation)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubSslConnection.HandleExceptionExceptionIOperation">
            <summary>ConnectionBase.HandleException(Exception e, IOperation operation)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubSslConnection.InitializeStub">
            <summary>type StubSslConnection의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubSslConnection.Send``1(Couchbase.IO.Operations.IOperation{``0})">
            <summary>SslConnection.Send(IOperation`1&lt;!!0&gt; operation)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubSslConnection.Send(System.Byte[])">
            <summary>SslConnection.Send(Byte[] buffer)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubSslConnection.SendAsync(System.Byte[],System.Func{Couchbase.IO.SocketAsyncState,System.Threading.Tasks.Task})">
            <summary>SslConnection.SendAsync(Byte[] request, Func`2&lt;SocketAsyncState,Task&gt; callback)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubSslConnection.SendAsyncByteArrayFuncOfSocketAsyncStateTask">
            <summary>SslConnection.SendAsync(Byte[] request, Func`2&lt;SocketAsyncState,Task&gt; callback)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Fakes.StubSslConnection.SendByteArray">
            <summary>SslConnection.Send(Byte[] buffer)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Fakes.StubSslConnection.SendOf1IOperationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Couchbase.IO.Operations.IOperation{``0}})">
            <summary>Send(IOperation`1&lt;!!0&gt; operation)의 스텁을 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubSslConnection.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubSslConnection.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Fakes.StubSslConnection.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Http.Fakes.ShimCouchbaseHttpClient">
            <summary>Couchbase.IO.Http.CouchbaseHttpClient의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Http.Fakes.ShimCouchbaseHttpClient.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Http.Fakes.ShimCouchbaseHttpClient.#ctor(Couchbase.IO.Http.CouchbaseHttpClient)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Http.Fakes.ShimCouchbaseHttpClient.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Http.Fakes.ShimCouchbaseHttpClient.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Http.Fakes.ShimCouchbaseHttpClient.Bind(System.IDisposable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Http.Fakes.ShimCouchbaseHttpClient.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Http.Fakes.ShimCouchbaseHttpClient.ConstructorClientConfigurationIBucketConfig">
            <summary>CouchbaseHttpClient.CouchbaseHttpClient(ClientConfiguration config, IBucketConfig bucketConfig)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Http.Fakes.ShimCouchbaseHttpClient.ConstructorStringString">
            <summary>CouchbaseHttpClient.CouchbaseHttpClient(String bucketName, String password)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Http.Fakes.ShimCouchbaseHttpClient.OnCertificateValidationObjectX509CertificateX509ChainSslPolicyErrors">
            <summary>CouchbaseHttpClient.OnCertificateValidation(Object sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Http.Fakes.ShimCouchbaseHttpClient.StaticConstructor">
            <summary>CouchbaseHttpClient.CouchbaseHttpClient()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Http.Fakes.ShimCouchbaseHttpClient.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.IO.Operations.Fakes.ShimFlags">
            <summary>Couchbase.IO.Operations.Flags의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.ShimFlags.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.ShimFlags.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.ShimFlags.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.ShimFlags.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Operations.Fakes.ShimFlags.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.IO.Operations.Fakes.ShimObserveState">
            <summary>Couchbase.IO.Operations.ObserveState의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.ShimObserveState.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.ShimObserveState.#ctor(Couchbase.IO.Operations.ObserveState)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.ShimObserveState.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.ShimObserveState.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.ShimObserveState.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.ShimObserveState.CasGet">
            <summary>ObserveState.get_Cas()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.ShimObserveState.CasSetUInt64">
            <summary>ObserveState.set_Cas(UInt64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.ShimObserveState.Constructor">
            <summary>ObserveState.ObserveState()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.ShimObserveState.KeyGet">
            <summary>ObserveState.get_Key()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.ShimObserveState.KeyLengthGet">
            <summary>ObserveState.get_KeyLength()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.ShimObserveState.KeyLengthSetInt32">
            <summary>ObserveState.set_KeyLength(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.ShimObserveState.KeySetString">
            <summary>ObserveState.set_Key(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.ShimObserveState.KeyStateGet">
            <summary>ObserveState.get_KeyState()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.ShimObserveState.KeyStateSetKeyState">
            <summary>ObserveState.set_KeyState(KeyState value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.ShimObserveState.PersistStatGet">
            <summary>ObserveState.get_PersistStat()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.ShimObserveState.PersistStatSetUInt32">
            <summary>ObserveState.set_PersistStat(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.ShimObserveState.ReplStateGet">
            <summary>ObserveState.get_ReplState()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.ShimObserveState.ReplStateSetUInt32">
            <summary>ObserveState.set_ReplState(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.ShimObserveState.ToString">
            <summary>ObserveState.ToString()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.ShimObserveState.VBucketGet">
            <summary>ObserveState.get_VBucket()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.ShimObserveState.VBucketSetInt32">
            <summary>ObserveState.set_VBucket(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Operations.Fakes.ShimObserveState.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.ShimObserveState.AllInstances.CasGet">
            <summary>ObserveState.get_Cas()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.ShimObserveState.AllInstances.CasSetUInt64">
            <summary>ObserveState.set_Cas(UInt64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.ShimObserveState.AllInstances.KeyGet">
            <summary>ObserveState.get_Key()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.ShimObserveState.AllInstances.KeyLengthGet">
            <summary>ObserveState.get_KeyLength()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.ShimObserveState.AllInstances.KeyLengthSetInt32">
            <summary>ObserveState.set_KeyLength(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.ShimObserveState.AllInstances.KeySetString">
            <summary>ObserveState.set_Key(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.ShimObserveState.AllInstances.KeyStateGet">
            <summary>ObserveState.get_KeyState()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.ShimObserveState.AllInstances.KeyStateSetKeyState">
            <summary>ObserveState.set_KeyState(KeyState value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.ShimObserveState.AllInstances.PersistStatGet">
            <summary>ObserveState.get_PersistStat()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.ShimObserveState.AllInstances.PersistStatSetUInt32">
            <summary>ObserveState.set_PersistStat(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.ShimObserveState.AllInstances.ReplStateGet">
            <summary>ObserveState.get_ReplState()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.ShimObserveState.AllInstances.ReplStateSetUInt32">
            <summary>ObserveState.set_ReplState(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.ShimObserveState.AllInstances.ToString01">
            <summary>ObserveState.ToString()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.ShimObserveState.AllInstances.VBucketGet">
            <summary>ObserveState.get_VBucket()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.ShimObserveState.AllInstances.VBucketSetInt32">
            <summary>ObserveState.set_VBucket(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Operations.Fakes.ShimOperationBody">
            <summary>Couchbase.IO.Operations.OperationBody의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.ShimOperationBody.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.ShimOperationBody.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.ShimOperationBody.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.ShimOperationBody.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Operations.Fakes.ShimOperationBody.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.IO.Operations.Fakes.ShimOperationHeader">
            <summary>Couchbase.IO.Operations.OperationHeader의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.ShimOperationHeader.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.ShimOperationHeader.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.ShimOperationHeader.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.ShimOperationHeader.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Operations.Fakes.ShimOperationHeader.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.IO.Operations.Fakes.ShimSequenceGenerator">
            <summary>Couchbase.IO.Operations.SequenceGenerator의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.ShimSequenceGenerator.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.ShimSequenceGenerator.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.ShimSequenceGenerator.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.ShimSequenceGenerator.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.ShimSequenceGenerator.GetNext">
            <summary>SequenceGenerator.GetNext()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.ShimSequenceGenerator.Reset">
            <summary>SequenceGenerator.Reset()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Operations.Fakes.StubIOperation">
            <summary>Couchbase.IO.Operations.IOperation의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation.#ctor">
            <summary>type StubIOperation의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation.AttachBackingFieldToAttempts">
            <summary>대리자를 연결하여 StubIOperation.Attempts을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation.AttachBackingFieldToBody">
            <summary>대리자를 연결하여 StubIOperation.Body을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation.AttachBackingFieldToBuffer">
            <summary>대리자를 연결하여 StubIOperation.Buffer을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation.AttachBackingFieldToCas">
            <summary>대리자를 연결하여 StubIOperation.Cas을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation.AttachBackingFieldToCompleted">
            <summary>대리자를 연결하여 StubIOperation.Completed을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation.AttachBackingFieldToCreationTime">
            <summary>대리자를 연결하여 StubIOperation.CreationTime을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation.AttachBackingFieldToCurrentHost">
            <summary>대리자를 연결하여 StubIOperation.CurrentHost을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation.AttachBackingFieldToData">
            <summary>대리자를 연결하여 StubIOperation.Data을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation.AttachBackingFieldToException">
            <summary>대리자를 연결하여 StubIOperation.Exception을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation.AttachBackingFieldToHeader">
            <summary>대리자를 연결하여 StubIOperation.Header을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation.AttachBackingFieldToLastConfigRevisionTried">
            <summary>대리자를 연결하여 StubIOperation.LastConfigRevisionTried을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation.AttachBackingFieldToTimeout">
            <summary>대리자를 연결하여 StubIOperation.Timeout을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation.AttachBackingFieldToTimer">
            <summary>대리자를 연결하여 StubIOperation.Timer을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation.AttachBackingFieldToVBucket">
            <summary>대리자를 연결하여 StubIOperation.VBucket을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation.AttachBackingFieldToWriteBuffer">
            <summary>대리자를 연결하여 StubIOperation.WriteBuffer을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.AttemptsGet">
            <summary>IOperation.get_Attempts()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.AttemptsSetInt32">
            <summary>IOperation.set_Attempts(Int32 value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.BeginTimerTimingLevel">
            <summary>IOperation.BeginTimer(TimingLevel level)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.BodyGet">
            <summary>IOperation.get_Body()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.BodyOffsetGet">
            <summary>IOperation.get_BodyOffset()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.BodySetOperationBody">
            <summary>IOperation.set_Body(OperationBody value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.BufferGet">
            <summary>IOperation.get_Buffer()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.BufferSetByteArray">
            <summary>IOperation.set_Buffer(Byte[] value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.CanRetry">
            <summary>IOperation.CanRetry()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.CasGet">
            <summary>IOperation.get_Cas()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.CasSetUInt64">
            <summary>IOperation.set_Cas(UInt64 value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.Clone">
            <summary>IOperation.Clone()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.CompletedGet">
            <summary>IOperation.get_Completed()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.CompletedSetFuncOfSocketAsyncStateTask">
            <summary>IOperation.set_Completed(Func`2&lt;SocketAsyncState,Task&gt; value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation.cnc::Couchbase#IO#Operations#IOperation#BeginTimer(Couchbase.Core.Diagnostics.TimingLevel)">
            <summary>IOperation.BeginTimer(TimingLevel level)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation.cnc::Couchbase#IO#Operations#IOperation#CanRetry">
            <summary>IOperation.CanRetry()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation.cnc::Couchbase#IO#Operations#IOperation#Clone">
            <summary>IOperation.Clone()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation.cnc::Couchbase#IO#Operations#IOperation#EndTimer(Couchbase.Core.Diagnostics.TimingLevel)">
            <summary>IOperation.EndTimer(TimingLevel level)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation.cnc::Couchbase#IO#Operations#IOperation#GetConfig">
            <summary>IOperation.GetConfig()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation.cnc::Couchbase#IO#Operations#IOperation#GetMessage">
            <summary>IOperation.GetMessage()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation.cnc::Couchbase#IO#Operations#IOperation#GetResult">
            <summary>IOperation.GetResult()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation.cnc::Couchbase#IO#Operations#IOperation#HandleClientError(System.String,Couchbase.IO.ResponseStatus)">
            <summary>IOperation.HandleClientError(String message, ResponseStatus responseStatus)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation.cnc::Couchbase#IO#Operations#IOperation#Read(System.Byte[],System.Int32,System.Int32)">
            <summary>IOperation.Read(Byte[] buffer, Int32 offset, Int32 length)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation.cnc::Couchbase#IO#Operations#IOperation#ReadAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>IOperation.ReadAsync(Byte[] buffer, Int32 offset, Int32 length)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation.cnc::Couchbase#IO#Operations#IOperation#Reset">
            <summary>IOperation.Reset()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation.cnc::Couchbase#IO#Operations#IOperation#TimedOut">
            <summary>IOperation.TimedOut()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation.cnc::Couchbase#IO#Operations#IOperation#Write">
            <summary>IOperation.Write()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation.cnc::Couchbase#IO#Operations#IOperation#WriteAsync">
            <summary>IOperation.WriteAsync()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.CreationTimeGet">
            <summary>IOperation.get_CreationTime()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.CreationTimeSetDateTime">
            <summary>IOperation.set_CreationTime(DateTime value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.CurrentHostGet">
            <summary>IOperation.get_CurrentHost()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.CurrentHostSetIPEndPoint">
            <summary>IOperation.set_CurrentHost(IPEndPoint value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.DataGet">
            <summary>IOperation.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.DataSetMemoryStream">
            <summary>IOperation.set_Data(MemoryStream value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.EndTimerTimingLevel">
            <summary>IOperation.EndTimer(TimingLevel level)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.ExceptionGet">
            <summary>IOperation.get_Exception()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.ExceptionSetException">
            <summary>IOperation.set_Exception(Exception value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.GetConfig">
            <summary>IOperation.GetConfig()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.GetMessage">
            <summary>IOperation.GetMessage()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.GetResult">
            <summary>IOperation.GetResult()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.HandleClientErrorStringResponseStatus">
            <summary>IOperation.HandleClientError(String message, ResponseStatus responseStatus)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.HeaderGet">
            <summary>IOperation.get_Header()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.HeaderSetOperationHeader">
            <summary>IOperation.set_Header(OperationHeader value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.KeyGet">
            <summary>IOperation.get_Key()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.LastConfigRevisionTriedGet">
            <summary>IOperation.get_LastConfigRevisionTried()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.LastConfigRevisionTriedSetUInt32">
            <summary>IOperation.set_LastConfigRevisionTried(UInt32 value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.LengthReceivedGet">
            <summary>IOperation.get_LengthReceived()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.MaxRetriesGet">
            <summary>IOperation.get_MaxRetries()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.OpaqueGet">
            <summary>IOperation.get_Opaque()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.OperationCodeGet">
            <summary>IOperation.get_OperationCode()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.ReadAsyncByteArrayInt32Int32">
            <summary>IOperation.ReadAsync(Byte[] buffer, Int32 offset, Int32 length)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.ReadByteArrayInt32Int32">
            <summary>IOperation.Read(Byte[] buffer, Int32 offset, Int32 length)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.Reset">
            <summary>IOperation.Reset()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.TimedOut">
            <summary>IOperation.TimedOut()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.TimeoutGet">
            <summary>IOperation.get_Timeout()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.TimeoutSetUInt32">
            <summary>IOperation.set_Timeout(UInt32 value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.TimerGet">
            <summary>IOperation.get_Timer()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.TimerSetFuncOfTimingLevelObjectIOperationTimer">
            <summary>IOperation.set_Timer(Func`3&lt;TimingLevel,Object,IOperationTimer&gt; value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.TotalLengthGet">
            <summary>IOperation.get_TotalLength()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.VBucketGet">
            <summary>IOperation.get_VBucket()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.VBucketSetIVBucket">
            <summary>IOperation.set_VBucket(IVBucket value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.Write">
            <summary>IOperation.Write()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.WriteAsync">
            <summary>IOperation.WriteAsync()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.WriteBufferGet">
            <summary>IOperation.get_WriteBuffer()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation.WriteBufferSetByteArray">
            <summary>IOperation.set_WriteBuffer(Byte[] value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.StubIOperation.cnc::Couchbase#IO#Operations#IOperation#Attempts">
            <summary>IOperation.get_Attempts()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.StubIOperation.cnc::Couchbase#IO#Operations#IOperation#Body">
            <summary>IOperation.get_Body()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.StubIOperation.cnc::Couchbase#IO#Operations#IOperation#BodyOffset">
            <summary>IOperation.get_BodyOffset()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.StubIOperation.cnc::Couchbase#IO#Operations#IOperation#Buffer">
            <summary>IOperation.get_Buffer()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.StubIOperation.cnc::Couchbase#IO#Operations#IOperation#Cas">
            <summary>IOperation.get_Cas()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.StubIOperation.cnc::Couchbase#IO#Operations#IOperation#Completed">
            <summary>IOperation.get_Completed()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.StubIOperation.cnc::Couchbase#IO#Operations#IOperation#CreationTime">
            <summary>IOperation.get_CreationTime()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.StubIOperation.cnc::Couchbase#IO#Operations#IOperation#CurrentHost">
            <summary>IOperation.get_CurrentHost()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.StubIOperation.cnc::Couchbase#IO#Operations#IOperation#Data">
            <summary>IOperation.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.StubIOperation.cnc::Couchbase#IO#Operations#IOperation#Exception">
            <summary>IOperation.get_Exception()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.StubIOperation.cnc::Couchbase#IO#Operations#IOperation#Header">
            <summary>IOperation.get_Header()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.StubIOperation.cnc::Couchbase#IO#Operations#IOperation#Key">
            <summary>IOperation.get_Key()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.StubIOperation.cnc::Couchbase#IO#Operations#IOperation#LastConfigRevisionTried">
            <summary>IOperation.get_LastConfigRevisionTried()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.StubIOperation.cnc::Couchbase#IO#Operations#IOperation#LengthReceived">
            <summary>IOperation.get_LengthReceived()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.StubIOperation.cnc::Couchbase#IO#Operations#IOperation#MaxRetries">
            <summary>IOperation.get_MaxRetries()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.StubIOperation.cnc::Couchbase#IO#Operations#IOperation#Opaque">
            <summary>IOperation.get_Opaque()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.StubIOperation.cnc::Couchbase#IO#Operations#IOperation#OperationCode">
            <summary>IOperation.get_OperationCode()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.StubIOperation.cnc::Couchbase#IO#Operations#IOperation#Timeout">
            <summary>IOperation.get_Timeout()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.StubIOperation.cnc::Couchbase#IO#Operations#IOperation#Timer">
            <summary>IOperation.get_Timer()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.StubIOperation.cnc::Couchbase#IO#Operations#IOperation#TotalLength">
            <summary>IOperation.get_TotalLength()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.StubIOperation.cnc::Couchbase#IO#Operations#IOperation#VBucket">
            <summary>IOperation.get_VBucket()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.StubIOperation.cnc::Couchbase#IO#Operations#IOperation#WriteBuffer">
            <summary>IOperation.get_WriteBuffer()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Operations.Fakes.StubIOperation`1">
            <summary>Couchbase.IO.Operations.IOperation`1의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation`1.#ctor">
            <summary>type StubIOperation의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation`1.AttachBackingFieldToAttempts">
            <summary>대리자를 연결하여 StubIOperation.Attempts을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation`1.AttachBackingFieldToBody">
            <summary>대리자를 연결하여 StubIOperation.Body을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation`1.AttachBackingFieldToBuffer">
            <summary>대리자를 연결하여 StubIOperation.Buffer을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation`1.AttachBackingFieldToCas">
            <summary>대리자를 연결하여 StubIOperation.Cas을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation`1.AttachBackingFieldToCompleted">
            <summary>대리자를 연결하여 StubIOperation.Completed을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation`1.AttachBackingFieldToCreationTime">
            <summary>대리자를 연결하여 StubIOperation.CreationTime을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation`1.AttachBackingFieldToCurrentHost">
            <summary>대리자를 연결하여 StubIOperation.CurrentHost을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation`1.AttachBackingFieldToData">
            <summary>대리자를 연결하여 StubIOperation.Data을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation`1.AttachBackingFieldToException">
            <summary>대리자를 연결하여 StubIOperation.Exception을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation`1.AttachBackingFieldToHeader">
            <summary>대리자를 연결하여 StubIOperation.Header을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation`1.AttachBackingFieldToLastConfigRevisionTried">
            <summary>대리자를 연결하여 StubIOperation.LastConfigRevisionTried을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation`1.AttachBackingFieldToTimeout">
            <summary>대리자를 연결하여 StubIOperation.Timeout을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation`1.AttachBackingFieldToTimer">
            <summary>대리자를 연결하여 StubIOperation.Timer을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation`1.AttachBackingFieldToVBucket">
            <summary>대리자를 연결하여 StubIOperation.VBucket을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation`1.AttachBackingFieldToWriteBuffer">
            <summary>대리자를 연결하여 StubIOperation.WriteBuffer을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.AttemptsGet">
            <summary>IOperation.get_Attempts()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.AttemptsSetInt32">
            <summary>IOperation.set_Attempts(Int32 value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.BeginTimerTimingLevel">
            <summary>IOperation.BeginTimer(TimingLevel level)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.BodyGet">
            <summary>IOperation.get_Body()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.BodyOffsetGet">
            <summary>IOperation.get_BodyOffset()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.BodySetOperationBody">
            <summary>IOperation.set_Body(OperationBody value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.BufferGet">
            <summary>IOperation.get_Buffer()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.BufferSetByteArray">
            <summary>IOperation.set_Buffer(Byte[] value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.CanRetry">
            <summary>IOperation.CanRetry()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.CasGet">
            <summary>IOperation.get_Cas()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.CasSetUInt64">
            <summary>IOperation.set_Cas(UInt64 value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.Clone">
            <summary>IOperation.Clone()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.CompletedGet">
            <summary>IOperation.get_Completed()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.CompletedSetFuncOfSocketAsyncStateTask">
            <summary>IOperation.set_Completed(Func`2&lt;SocketAsyncState,Task&gt; value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation`1.cnc::Couchbase#IO#Operations#IOperation#BeginTimer(Couchbase.Core.Diagnostics.TimingLevel)">
            <summary>IOperation.BeginTimer(TimingLevel level)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation`1.cnc::Couchbase#IO#Operations#IOperation#CanRetry">
            <summary>IOperation.CanRetry()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation`1.cnc::Couchbase#IO#Operations#IOperation#Clone">
            <summary>IOperation.Clone()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation`1.cnc::Couchbase#IO#Operations#IOperation#EndTimer(Couchbase.Core.Diagnostics.TimingLevel)">
            <summary>IOperation.EndTimer(TimingLevel level)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation`1.cnc::Couchbase#IO#Operations#IOperation#GetConfig">
            <summary>IOperation.GetConfig()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation`1.cnc::Couchbase#IO#Operations#IOperation#GetMessage">
            <summary>IOperation.GetMessage()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation`1.cnc::Couchbase#IO#Operations#IOperation#GetResult">
            <summary>IOperation.GetResult()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation`1.cnc::Couchbase#IO#Operations#IOperation#HandleClientError(System.String,Couchbase.IO.ResponseStatus)">
            <summary>IOperation.HandleClientError(String message, ResponseStatus responseStatus)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation`1.cnc::Couchbase#IO#Operations#IOperation#Read(System.Byte[],System.Int32,System.Int32)">
            <summary>IOperation.Read(Byte[] buffer, Int32 offset, Int32 length)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation`1.cnc::Couchbase#IO#Operations#IOperation#ReadAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>IOperation.ReadAsync(Byte[] buffer, Int32 offset, Int32 length)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation`1.cnc::Couchbase#IO#Operations#IOperation#Reset">
            <summary>IOperation.Reset()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation`1.cnc::Couchbase#IO#Operations#IOperation#TimedOut">
            <summary>IOperation.TimedOut()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation`1.cnc::Couchbase#IO#Operations#IOperation#Write">
            <summary>IOperation.Write()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation`1.cnc::Couchbase#IO#Operations#IOperation#WriteAsync">
            <summary>IOperation.WriteAsync()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation`1.cnc::Couchbase#IO#Operations#IOperation{T}#GetResultWithValue">
            <summary>IOperation`1.GetResultWithValue()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Operations.Fakes.StubIOperation`1.cnc::Couchbase#IO#Operations#IOperation{T}#GetValue">
            <summary>IOperation`1.GetValue()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.CreationTimeGet">
            <summary>IOperation.get_CreationTime()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.CreationTimeSetDateTime">
            <summary>IOperation.set_CreationTime(DateTime value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.CurrentHostGet">
            <summary>IOperation.get_CurrentHost()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.CurrentHostSetIPEndPoint">
            <summary>IOperation.set_CurrentHost(IPEndPoint value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.DataGet">
            <summary>IOperation.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.DataSetMemoryStream">
            <summary>IOperation.set_Data(MemoryStream value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.EndTimerTimingLevel">
            <summary>IOperation.EndTimer(TimingLevel level)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.ExceptionGet">
            <summary>IOperation.get_Exception()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.ExceptionSetException">
            <summary>IOperation.set_Exception(Exception value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.GetConfig">
            <summary>IOperation.GetConfig()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.GetMessage">
            <summary>IOperation.GetMessage()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.GetResult">
            <summary>IOperation.GetResult()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.GetResultWithValue">
            <summary>IOperation`1.GetResultWithValue()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.GetValue">
            <summary>IOperation`1.GetValue()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.HandleClientErrorStringResponseStatus">
            <summary>IOperation.HandleClientError(String message, ResponseStatus responseStatus)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.HeaderGet">
            <summary>IOperation.get_Header()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.HeaderSetOperationHeader">
            <summary>IOperation.set_Header(OperationHeader value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.KeyGet">
            <summary>IOperation.get_Key()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.LastConfigRevisionTriedGet">
            <summary>IOperation.get_LastConfigRevisionTried()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.LastConfigRevisionTriedSetUInt32">
            <summary>IOperation.set_LastConfigRevisionTried(UInt32 value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.LengthReceivedGet">
            <summary>IOperation.get_LengthReceived()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.MaxRetriesGet">
            <summary>IOperation.get_MaxRetries()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.OpaqueGet">
            <summary>IOperation.get_Opaque()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.OperationCodeGet">
            <summary>IOperation.get_OperationCode()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.ReadAsyncByteArrayInt32Int32">
            <summary>IOperation.ReadAsync(Byte[] buffer, Int32 offset, Int32 length)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.ReadByteArrayInt32Int32">
            <summary>IOperation.Read(Byte[] buffer, Int32 offset, Int32 length)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.Reset">
            <summary>IOperation.Reset()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.TimedOut">
            <summary>IOperation.TimedOut()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.TimeoutGet">
            <summary>IOperation.get_Timeout()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.TimeoutSetUInt32">
            <summary>IOperation.set_Timeout(UInt32 value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.TimerGet">
            <summary>IOperation.get_Timer()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.TimerSetFuncOfTimingLevelObjectIOperationTimer">
            <summary>IOperation.set_Timer(Func`3&lt;TimingLevel,Object,IOperationTimer&gt; value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.TotalLengthGet">
            <summary>IOperation.get_TotalLength()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.TranscoderGet">
            <summary>IOperation`1.get_Transcoder()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.VBucketGet">
            <summary>IOperation.get_VBucket()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.VBucketSetIVBucket">
            <summary>IOperation.set_VBucket(IVBucket value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.Write">
            <summary>IOperation.Write()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.WriteAsync">
            <summary>IOperation.WriteAsync()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.WriteBufferGet">
            <summary>IOperation.get_WriteBuffer()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.IO.Operations.Fakes.StubIOperation`1.WriteBufferSetByteArray">
            <summary>IOperation.set_WriteBuffer(Byte[] value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.StubIOperation`1.cnc::Couchbase#IO#Operations#IOperation#Attempts">
            <summary>IOperation.get_Attempts()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.StubIOperation`1.cnc::Couchbase#IO#Operations#IOperation#Body">
            <summary>IOperation.get_Body()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.StubIOperation`1.cnc::Couchbase#IO#Operations#IOperation#BodyOffset">
            <summary>IOperation.get_BodyOffset()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.StubIOperation`1.cnc::Couchbase#IO#Operations#IOperation#Buffer">
            <summary>IOperation.get_Buffer()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.StubIOperation`1.cnc::Couchbase#IO#Operations#IOperation#Cas">
            <summary>IOperation.get_Cas()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.StubIOperation`1.cnc::Couchbase#IO#Operations#IOperation#Completed">
            <summary>IOperation.get_Completed()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.StubIOperation`1.cnc::Couchbase#IO#Operations#IOperation#CreationTime">
            <summary>IOperation.get_CreationTime()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.StubIOperation`1.cnc::Couchbase#IO#Operations#IOperation#CurrentHost">
            <summary>IOperation.get_CurrentHost()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.StubIOperation`1.cnc::Couchbase#IO#Operations#IOperation#Data">
            <summary>IOperation.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.StubIOperation`1.cnc::Couchbase#IO#Operations#IOperation#Exception">
            <summary>IOperation.get_Exception()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.StubIOperation`1.cnc::Couchbase#IO#Operations#IOperation#Header">
            <summary>IOperation.get_Header()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.StubIOperation`1.cnc::Couchbase#IO#Operations#IOperation#Key">
            <summary>IOperation.get_Key()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.StubIOperation`1.cnc::Couchbase#IO#Operations#IOperation#LastConfigRevisionTried">
            <summary>IOperation.get_LastConfigRevisionTried()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.StubIOperation`1.cnc::Couchbase#IO#Operations#IOperation#LengthReceived">
            <summary>IOperation.get_LengthReceived()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.StubIOperation`1.cnc::Couchbase#IO#Operations#IOperation#MaxRetries">
            <summary>IOperation.get_MaxRetries()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.StubIOperation`1.cnc::Couchbase#IO#Operations#IOperation#Opaque">
            <summary>IOperation.get_Opaque()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.StubIOperation`1.cnc::Couchbase#IO#Operations#IOperation#OperationCode">
            <summary>IOperation.get_OperationCode()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.StubIOperation`1.cnc::Couchbase#IO#Operations#IOperation#Timeout">
            <summary>IOperation.get_Timeout()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.StubIOperation`1.cnc::Couchbase#IO#Operations#IOperation#Timer">
            <summary>IOperation.get_Timer()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.StubIOperation`1.cnc::Couchbase#IO#Operations#IOperation#TotalLength">
            <summary>IOperation.get_TotalLength()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.StubIOperation`1.cnc::Couchbase#IO#Operations#IOperation{T}#Transcoder">
            <summary>IOperation`1.get_Transcoder()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.StubIOperation`1.cnc::Couchbase#IO#Operations#IOperation#VBucket">
            <summary>IOperation.get_VBucket()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Operations.Fakes.StubIOperation`1.cnc::Couchbase#IO#Operations#IOperation#WriteBuffer">
            <summary>IOperation.get_WriteBuffer()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService">
            <summary>Couchbase.IO.Services.MultiplexingIOService의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.#ctor(Couchbase.IO.Services.MultiplexingIOService)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.Bind(Couchbase.IO.IIOService)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.Bind(System.IDisposable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.ExecuteAsyncOf1IOperationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IO.Operations.IOperation{``0},System.Threading.Tasks.Task})">
            <summary>MultiplexingIOService.ExecuteAsync(IOperation`1&lt;!!0&gt; operation)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.ExecuteAsyncOf1IOperationOfM0IConnection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IO.Operations.IOperation{``0},Couchbase.IO.IConnection,System.Threading.Tasks.Task})">
            <summary>MultiplexingIOService.ExecuteAsync(IOperation`1&lt;!!0&gt; operation, IConnection connection)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.ExecuteOf1IOperationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IO.Operations.IOperation{``0},Couchbase.IOperationResult{``0}})">
            <summary>MultiplexingIOService.Execute(IOperation`1&lt;!!0&gt; operation)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.ExecuteOf1IOperationOfM0IConnection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IO.Operations.IOperation{``0},Couchbase.IO.IConnection,Couchbase.IOperationResult{``0}})">
            <summary>MultiplexingIOService.Execute(IOperation`1&lt;!!0&gt; operation, IConnection connection)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.AuthenticateIConnection">
            <summary>MultiplexingIOService.Authenticate(IConnection connection)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.ConnectionPoolGet">
            <summary>MultiplexingIOService.get_ConnectionPool()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.ConstructorIConnectionPool">
            <summary>MultiplexingIOService.MultiplexingIOService(IConnectionPool connectionPool)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.ConstructorIConnectionPoolISaslMechanism">
            <summary>MultiplexingIOService.MultiplexingIOService(IConnectionPool connectionPool, ISaslMechanism saslMechanism)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.Dispose">
            <summary>MultiplexingIOService.Dispose()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.DisposeBoolean">
            <summary>MultiplexingIOService.Dispose(Boolean disposing)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.EnableEnhancedDurabilityIConnection">
            <summary>MultiplexingIOService.EnableEnhancedDurability(IConnection connection)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.EndPointGet">
            <summary>MultiplexingIOService.get_EndPoint()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.ExecuteAsyncIOperation">
            <summary>MultiplexingIOService.ExecuteAsync(IOperation operation)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.ExecuteAsyncIOperationIConnection">
            <summary>MultiplexingIOService.ExecuteAsync(IOperation operation, IConnection connection)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.ExecuteIOperation">
            <summary>MultiplexingIOService.Execute(IOperation operation)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.HandleExceptionExceptionDispatchInfoIOperation">
            <summary>MultiplexingIOService.HandleException(ExceptionDispatchInfo capturedException, IOperation operation)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.IsSecureGet">
            <summary>MultiplexingIOService.get_IsSecure()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.LogFailedHelloOperationIResult">
            <summary>MultiplexingIOService.LogFailedHelloOperation(IResult result)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.SaslMechanismGet">
            <summary>MultiplexingIOService.get_SaslMechanism()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.SaslMechanismSetISaslMechanism">
            <summary>MultiplexingIOService.set_SaslMechanism(ISaslMechanism value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.StaticConstructor">
            <summary>MultiplexingIOService.MultiplexingIOService()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.SupportsEnhancedDurabilityGet">
            <summary>MultiplexingIOService.get_SupportsEnhancedDurability()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.SupportsEnhancedDurabilitySetBoolean">
            <summary>MultiplexingIOService.set_SupportsEnhancedDurability(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService._Authenticateb__30_0FormatMessageHandler">
            <summary>MultiplexingIOService.&lt;Authenticate&gt;b__30_0(FormatMessageHandler m)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService._Authenticateb__30_1FormatMessageHandler">
            <summary>MultiplexingIOService.&lt;Authenticate&gt;b__30_1(FormatMessageHandler m)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService._Disposeb__33_0FormatMessageHandler">
            <summary>MultiplexingIOService.&lt;Dispose&gt;b__33_0(FormatMessageHandler m)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService._ctorb__6_0FormatMessageHandler">
            <summary>MultiplexingIOService.&lt;.ctor&gt;b__6_0(FormatMessageHandler m)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="M:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.AllInstances.ExecuteAsyncOf1IOperationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IO.Services.MultiplexingIOService,Couchbase.IO.Operations.IOperation{``0},System.Threading.Tasks.Task})">
            <summary>MultiplexingIOService.ExecuteAsync(IOperation`1&lt;!!0&gt; operation)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.AllInstances.ExecuteAsyncOf1IOperationOfM0IConnection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IO.Services.MultiplexingIOService,Couchbase.IO.Operations.IOperation{``0},Couchbase.IO.IConnection,System.Threading.Tasks.Task})">
            <summary>MultiplexingIOService.ExecuteAsync(IOperation`1&lt;!!0&gt; operation, IConnection connection)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.AllInstances.ExecuteOf1IOperationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IO.Services.MultiplexingIOService,Couchbase.IO.Operations.IOperation{``0},Couchbase.IOperationResult{``0}})">
            <summary>MultiplexingIOService.Execute(IOperation`1&lt;!!0&gt; operation)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.AllInstances.ExecuteOf1IOperationOfM0IConnection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IO.Services.MultiplexingIOService,Couchbase.IO.Operations.IOperation{``0},Couchbase.IO.IConnection,Couchbase.IOperationResult{``0}})">
            <summary>MultiplexingIOService.Execute(IOperation`1&lt;!!0&gt; operation, IConnection connection)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.AllInstances.AuthenticateIConnection">
            <summary>MultiplexingIOService.Authenticate(IConnection connection)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.AllInstances.ConnectionPoolGet">
            <summary>MultiplexingIOService.get_ConnectionPool()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.AllInstances.Dispose">
            <summary>MultiplexingIOService.Dispose()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.AllInstances.DisposeBoolean">
            <summary>MultiplexingIOService.Dispose(Boolean disposing)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.AllInstances.EnableEnhancedDurabilityIConnection">
            <summary>MultiplexingIOService.EnableEnhancedDurability(IConnection connection)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.AllInstances.EndPointGet">
            <summary>MultiplexingIOService.get_EndPoint()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.AllInstances.ExecuteAsyncIOperation">
            <summary>MultiplexingIOService.ExecuteAsync(IOperation operation)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.AllInstances.ExecuteAsyncIOperationIConnection">
            <summary>MultiplexingIOService.ExecuteAsync(IOperation operation, IConnection connection)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.AllInstances.ExecuteIOperation">
            <summary>MultiplexingIOService.Execute(IOperation operation)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.AllInstances.IsSecureGet">
            <summary>MultiplexingIOService.get_IsSecure()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.AllInstances.SaslMechanismGet">
            <summary>MultiplexingIOService.get_SaslMechanism()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.AllInstances.SaslMechanismSetISaslMechanism">
            <summary>MultiplexingIOService.set_SaslMechanism(ISaslMechanism value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.AllInstances.SupportsEnhancedDurabilityGet">
            <summary>MultiplexingIOService.get_SupportsEnhancedDurability()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.AllInstances.SupportsEnhancedDurabilitySetBoolean">
            <summary>MultiplexingIOService.set_SupportsEnhancedDurability(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.AllInstances._Authenticateb__30_0FormatMessageHandler">
            <summary>MultiplexingIOService.&lt;Authenticate&gt;b__30_0(FormatMessageHandler m)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.AllInstances._Authenticateb__30_1FormatMessageHandler">
            <summary>MultiplexingIOService.&lt;Authenticate&gt;b__30_1(FormatMessageHandler m)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.AllInstances._Disposeb__33_0FormatMessageHandler">
            <summary>MultiplexingIOService.&lt;Dispose&gt;b__33_0(FormatMessageHandler m)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimMultiplexingIOService.AllInstances._ctorb__6_0FormatMessageHandler">
            <summary>MultiplexingIOService.&lt;.ctor&gt;b__6_0(FormatMessageHandler m)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Services.Fakes.ShimPooledIOService">
            <summary>Couchbase.IO.Services.PooledIOService의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Services.Fakes.ShimPooledIOService.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Services.Fakes.ShimPooledIOService.#ctor(Couchbase.IO.Services.PooledIOService)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Services.Fakes.ShimPooledIOService.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Services.Fakes.ShimPooledIOService.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Services.Fakes.ShimPooledIOService.Bind(Couchbase.IO.IIOService)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Services.Fakes.ShimPooledIOService.Bind(System.IDisposable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Services.Fakes.ShimPooledIOService.ExecuteAsyncOf1IOperationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IO.Operations.IOperation{``0},System.Threading.Tasks.Task})">
            <summary>PooledIOService.ExecuteAsync(IOperation`1&lt;!!0&gt; operation)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Services.Fakes.ShimPooledIOService.ExecuteAsyncOf1IOperationOfM0IConnection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IO.Operations.IOperation{``0},Couchbase.IO.IConnection,System.Threading.Tasks.Task})">
            <summary>PooledIOService.ExecuteAsync(IOperation`1&lt;!!0&gt; operation, IConnection connection)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Services.Fakes.ShimPooledIOService.ExecuteOf1IOperationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IO.Operations.IOperation{``0},Couchbase.IOperationResult{``0}})">
            <summary>PooledIOService.Execute(IOperation`1&lt;!!0&gt; operation)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Services.Fakes.ShimPooledIOService.ExecuteOf1IOperationOfM0IConnection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IO.Operations.IOperation{``0},Couchbase.IO.IConnection,Couchbase.IOperationResult{``0}})">
            <summary>PooledIOService.Execute(IOperation`1&lt;!!0&gt; operation, IConnection connection)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimPooledIOService.AuthenticateIConnection">
            <summary>PooledIOService.Authenticate(IConnection connection)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimPooledIOService.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimPooledIOService.ConnectionPoolGet">
            <summary>PooledIOService.get_ConnectionPool()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimPooledIOService.ConstructorIConnectionPool">
            <summary>PooledIOService.PooledIOService(IConnectionPool connectionPool)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimPooledIOService.ConstructorIConnectionPoolISaslMechanism">
            <summary>PooledIOService.PooledIOService(IConnectionPool connectionPool, ISaslMechanism saslMechanism)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimPooledIOService.Dispose">
            <summary>PooledIOService.Dispose()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimPooledIOService.DisposeBoolean">
            <summary>PooledIOService.Dispose(Boolean disposing)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimPooledIOService.EnableEnhancedDurabilityIConnection">
            <summary>PooledIOService.EnableEnhancedDurability(IConnection connection)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimPooledIOService.EndPointGet">
            <summary>PooledIOService.get_EndPoint()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimPooledIOService.ExecuteAsyncIOperation">
            <summary>PooledIOService.ExecuteAsync(IOperation operation)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimPooledIOService.ExecuteAsyncIOperationIConnection">
            <summary>PooledIOService.ExecuteAsync(IOperation operation, IConnection connection)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimPooledIOService.ExecuteIOperation">
            <summary>PooledIOService.Execute(IOperation operation)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimPooledIOService.HandleExceptionExceptionDispatchInfoIOperation">
            <summary>PooledIOService.HandleException(ExceptionDispatchInfo capturedException, IOperation operation)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimPooledIOService.IsSecureGet">
            <summary>PooledIOService.get_IsSecure()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimPooledIOService.LogFailedHelloOperationIResult">
            <summary>PooledIOService.LogFailedHelloOperation(IResult result)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimPooledIOService.SaslMechanismGet">
            <summary>PooledIOService.get_SaslMechanism()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimPooledIOService.SaslMechanismSetISaslMechanism">
            <summary>PooledIOService.set_SaslMechanism(ISaslMechanism value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimPooledIOService.StaticConstructor">
            <summary>PooledIOService.PooledIOService()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimPooledIOService.SupportsEnhancedDurabilityGet">
            <summary>PooledIOService.get_SupportsEnhancedDurability()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimPooledIOService.SupportsEnhancedDurabilitySetBoolean">
            <summary>PooledIOService.set_SupportsEnhancedDurability(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimPooledIOService._Authenticateb__23_0FormatMessageHandler">
            <summary>PooledIOService.&lt;Authenticate&gt;b__23_0(FormatMessageHandler m)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimPooledIOService._Authenticateb__23_1FormatMessageHandler">
            <summary>PooledIOService.&lt;Authenticate&gt;b__23_1(FormatMessageHandler m)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimPooledIOService._Disposeb__32_0FormatMessageHandler">
            <summary>PooledIOService.&lt;Dispose&gt;b__32_0(FormatMessageHandler m)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimPooledIOService._ctorb__6_0FormatMessageHandler">
            <summary>PooledIOService.&lt;.ctor&gt;b__6_0(FormatMessageHandler m)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimPooledIOService._ctorb__7_0FormatMessageHandler">
            <summary>PooledIOService.&lt;.ctor&gt;b__7_0(FormatMessageHandler m)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Services.Fakes.ShimPooledIOService.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="M:Couchbase.IO.Services.Fakes.ShimPooledIOService.AllInstances.ExecuteAsyncOf1IOperationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IO.Services.PooledIOService,Couchbase.IO.Operations.IOperation{``0},System.Threading.Tasks.Task})">
            <summary>PooledIOService.ExecuteAsync(IOperation`1&lt;!!0&gt; operation)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Services.Fakes.ShimPooledIOService.AllInstances.ExecuteAsyncOf1IOperationOfM0IConnection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IO.Services.PooledIOService,Couchbase.IO.Operations.IOperation{``0},Couchbase.IO.IConnection,System.Threading.Tasks.Task})">
            <summary>PooledIOService.ExecuteAsync(IOperation`1&lt;!!0&gt; operation, IConnection connection)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Services.Fakes.ShimPooledIOService.AllInstances.ExecuteOf1IOperationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IO.Services.PooledIOService,Couchbase.IO.Operations.IOperation{``0},Couchbase.IOperationResult{``0}})">
            <summary>PooledIOService.Execute(IOperation`1&lt;!!0&gt; operation)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Services.Fakes.ShimPooledIOService.AllInstances.ExecuteOf1IOperationOfM0IConnection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.IO.Services.PooledIOService,Couchbase.IO.Operations.IOperation{``0},Couchbase.IO.IConnection,Couchbase.IOperationResult{``0}})">
            <summary>PooledIOService.Execute(IOperation`1&lt;!!0&gt; operation, IConnection connection)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimPooledIOService.AllInstances.AuthenticateIConnection">
            <summary>PooledIOService.Authenticate(IConnection connection)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimPooledIOService.AllInstances.ConnectionPoolGet">
            <summary>PooledIOService.get_ConnectionPool()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimPooledIOService.AllInstances.Dispose">
            <summary>PooledIOService.Dispose()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimPooledIOService.AllInstances.DisposeBoolean">
            <summary>PooledIOService.Dispose(Boolean disposing)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimPooledIOService.AllInstances.EnableEnhancedDurabilityIConnection">
            <summary>PooledIOService.EnableEnhancedDurability(IConnection connection)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimPooledIOService.AllInstances.EndPointGet">
            <summary>PooledIOService.get_EndPoint()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimPooledIOService.AllInstances.ExecuteAsyncIOperation">
            <summary>PooledIOService.ExecuteAsync(IOperation operation)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimPooledIOService.AllInstances.ExecuteAsyncIOperationIConnection">
            <summary>PooledIOService.ExecuteAsync(IOperation operation, IConnection connection)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimPooledIOService.AllInstances.ExecuteIOperation">
            <summary>PooledIOService.Execute(IOperation operation)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimPooledIOService.AllInstances.IsSecureGet">
            <summary>PooledIOService.get_IsSecure()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimPooledIOService.AllInstances.SaslMechanismGet">
            <summary>PooledIOService.get_SaslMechanism()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimPooledIOService.AllInstances.SaslMechanismSetISaslMechanism">
            <summary>PooledIOService.set_SaslMechanism(ISaslMechanism value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimPooledIOService.AllInstances.SupportsEnhancedDurabilityGet">
            <summary>PooledIOService.get_SupportsEnhancedDurability()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimPooledIOService.AllInstances.SupportsEnhancedDurabilitySetBoolean">
            <summary>PooledIOService.set_SupportsEnhancedDurability(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimPooledIOService.AllInstances._Authenticateb__23_0FormatMessageHandler">
            <summary>PooledIOService.&lt;Authenticate&gt;b__23_0(FormatMessageHandler m)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimPooledIOService.AllInstances._Authenticateb__23_1FormatMessageHandler">
            <summary>PooledIOService.&lt;Authenticate&gt;b__23_1(FormatMessageHandler m)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimPooledIOService.AllInstances._Disposeb__32_0FormatMessageHandler">
            <summary>PooledIOService.&lt;Dispose&gt;b__32_0(FormatMessageHandler m)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimPooledIOService.AllInstances._ctorb__6_0FormatMessageHandler">
            <summary>PooledIOService.&lt;.ctor&gt;b__6_0(FormatMessageHandler m)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.ShimPooledIOService.AllInstances._ctorb__7_0FormatMessageHandler">
            <summary>PooledIOService.&lt;.ctor&gt;b__7_0(FormatMessageHandler m)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Services.Fakes.StubMultiplexingIOService">
            <summary>Couchbase.IO.Services.MultiplexingIOService의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Services.Fakes.StubMultiplexingIOService.#ctor(Couchbase.IO.IConnectionPool)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Services.Fakes.StubMultiplexingIOService.#ctor(Couchbase.IO.IConnectionPool,Couchbase.Authentication.SASL.ISaslMechanism)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Services.Fakes.StubMultiplexingIOService.InitializeStub">
            <summary>type StubMultiplexingIOService의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.StubMultiplexingIOService.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.StubMultiplexingIOService.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.StubMultiplexingIOService.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Services.Fakes.StubPooledIOService">
            <summary>Couchbase.IO.Services.PooledIOService의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Services.Fakes.StubPooledIOService.#ctor(Couchbase.IO.IConnectionPool)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Services.Fakes.StubPooledIOService.#ctor(Couchbase.IO.IConnectionPool,Couchbase.Authentication.SASL.ISaslMechanism)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Services.Fakes.StubPooledIOService.InitializeStub">
            <summary>type StubPooledIOService의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.StubPooledIOService.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.StubPooledIOService.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Services.Fakes.StubPooledIOService.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Utils.Fakes.ShimBufferExtensions">
            <summary>Couchbase.IO.Utils.BufferExtensions의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Utils.Fakes.ShimBufferExtensions.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Utils.Fakes.ShimBufferExtensions.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Utils.Fakes.ShimBufferExtensions.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Utils.Fakes.ShimBufferExtensions.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Utils.Fakes.ShimBufferExtensions.GetLengthSafeByteArray">
            <summary>BufferExtensions.GetLengthSafe(Byte[] buffer)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Utils.Fakes.ShimBufferExtensions.ToOpCodeByte">
            <summary>BufferExtensions.ToOpCode(Byte value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Utils.Fakes.ShimHeaderIndexFor">
            <summary>Couchbase.IO.Utils.HeaderIndexFor의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Utils.Fakes.ShimHeaderIndexFor.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Utils.Fakes.ShimHeaderIndexFor.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Utils.Fakes.ShimHeaderIndexFor.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Utils.Fakes.ShimHeaderIndexFor.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="T:Couchbase.IO.Utils.Fakes.ShimHeaderIndexFor.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.IO.Utils.Fakes.ShimSocketExtensions">
            <summary>Couchbase.IO.Utils.SocketExtensions의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.IO.Utils.Fakes.ShimSocketExtensions.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Utils.Fakes.ShimSocketExtensions.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.IO.Utils.Fakes.ShimSocketExtensions.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Utils.Fakes.ShimSocketExtensions.AcceptAsyncSocketSocketAwaitable">
            <summary>SocketExtensions.AcceptAsync(Socket socket, SocketAwaitable awaitable)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Utils.Fakes.ShimSocketExtensions.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Utils.Fakes.ShimSocketExtensions.ConnectAsyncSocketSocketAwaitable">
            <summary>SocketExtensions.ConnectAsync(Socket socket, SocketAwaitable awaitable)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Utils.Fakes.ShimSocketExtensions.DisconnectAsyncSocketSocketAwaitable">
            <summary>SocketExtensions.DisconnectAsync(Socket socket, SocketAwaitable awaitable)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Utils.Fakes.ShimSocketExtensions.ReceiveAsyncSocketAwaitable">
            <summary>SocketExtensions.ReceiveAsync(SocketAwaitable awaitable)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Utils.Fakes.ShimSocketExtensions.ReceiveAsyncSocketSocketAwaitable">
            <summary>SocketExtensions.ReceiveAsync(Socket socket, SocketAwaitable awaitable)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Utils.Fakes.ShimSocketExtensions.SendAsyncSocketAwaitable">
            <summary>SocketExtensions.SendAsync(SocketAwaitable awaitable)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Utils.Fakes.ShimSocketExtensions.SendAsyncSocketSocketAwaitable">
            <summary>SocketExtensions.SendAsync(Socket socket, SocketAwaitable awaitable)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.IO.Utils.Fakes.ShimSocketExtensions.SetKeepAlivesSocketBooleanUInt32UInt32">
            <summary>SocketExtensions.SetKeepAlives(Socket socket, Boolean on, UInt32 time, UInt32 interval)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Management.Fakes.ShimBucketManager">
            <summary>Couchbase.Management.BucketManager의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.ShimBucketManager.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.ShimBucketManager.#ctor(Couchbase.Management.BucketManager)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.ShimBucketManager.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.ShimBucketManager.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.ShimBucketManager.Bind(Couchbase.Management.IBucketManager)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.ShimBucketManager.Bind(System.IDisposable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.BucketNameGet">
            <summary>BucketManager.get_BucketName()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.BucketNameSetString">
            <summary>BucketManager.set_BucketName(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.BuildN1qlDeferredIndexes">
            <summary>BucketManager.BuildN1qlDeferredIndexes()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.BuildN1qlDeferredIndexesAsync">
            <summary>BucketManager.BuildN1qlDeferredIndexesAsync()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.ConstructorIBucketClientConfigurationIDataMapperHttpClientStringString">
            <summary>BucketManager.BucketManager(IBucket bucket, ClientConfiguration clientConfig, IDataMapper mapper, HttpClient httpClient, String username, String password)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.CreateAuthenticatedHttpClient">
            <summary>BucketManager.CreateAuthenticatedHttpClient()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.CreateN1qlIndexAsyncStringBooleanStringArray">
            <summary>BucketManager.CreateN1qlIndexAsync(String indexName, Boolean defer, String[] fields)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.CreateN1qlIndexStringBooleanStringArray">
            <summary>BucketManager.CreateN1qlIndex(String indexName, Boolean defer, String[] fields)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.CreateN1qlPrimaryIndexAsyncBoolean">
            <summary>BucketManager.CreateN1qlPrimaryIndexAsync(Boolean defer)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.CreateN1qlPrimaryIndexAsyncStringBoolean">
            <summary>BucketManager.CreateN1qlPrimaryIndexAsync(String customName, Boolean defer)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.CreateN1qlPrimaryIndexBoolean">
            <summary>BucketManager.CreateN1qlPrimaryIndex(Boolean defer)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.CreateN1qlPrimaryIndexStringBoolean">
            <summary>BucketManager.CreateN1qlPrimaryIndex(String customName, Boolean defer)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.Dispose">
            <summary>BucketManager.Dispose()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.DropN1qlIndexAsyncString">
            <summary>BucketManager.DropN1qlIndexAsync(String name)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.DropN1qlIndexString">
            <summary>BucketManager.DropN1qlIndex(String name)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.DropN1qlPrimaryIndex">
            <summary>BucketManager.DropN1qlPrimaryIndex()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.DropN1qlPrimaryIndexAsync">
            <summary>BucketManager.DropN1qlPrimaryIndexAsync()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.DropN1qlPrimaryIndexString">
            <summary>BucketManager.DropN1qlPrimaryIndex(String customName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.DropNamedPrimaryIndexAsyncString">
            <summary>BucketManager.DropNamedPrimaryIndexAsync(String customName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.ExecuteIndexRequestAsyncString">
            <summary>BucketManager.ExecuteIndexRequestAsync(String statement)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.ExecuteIndexRequestString">
            <summary>BucketManager.ExecuteIndexRequest(String statement)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.Flush">
            <summary>BucketManager.Flush()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.FlushAsync">
            <summary>BucketManager.FlushAsync()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.GetDesignDocumentAsyncString">
            <summary>BucketManager.GetDesignDocumentAsync(String designDocName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.GetDesignDocumentString">
            <summary>BucketManager.GetDesignDocument(String designDocName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.GetDesignDocumentsAsyncBoolean">
            <summary>BucketManager.GetDesignDocumentsAsync(Boolean includeDevelopment)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.GetDesignDocumentsBoolean">
            <summary>BucketManager.GetDesignDocuments(Boolean includeDevelopment)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.GetResultAsStringHttpResponseMessage">
            <summary>BucketManager.GetResultAsString(HttpResponseMessage httpResponseMessage)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.GetResultHttpResponseMessage">
            <summary>BucketManager.GetResult(HttpResponseMessage httpResponseMessage)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.InsertDesignDocumentAsyncStringString">
            <summary>BucketManager.InsertDesignDocumentAsync(String designDocName, String designDoc)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.InsertDesignDocumentStringString">
            <summary>BucketManager.InsertDesignDocument(String designDocName, String designDoc)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.ListN1qlIndexes">
            <summary>BucketManager.ListN1qlIndexes()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.ListN1qlIndexesAsync">
            <summary>BucketManager.ListN1qlIndexesAsync()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.MapperGet">
            <summary>BucketManager.get_Mapper()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.MapperSetIDataMapper">
            <summary>BucketManager.set_Mapper(IDataMapper value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.RemoveDesignDocumentAsyncString">
            <summary>BucketManager.RemoveDesignDocumentAsync(String designDocName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.RemoveDesignDocumentString">
            <summary>BucketManager.RemoveDesignDocument(String designDocName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.SetHeadersHttpRequestMessageUriString">
            <summary>BucketManager.SetHeaders(HttpRequestMessage request, Uri uri, String mediaType)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.StaticConstructor">
            <summary>BucketManager.BucketManager()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.UpdateDesignDocumentAsyncStringString">
            <summary>BucketManager.UpdateDesignDocumentAsync(String designDocName, String designDoc)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.UpdateDesignDocumentStringString">
            <summary>BucketManager.UpdateDesignDocument(String designDocName, String designDoc)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.UseSsl">
            <summary>BucketManager.UseSsl()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.WatchN1qlIndexesAsyncListOfStringBooleanInt64TimeSpan">
            <summary>BucketManager.WatchN1qlIndexesAsync(List`1&lt;String&gt; watchList, Boolean watchPrimary, Int64 watchTimeout, TimeSpan watchTimeUnit)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.WatchN1qlIndexesListOfStringBooleanInt64TimeSpan">
            <summary>BucketManager.WatchN1qlIndexes(List`1&lt;String&gt; watchList, Boolean watchPrimary, Int64 watchTimeout, TimeSpan watchTimeUnit)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Management.Fakes.ShimBucketManager.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.AllInstances.BucketNameGet">
            <summary>BucketManager.get_BucketName()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.AllInstances.BucketNameSetString">
            <summary>BucketManager.set_BucketName(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.AllInstances.BuildN1qlDeferredIndexes">
            <summary>BucketManager.BuildN1qlDeferredIndexes()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.AllInstances.BuildN1qlDeferredIndexesAsync">
            <summary>BucketManager.BuildN1qlDeferredIndexesAsync()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.AllInstances.CreateAuthenticatedHttpClient">
            <summary>BucketManager.CreateAuthenticatedHttpClient()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.AllInstances.CreateN1qlIndexAsyncStringBooleanStringArray">
            <summary>BucketManager.CreateN1qlIndexAsync(String indexName, Boolean defer, String[] fields)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.AllInstances.CreateN1qlIndexStringBooleanStringArray">
            <summary>BucketManager.CreateN1qlIndex(String indexName, Boolean defer, String[] fields)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.AllInstances.CreateN1qlPrimaryIndexAsyncBoolean">
            <summary>BucketManager.CreateN1qlPrimaryIndexAsync(Boolean defer)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.AllInstances.CreateN1qlPrimaryIndexAsyncStringBoolean">
            <summary>BucketManager.CreateN1qlPrimaryIndexAsync(String customName, Boolean defer)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.AllInstances.CreateN1qlPrimaryIndexBoolean">
            <summary>BucketManager.CreateN1qlPrimaryIndex(Boolean defer)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.AllInstances.CreateN1qlPrimaryIndexStringBoolean">
            <summary>BucketManager.CreateN1qlPrimaryIndex(String customName, Boolean defer)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.AllInstances.Dispose">
            <summary>BucketManager.Dispose()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.AllInstances.DropN1qlIndexAsyncString">
            <summary>BucketManager.DropN1qlIndexAsync(String name)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.AllInstances.DropN1qlIndexString">
            <summary>BucketManager.DropN1qlIndex(String name)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.AllInstances.DropN1qlPrimaryIndex">
            <summary>BucketManager.DropN1qlPrimaryIndex()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.AllInstances.DropN1qlPrimaryIndexAsync">
            <summary>BucketManager.DropN1qlPrimaryIndexAsync()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.AllInstances.DropN1qlPrimaryIndexString">
            <summary>BucketManager.DropN1qlPrimaryIndex(String customName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.AllInstances.DropNamedPrimaryIndexAsyncString">
            <summary>BucketManager.DropNamedPrimaryIndexAsync(String customName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.AllInstances.ExecuteIndexRequestAsyncString">
            <summary>BucketManager.ExecuteIndexRequestAsync(String statement)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.AllInstances.ExecuteIndexRequestString">
            <summary>BucketManager.ExecuteIndexRequest(String statement)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.AllInstances.Flush">
            <summary>BucketManager.Flush()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.AllInstances.FlushAsync">
            <summary>BucketManager.FlushAsync()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.AllInstances.GetDesignDocumentAsyncString">
            <summary>BucketManager.GetDesignDocumentAsync(String designDocName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.AllInstances.GetDesignDocumentString">
            <summary>BucketManager.GetDesignDocument(String designDocName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.AllInstances.GetDesignDocumentsAsyncBoolean">
            <summary>BucketManager.GetDesignDocumentsAsync(Boolean includeDevelopment)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.AllInstances.GetDesignDocumentsBoolean">
            <summary>BucketManager.GetDesignDocuments(Boolean includeDevelopment)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.AllInstances.GetResultAsStringHttpResponseMessage">
            <summary>BucketManager.GetResultAsString(HttpResponseMessage httpResponseMessage)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.AllInstances.GetResultHttpResponseMessage">
            <summary>BucketManager.GetResult(HttpResponseMessage httpResponseMessage)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.AllInstances.InsertDesignDocumentAsyncStringString">
            <summary>BucketManager.InsertDesignDocumentAsync(String designDocName, String designDoc)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.AllInstances.InsertDesignDocumentStringString">
            <summary>BucketManager.InsertDesignDocument(String designDocName, String designDoc)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.AllInstances.ListN1qlIndexes">
            <summary>BucketManager.ListN1qlIndexes()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.AllInstances.ListN1qlIndexesAsync">
            <summary>BucketManager.ListN1qlIndexesAsync()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.AllInstances.MapperGet">
            <summary>BucketManager.get_Mapper()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.AllInstances.MapperSetIDataMapper">
            <summary>BucketManager.set_Mapper(IDataMapper value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.AllInstances.RemoveDesignDocumentAsyncString">
            <summary>BucketManager.RemoveDesignDocumentAsync(String designDocName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.AllInstances.RemoveDesignDocumentString">
            <summary>BucketManager.RemoveDesignDocument(String designDocName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.AllInstances.SetHeadersHttpRequestMessageUriString">
            <summary>BucketManager.SetHeaders(HttpRequestMessage request, Uri uri, String mediaType)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.AllInstances.UpdateDesignDocumentAsyncStringString">
            <summary>BucketManager.UpdateDesignDocumentAsync(String designDocName, String designDoc)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.AllInstances.UpdateDesignDocumentStringString">
            <summary>BucketManager.UpdateDesignDocument(String designDocName, String designDoc)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.AllInstances.UseSsl">
            <summary>BucketManager.UseSsl()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.AllInstances.WatchN1qlIndexesAsyncListOfStringBooleanInt64TimeSpan">
            <summary>BucketManager.WatchN1qlIndexesAsync(List`1&lt;String&gt; watchList, Boolean watchPrimary, Int64 watchTimeout, TimeSpan watchTimeUnit)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketManager.AllInstances.WatchN1qlIndexesListOfStringBooleanInt64TimeSpan">
            <summary>BucketManager.WatchN1qlIndexes(List`1&lt;String&gt; watchList, Boolean watchPrimary, Int64 watchTimeout, TimeSpan watchTimeUnit)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Management.Fakes.ShimBucketSettings">
            <summary>Couchbase.Management.BucketSettings의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.ShimBucketSettings.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.ShimBucketSettings.#ctor(Couchbase.Management.BucketSettings)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.ShimBucketSettings.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.ShimBucketSettings.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.AuthTypeGet">
            <summary>BucketSettings.get_AuthType()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.AuthTypeSetAuthType">
            <summary>BucketSettings.set_AuthType(AuthType value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.BucketTypeGet">
            <summary>BucketSettings.get_BucketType()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.BucketTypeSetBucketTypeEnum">
            <summary>BucketSettings.set_BucketType(BucketTypeEnum value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.Constructor">
            <summary>BucketSettings.BucketSettings()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.FlushEnabledGet">
            <summary>BucketSettings.get_FlushEnabled()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.FlushEnabledSetBoolean">
            <summary>BucketSettings.set_FlushEnabled(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.IndexReplicasGet">
            <summary>BucketSettings.get_IndexReplicas()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.IndexReplicasSetBoolean">
            <summary>BucketSettings.set_IndexReplicas(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.NameGet">
            <summary>BucketSettings.get_Name()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.NameSetString">
            <summary>BucketSettings.set_Name(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.ParallelDbAndViewCompactionGet">
            <summary>BucketSettings.get_ParallelDbAndViewCompaction()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.ParallelDbAndViewCompactionSetBoolean">
            <summary>BucketSettings.set_ParallelDbAndViewCompaction(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.RamQuotaGet">
            <summary>BucketSettings.get_RamQuota()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.RamQuotaSetUInt32">
            <summary>BucketSettings.set_RamQuota(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.ReplicaNumberGet">
            <summary>BucketSettings.get_ReplicaNumber()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.ReplicaNumberSetReplicaNumber">
            <summary>BucketSettings.set_ReplicaNumber(ReplicaNumber value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.SaslPasswordGet">
            <summary>BucketSettings.get_SaslPassword()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.SaslPasswordSetString">
            <summary>BucketSettings.set_SaslPassword(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.ServicesGet">
            <summary>BucketSettings.get_Services()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.ServicesSetListOfCouchbaseService">
            <summary>BucketSettings.set_Services(List`1&lt;CouchbaseService&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.ThreadNumberGet">
            <summary>BucketSettings.get_ThreadNumber()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.ThreadNumberSetThreadNumber">
            <summary>BucketSettings.set_ThreadNumber(ThreadNumber value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Management.Fakes.ShimBucketSettings.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.AllInstances.AuthTypeGet">
            <summary>BucketSettings.get_AuthType()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.AllInstances.AuthTypeSetAuthType">
            <summary>BucketSettings.set_AuthType(AuthType value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.AllInstances.BucketTypeGet">
            <summary>BucketSettings.get_BucketType()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.AllInstances.BucketTypeSetBucketTypeEnum">
            <summary>BucketSettings.set_BucketType(BucketTypeEnum value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.AllInstances.FlushEnabledGet">
            <summary>BucketSettings.get_FlushEnabled()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.AllInstances.FlushEnabledSetBoolean">
            <summary>BucketSettings.set_FlushEnabled(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.AllInstances.IndexReplicasGet">
            <summary>BucketSettings.get_IndexReplicas()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.AllInstances.IndexReplicasSetBoolean">
            <summary>BucketSettings.set_IndexReplicas(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.AllInstances.NameGet">
            <summary>BucketSettings.get_Name()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.AllInstances.NameSetString">
            <summary>BucketSettings.set_Name(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.AllInstances.ParallelDbAndViewCompactionGet">
            <summary>BucketSettings.get_ParallelDbAndViewCompaction()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.AllInstances.ParallelDbAndViewCompactionSetBoolean">
            <summary>BucketSettings.set_ParallelDbAndViewCompaction(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.AllInstances.RamQuotaGet">
            <summary>BucketSettings.get_RamQuota()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.AllInstances.RamQuotaSetUInt32">
            <summary>BucketSettings.set_RamQuota(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.AllInstances.ReplicaNumberGet">
            <summary>BucketSettings.get_ReplicaNumber()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.AllInstances.ReplicaNumberSetReplicaNumber">
            <summary>BucketSettings.set_ReplicaNumber(ReplicaNumber value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.AllInstances.SaslPasswordGet">
            <summary>BucketSettings.get_SaslPassword()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.AllInstances.SaslPasswordSetString">
            <summary>BucketSettings.set_SaslPassword(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.AllInstances.ServicesGet">
            <summary>BucketSettings.get_Services()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.AllInstances.ServicesSetListOfCouchbaseService">
            <summary>BucketSettings.set_Services(List`1&lt;CouchbaseService&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.AllInstances.ThreadNumberGet">
            <summary>BucketSettings.get_ThreadNumber()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimBucketSettings.AllInstances.ThreadNumberSetThreadNumber">
            <summary>BucketSettings.set_ThreadNumber(ThreadNumber value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Management.Fakes.ShimClusterManager">
            <summary>Couchbase.Management.ClusterManager의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.ShimClusterManager.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.ShimClusterManager.#ctor(Couchbase.Management.ClusterManager)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.ShimClusterManager.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.ShimClusterManager.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.ShimClusterManager.Bind(Couchbase.Management.IClusterManager)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.ShimClusterManager.Bind(System.IDisposable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.AddNodeAsyncString">
            <summary>ClusterManager.AddNodeAsync(String ipAddress)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.AddNodeAsyncStringCouchbaseServiceArray">
            <summary>ClusterManager.AddNodeAsync(String ipAddress, CouchbaseService[] services)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.AddNodeString">
            <summary>ClusterManager.AddNode(String ipAddress)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.AddSampleBucketAsyncStringString">
            <summary>ClusterManager.AddSampleBucketAsync(String hostName, String sampleBucketName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.ClusterInfo">
            <summary>ClusterManager.ClusterInfo()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.ClusterInfoAsync">
            <summary>ClusterManager.ClusterInfoAsync()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.ConfigureAdminAsyncString">
            <summary>ClusterManager.ConfigureAdminAsync(String hostName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.ConfigureMemoryAsyncStringUInt32UInt32">
            <summary>ClusterManager.ConfigureMemoryAsync(String hostName, UInt32 memoryQuota, UInt32 indexMemQuota)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.CreateBucketAsyncBucketSettings">
            <summary>ClusterManager.CreateBucketAsync(BucketSettings settings)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.CreateBucketAsyncStringUInt32BucketTypeEnumReplicaNumberAuthTypeBooleanBooleanBooleanStringThreadNumber">
            <summary>ClusterManager.CreateBucketAsync(String name, UInt32 ramQuota, BucketTypeEnum bucketType, ReplicaNumber replicaNumber, AuthType authType, Boolean indexReplicas, Boolean flushEnabled, Boolean parallelDbAndViewCompaction, String saslPassword, ThreadNumber threadNumber)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.CreateBucketStringUInt32BucketTypeEnumReplicaNumberAuthTypeBooleanBooleanBooleanStringThreadNumber">
            <summary>ClusterManager.CreateBucket(String name, UInt32 ramQuota, BucketTypeEnum bucketType, ReplicaNumber replicaNumber, AuthType authType, Boolean indexReplicas, Boolean flushEnabled, Boolean parallelDbAndViewCompaction, String saslPassword, ThreadNumber threadNumber)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.Dispose">
            <summary>ClusterManager.Dispose()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.FailoverNodeAsyncString">
            <summary>ClusterManager.FailoverNodeAsync(String hostname)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.FailoverNodeString">
            <summary>ClusterManager.FailoverNode(String hostname)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.GetAPIUriString">
            <summary>ClusterManager.GetAPIUri(String apiKey)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.GetAPIUriStringString">
            <summary>ClusterManager.GetAPIUri(String hostName, String uriFormat)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.GetBucketAPIUriString">
            <summary>ClusterManager.GetBucketAPIUri(String bucketName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.GetResultHttpResponseMessage">
            <summary>ClusterManager.GetResult(HttpResponseMessage httpResponseMessage)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.GetStringStream">
            <summary>ClusterManager.GetString(Stream stream)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.InitializeClusterAsyncStringStringString">
            <summary>ClusterManager.InitializeClusterAsync(String hostName, String path, String indexPath)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.ListBuckets">
            <summary>ClusterManager.ListBuckets()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.ListBucketsAsync">
            <summary>ClusterManager.ListBucketsAsync()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.MapperGet">
            <summary>ClusterManager.get_Mapper()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.MapperSetIDataMapper">
            <summary>ClusterManager.set_Mapper(IDataMapper value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.PostFormDataAsyncUriDictionaryOfStringString">
            <summary>ClusterManager.PostFormDataAsync(Uri uri, Dictionary`2&lt;String,String&gt; formData)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.Rebalance">
            <summary>ClusterManager.Rebalance()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.RebalanceAsync">
            <summary>ClusterManager.RebalanceAsync()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.RemoveBucketAsyncString">
            <summary>ClusterManager.RemoveBucketAsync(String name)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.RemoveBucketString">
            <summary>ClusterManager.RemoveBucket(String name)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.RemoveNodeAsyncString">
            <summary>ClusterManager.RemoveNodeAsync(String ipAddress)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.RemoveNodeString">
            <summary>ClusterManager.RemoveNode(String ipAddress)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.RenameNodeAsyncString">
            <summary>ClusterManager.RenameNodeAsync(String hostName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.SetHeadersHttpRequestMessageUri">
            <summary>ClusterManager.SetHeaders(HttpRequestMessage request, Uri uri)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.SetupServicesAsyncStringCouchbaseServiceArray">
            <summary>ClusterManager.SetupServicesAsync(String hostName, CouchbaseService[] services)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.SetupServicesAsyncStringListOfCouchbaseService">
            <summary>ClusterManager.SetupServicesAsync(String hostName, List`1&lt;CouchbaseService&gt; services)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.StaticConstructor">
            <summary>ClusterManager.ClusterManager()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.ToArrayIListOfCouchbaseService">
            <summary>ClusterManager.ToArray(IList`1&lt;CouchbaseService&gt; services)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Management.Fakes.ShimClusterManager.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.AllInstances.AddNodeAsyncString">
            <summary>ClusterManager.AddNodeAsync(String ipAddress)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.AllInstances.AddNodeAsyncStringCouchbaseServiceArray">
            <summary>ClusterManager.AddNodeAsync(String ipAddress, CouchbaseService[] services)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.AllInstances.AddNodeString">
            <summary>ClusterManager.AddNode(String ipAddress)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.AllInstances.AddSampleBucketAsyncStringString">
            <summary>ClusterManager.AddSampleBucketAsync(String hostName, String sampleBucketName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.AllInstances.ClusterInfo">
            <summary>ClusterManager.ClusterInfo()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.AllInstances.ClusterInfoAsync">
            <summary>ClusterManager.ClusterInfoAsync()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.AllInstances.ConfigureAdminAsyncString">
            <summary>ClusterManager.ConfigureAdminAsync(String hostName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.AllInstances.ConfigureMemoryAsyncStringUInt32UInt32">
            <summary>ClusterManager.ConfigureMemoryAsync(String hostName, UInt32 memoryQuota, UInt32 indexMemQuota)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.AllInstances.CreateBucketAsyncBucketSettings">
            <summary>ClusterManager.CreateBucketAsync(BucketSettings settings)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.AllInstances.CreateBucketAsyncStringUInt32BucketTypeEnumReplicaNumberAuthTypeBooleanBooleanBooleanStringThreadNumber">
            <summary>ClusterManager.CreateBucketAsync(String name, UInt32 ramQuota, BucketTypeEnum bucketType, ReplicaNumber replicaNumber, AuthType authType, Boolean indexReplicas, Boolean flushEnabled, Boolean parallelDbAndViewCompaction, String saslPassword, ThreadNumber threadNumber)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.AllInstances.CreateBucketStringUInt32BucketTypeEnumReplicaNumberAuthTypeBooleanBooleanBooleanStringThreadNumber">
            <summary>ClusterManager.CreateBucket(String name, UInt32 ramQuota, BucketTypeEnum bucketType, ReplicaNumber replicaNumber, AuthType authType, Boolean indexReplicas, Boolean flushEnabled, Boolean parallelDbAndViewCompaction, String saslPassword, ThreadNumber threadNumber)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.AllInstances.Dispose">
            <summary>ClusterManager.Dispose()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.AllInstances.FailoverNodeAsyncString">
            <summary>ClusterManager.FailoverNodeAsync(String hostname)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.AllInstances.FailoverNodeString">
            <summary>ClusterManager.FailoverNode(String hostname)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.AllInstances.GetAPIUriString">
            <summary>ClusterManager.GetAPIUri(String apiKey)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.AllInstances.GetAPIUriStringString">
            <summary>ClusterManager.GetAPIUri(String hostName, String uriFormat)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.AllInstances.GetBucketAPIUriString">
            <summary>ClusterManager.GetBucketAPIUri(String bucketName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.AllInstances.GetResultHttpResponseMessage">
            <summary>ClusterManager.GetResult(HttpResponseMessage httpResponseMessage)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.AllInstances.InitializeClusterAsyncStringStringString">
            <summary>ClusterManager.InitializeClusterAsync(String hostName, String path, String indexPath)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.AllInstances.ListBuckets">
            <summary>ClusterManager.ListBuckets()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.AllInstances.ListBucketsAsync">
            <summary>ClusterManager.ListBucketsAsync()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.AllInstances.MapperGet">
            <summary>ClusterManager.get_Mapper()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.AllInstances.MapperSetIDataMapper">
            <summary>ClusterManager.set_Mapper(IDataMapper value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.AllInstances.PostFormDataAsyncUriDictionaryOfStringString">
            <summary>ClusterManager.PostFormDataAsync(Uri uri, Dictionary`2&lt;String,String&gt; formData)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.AllInstances.Rebalance">
            <summary>ClusterManager.Rebalance()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.AllInstances.RebalanceAsync">
            <summary>ClusterManager.RebalanceAsync()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.AllInstances.RemoveBucketAsyncString">
            <summary>ClusterManager.RemoveBucketAsync(String name)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.AllInstances.RemoveBucketString">
            <summary>ClusterManager.RemoveBucket(String name)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.AllInstances.RemoveNodeAsyncString">
            <summary>ClusterManager.RemoveNodeAsync(String ipAddress)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.AllInstances.RemoveNodeString">
            <summary>ClusterManager.RemoveNode(String ipAddress)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.AllInstances.RenameNodeAsyncString">
            <summary>ClusterManager.RenameNodeAsync(String hostName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.AllInstances.SetHeadersHttpRequestMessageUri">
            <summary>ClusterManager.SetHeaders(HttpRequestMessage request, Uri uri)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.AllInstances.SetupServicesAsyncStringCouchbaseServiceArray">
            <summary>ClusterManager.SetupServicesAsync(String hostName, CouchbaseService[] services)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterManager.AllInstances.SetupServicesAsyncStringListOfCouchbaseService">
            <summary>ClusterManager.SetupServicesAsync(String hostName, List`1&lt;CouchbaseService&gt; services)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Management.Fakes.ShimClusterProvisioner">
            <summary>Couchbase.Management.ClusterProvisioner의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.ShimClusterProvisioner.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.ShimClusterProvisioner.#ctor(Couchbase.Management.ClusterProvisioner)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.ShimClusterProvisioner.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.ShimClusterProvisioner.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.ShimClusterProvisioner.Bind(System.IDisposable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterProvisioner.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterProvisioner.ConstructorClusterStringString">
            <summary>ClusterProvisioner.ClusterProvisioner(Cluster cluster, String password, String username)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterProvisioner.Dispose">
            <summary>ClusterProvisioner.Dispose()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterProvisioner.ProvisionBucketAsyncBucketSettingsString">
            <summary>ClusterProvisioner.ProvisionBucketAsync(BucketSettings bucketSettings, String hostname)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterProvisioner.ProvisionEntryPointAsyncStringBucketSettingsUInt32UInt32">
            <summary>ClusterProvisioner.ProvisionEntryPointAsync(String hostname, BucketSettings defaultSettings, UInt32 dataRamQuota, UInt32 indexRamQuota)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterProvisioner.ProvisionNodeAsyncStringCouchbaseServiceArray">
            <summary>ClusterProvisioner.ProvisionNodeAsync(String hostname, CouchbaseService[] services)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterProvisioner.ProvisionNodesAsyncCouchbaseServiceArray">
            <summary>ClusterProvisioner.ProvisionNodesAsync(CouchbaseService[] services)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterProvisioner.ProvisionSampleBucketAsyncStringString">
            <summary>ClusterProvisioner.ProvisionSampleBucketAsync(String bucketName, String hostname)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterProvisioner.RebalanceClusterAsync">
            <summary>ClusterProvisioner.RebalanceClusterAsync()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Management.Fakes.ShimClusterProvisioner.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterProvisioner.AllInstances.Dispose">
            <summary>ClusterProvisioner.Dispose()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterProvisioner.AllInstances.ProvisionBucketAsyncBucketSettingsString">
            <summary>ClusterProvisioner.ProvisionBucketAsync(BucketSettings bucketSettings, String hostname)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterProvisioner.AllInstances.ProvisionEntryPointAsyncStringBucketSettingsUInt32UInt32">
            <summary>ClusterProvisioner.ProvisionEntryPointAsync(String hostname, BucketSettings defaultSettings, UInt32 dataRamQuota, UInt32 indexRamQuota)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterProvisioner.AllInstances.ProvisionNodeAsyncStringCouchbaseServiceArray">
            <summary>ClusterProvisioner.ProvisionNodeAsync(String hostname, CouchbaseService[] services)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterProvisioner.AllInstances.ProvisionNodesAsyncCouchbaseServiceArray">
            <summary>ClusterProvisioner.ProvisionNodesAsync(CouchbaseService[] services)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterProvisioner.AllInstances.ProvisionSampleBucketAsyncStringString">
            <summary>ClusterProvisioner.ProvisionSampleBucketAsync(String bucketName, String hostname)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterProvisioner.AllInstances.RebalanceClusterAsync">
            <summary>ClusterProvisioner.RebalanceClusterAsync()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Management.Fakes.ShimClusterSettings">
            <summary>Couchbase.Management.ClusterSettings의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.ShimClusterSettings.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.ShimClusterSettings.#ctor(Couchbase.Management.ClusterSettings)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.ShimClusterSettings.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.ShimClusterSettings.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterSettings.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimClusterSettings.Constructor">
            <summary>ClusterSettings.ClusterSettings()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Management.Fakes.ShimClusterSettings.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Management.Fakes.ShimCompositeResult">
            <summary>Couchbase.Management.CompositeResult의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.ShimCompositeResult.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.ShimCompositeResult.#ctor(Couchbase.Management.CompositeResult)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.ShimCompositeResult.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.ShimCompositeResult.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimCompositeResult.AddIResult">
            <summary>CompositeResult.Add(IResult result)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimCompositeResult.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimCompositeResult.Constructor">
            <summary>CompositeResult.CompositeResult()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimCompositeResult.ResultsGet">
            <summary>CompositeResult.get_Results()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimCompositeResult.SuccessGet">
            <summary>CompositeResult.get_Success()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Management.Fakes.ShimCompositeResult.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimCompositeResult.AllInstances.AddIResult">
            <summary>CompositeResult.Add(IResult result)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimCompositeResult.AllInstances.ResultsGet">
            <summary>CompositeResult.get_Results()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimCompositeResult.AllInstances.SuccessGet">
            <summary>CompositeResult.get_Success()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Management.Fakes.ShimMemcachedBucketManager">
            <summary>Couchbase.Management.MemcachedBucketManager의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.ShimMemcachedBucketManager.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.ShimMemcachedBucketManager.#ctor(Couchbase.Management.MemcachedBucketManager)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.ShimMemcachedBucketManager.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.ShimMemcachedBucketManager.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.ShimMemcachedBucketManager.Bind(Couchbase.Management.IBucketManager)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.ShimMemcachedBucketManager.Bind(System.IDisposable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.BuildN1qlDeferredIndexes">
            <summary>MemcachedBucketManager.BuildN1qlDeferredIndexes()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.BuildN1qlDeferredIndexesAsync">
            <summary>MemcachedBucketManager.BuildN1qlDeferredIndexesAsync()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.ConstructorIBucketClientConfigurationIDataMapperStringString">
            <summary>MemcachedBucketManager.MemcachedBucketManager(IBucket bucket, ClientConfiguration clientConfig, IDataMapper mapper, String username, String password)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.CreateN1qlIndexAsyncStringBooleanStringArray">
            <summary>MemcachedBucketManager.CreateN1qlIndexAsync(String indexName, Boolean defer, String[] fields)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.CreateN1qlIndexStringBooleanStringArray">
            <summary>MemcachedBucketManager.CreateN1qlIndex(String indexName, Boolean defer, String[] fields)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.CreateN1qlPrimaryIndexAsyncBoolean">
            <summary>MemcachedBucketManager.CreateN1qlPrimaryIndexAsync(Boolean defer)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.CreateN1qlPrimaryIndexAsyncStringBoolean">
            <summary>MemcachedBucketManager.CreateN1qlPrimaryIndexAsync(String customName, Boolean defer)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.CreateN1qlPrimaryIndexBoolean">
            <summary>MemcachedBucketManager.CreateN1qlPrimaryIndex(Boolean defer)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.CreateN1qlPrimaryIndexStringBoolean">
            <summary>MemcachedBucketManager.CreateN1qlPrimaryIndex(String customName, Boolean defer)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.DropN1qlIndexAsyncString">
            <summary>MemcachedBucketManager.DropN1qlIndexAsync(String name)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.DropN1qlIndexString">
            <summary>MemcachedBucketManager.DropN1qlIndex(String name)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.DropN1qlPrimaryIndex">
            <summary>MemcachedBucketManager.DropN1qlPrimaryIndex()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.DropN1qlPrimaryIndexAsync">
            <summary>MemcachedBucketManager.DropN1qlPrimaryIndexAsync()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.DropN1qlPrimaryIndexString">
            <summary>MemcachedBucketManager.DropN1qlPrimaryIndex(String customName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.DropNamedPrimaryIndexAsyncString">
            <summary>MemcachedBucketManager.DropNamedPrimaryIndexAsync(String customName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.ExecuteIndexRequestAsyncString">
            <summary>MemcachedBucketManager.ExecuteIndexRequestAsync(String statement)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.ExecuteIndexRequestString">
            <summary>MemcachedBucketManager.ExecuteIndexRequest(String statement)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.GetDesignDocumentAsyncString">
            <summary>MemcachedBucketManager.GetDesignDocumentAsync(String designDocName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.GetDesignDocumentString">
            <summary>MemcachedBucketManager.GetDesignDocument(String designDocName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.GetDesignDocumentsAsyncBoolean">
            <summary>MemcachedBucketManager.GetDesignDocumentsAsync(Boolean includeDevelopment)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.GetDesignDocumentsBoolean">
            <summary>MemcachedBucketManager.GetDesignDocuments(Boolean includeDevelopment)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.InsertDesignDocumentAsyncStringString">
            <summary>MemcachedBucketManager.InsertDesignDocumentAsync(String designDocName, String designDoc)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.InsertDesignDocumentStringString">
            <summary>MemcachedBucketManager.InsertDesignDocument(String designDocName, String designDoc)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.ListN1qlIndexes">
            <summary>MemcachedBucketManager.ListN1qlIndexes()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.ListN1qlIndexesAsync">
            <summary>MemcachedBucketManager.ListN1qlIndexesAsync()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.RemoveDesignDocumentAsyncString">
            <summary>MemcachedBucketManager.RemoveDesignDocumentAsync(String designDocName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.RemoveDesignDocumentString">
            <summary>MemcachedBucketManager.RemoveDesignDocument(String designDocName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.UpdateDesignDocumentAsyncStringString">
            <summary>MemcachedBucketManager.UpdateDesignDocumentAsync(String designDocName, String designDoc)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.UpdateDesignDocumentStringString">
            <summary>MemcachedBucketManager.UpdateDesignDocument(String designDocName, String designDoc)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.WatchN1qlIndexesAsyncListOfStringBooleanInt64TimeSpan">
            <summary>MemcachedBucketManager.WatchN1qlIndexesAsync(List`1&lt;String&gt; watchList, Boolean watchPrimary, Int64 watchTimeout, TimeSpan watchTimeUnit)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.WatchN1qlIndexesListOfStringBooleanInt64TimeSpan">
            <summary>MemcachedBucketManager.WatchN1qlIndexes(List`1&lt;String&gt; watchList, Boolean watchPrimary, Int64 watchTimeout, TimeSpan watchTimeUnit)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Management.Fakes.ShimMemcachedBucketManager.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.AllInstances.BuildN1qlDeferredIndexes">
            <summary>MemcachedBucketManager.BuildN1qlDeferredIndexes()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.AllInstances.BuildN1qlDeferredIndexesAsync">
            <summary>MemcachedBucketManager.BuildN1qlDeferredIndexesAsync()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.AllInstances.CreateN1qlIndexAsyncStringBooleanStringArray">
            <summary>MemcachedBucketManager.CreateN1qlIndexAsync(String indexName, Boolean defer, String[] fields)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.AllInstances.CreateN1qlIndexStringBooleanStringArray">
            <summary>MemcachedBucketManager.CreateN1qlIndex(String indexName, Boolean defer, String[] fields)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.AllInstances.CreateN1qlPrimaryIndexAsyncBoolean">
            <summary>MemcachedBucketManager.CreateN1qlPrimaryIndexAsync(Boolean defer)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.AllInstances.CreateN1qlPrimaryIndexAsyncStringBoolean">
            <summary>MemcachedBucketManager.CreateN1qlPrimaryIndexAsync(String customName, Boolean defer)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.AllInstances.CreateN1qlPrimaryIndexBoolean">
            <summary>MemcachedBucketManager.CreateN1qlPrimaryIndex(Boolean defer)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.AllInstances.CreateN1qlPrimaryIndexStringBoolean">
            <summary>MemcachedBucketManager.CreateN1qlPrimaryIndex(String customName, Boolean defer)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.AllInstances.DropN1qlIndexAsyncString">
            <summary>MemcachedBucketManager.DropN1qlIndexAsync(String name)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.AllInstances.DropN1qlIndexString">
            <summary>MemcachedBucketManager.DropN1qlIndex(String name)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.AllInstances.DropN1qlPrimaryIndex">
            <summary>MemcachedBucketManager.DropN1qlPrimaryIndex()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.AllInstances.DropN1qlPrimaryIndexAsync">
            <summary>MemcachedBucketManager.DropN1qlPrimaryIndexAsync()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.AllInstances.DropN1qlPrimaryIndexString">
            <summary>MemcachedBucketManager.DropN1qlPrimaryIndex(String customName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.AllInstances.DropNamedPrimaryIndexAsyncString">
            <summary>MemcachedBucketManager.DropNamedPrimaryIndexAsync(String customName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.AllInstances.ExecuteIndexRequestAsyncString">
            <summary>MemcachedBucketManager.ExecuteIndexRequestAsync(String statement)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.AllInstances.ExecuteIndexRequestString">
            <summary>MemcachedBucketManager.ExecuteIndexRequest(String statement)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.AllInstances.GetDesignDocumentAsyncString">
            <summary>MemcachedBucketManager.GetDesignDocumentAsync(String designDocName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.AllInstances.GetDesignDocumentString">
            <summary>MemcachedBucketManager.GetDesignDocument(String designDocName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.AllInstances.GetDesignDocumentsAsyncBoolean">
            <summary>MemcachedBucketManager.GetDesignDocumentsAsync(Boolean includeDevelopment)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.AllInstances.GetDesignDocumentsBoolean">
            <summary>MemcachedBucketManager.GetDesignDocuments(Boolean includeDevelopment)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.AllInstances.InsertDesignDocumentAsyncStringString">
            <summary>MemcachedBucketManager.InsertDesignDocumentAsync(String designDocName, String designDoc)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.AllInstances.InsertDesignDocumentStringString">
            <summary>MemcachedBucketManager.InsertDesignDocument(String designDocName, String designDoc)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.AllInstances.ListN1qlIndexes">
            <summary>MemcachedBucketManager.ListN1qlIndexes()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.AllInstances.ListN1qlIndexesAsync">
            <summary>MemcachedBucketManager.ListN1qlIndexesAsync()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.AllInstances.RemoveDesignDocumentAsyncString">
            <summary>MemcachedBucketManager.RemoveDesignDocumentAsync(String designDocName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.AllInstances.RemoveDesignDocumentString">
            <summary>MemcachedBucketManager.RemoveDesignDocument(String designDocName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.AllInstances.UpdateDesignDocumentAsyncStringString">
            <summary>MemcachedBucketManager.UpdateDesignDocumentAsync(String designDocName, String designDoc)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.AllInstances.UpdateDesignDocumentStringString">
            <summary>MemcachedBucketManager.UpdateDesignDocument(String designDocName, String designDoc)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.AllInstances.WatchN1qlIndexesAsyncListOfStringBooleanInt64TimeSpan">
            <summary>MemcachedBucketManager.WatchN1qlIndexesAsync(List`1&lt;String&gt; watchList, Boolean watchPrimary, Int64 watchTimeout, TimeSpan watchTimeUnit)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.ShimMemcachedBucketManager.AllInstances.WatchN1qlIndexesListOfStringBooleanInt64TimeSpan">
            <summary>MemcachedBucketManager.WatchN1qlIndexes(List`1&lt;String&gt; watchList, Boolean watchPrimary, Int64 watchTimeout, TimeSpan watchTimeUnit)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Management.Fakes.StubBucketSettings">
            <summary>Couchbase.Management.BucketSettings의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubBucketSettings.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubBucketSettings.InitializeStub">
            <summary>type StubBucketSettings의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.StubBucketSettings.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.StubBucketSettings.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.StubBucketSettings.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Management.Fakes.StubClusterProvisioner">
            <summary>Couchbase.Management.ClusterProvisioner의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubClusterProvisioner.#ctor(Couchbase.Cluster,System.String,System.String)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubClusterProvisioner.InitializeStub">
            <summary>type StubClusterProvisioner의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.StubClusterProvisioner.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.StubClusterProvisioner.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.StubClusterProvisioner.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Management.Fakes.StubClusterSettings">
            <summary>Couchbase.Management.ClusterSettings의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubClusterSettings.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubClusterSettings.InitializeStub">
            <summary>type StubClusterSettings의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.StubClusterSettings.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.StubClusterSettings.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.StubClusterSettings.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Management.Fakes.StubCompositeResult">
            <summary>Couchbase.Management.CompositeResult의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubCompositeResult.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubCompositeResult.InitializeStub">
            <summary>type StubCompositeResult의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.StubCompositeResult.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.StubCompositeResult.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.StubCompositeResult.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Management.Fakes.StubIBucketManager">
            <summary>Couchbase.Management.IBucketManager의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIBucketManager.#ctor">
            <summary>type StubIBucketManager의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIBucketManager.BucketNameGet">
            <summary>IBucketManager.get_BucketName()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIBucketManager.BuildN1qlDeferredIndexes">
            <summary>IBucketManager.BuildN1qlDeferredIndexes()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIBucketManager.BuildN1qlDeferredIndexesAsync">
            <summary>IBucketManager.BuildN1qlDeferredIndexesAsync()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIBucketManager.cnc::Couchbase#Management#IBucketManager#BuildN1qlDeferredIndexes">
            <summary>IBucketManager.BuildN1qlDeferredIndexes()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIBucketManager.cnc::Couchbase#Management#IBucketManager#BuildN1qlDeferredIndexesAsync">
            <summary>IBucketManager.BuildN1qlDeferredIndexesAsync()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIBucketManager.cnc::Couchbase#Management#IBucketManager#CreateN1qlIndex(System.String,System.Boolean,System.String[])">
            <summary>IBucketManager.CreateN1qlIndex(String indexName, Boolean defer, String[] fields)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIBucketManager.cnc::Couchbase#Management#IBucketManager#CreateN1qlIndexAsync(System.String,System.Boolean,System.String[])">
            <summary>IBucketManager.CreateN1qlIndexAsync(String indexName, Boolean defer, String[] fields)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIBucketManager.cnc::Couchbase#Management#IBucketManager#CreateN1qlPrimaryIndex(System.Boolean)">
            <summary>IBucketManager.CreateN1qlPrimaryIndex(Boolean defer)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIBucketManager.cnc::Couchbase#Management#IBucketManager#CreateN1qlPrimaryIndex(System.String,System.Boolean)">
            <summary>IBucketManager.CreateN1qlPrimaryIndex(String customName, Boolean defer)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIBucketManager.cnc::Couchbase#Management#IBucketManager#CreateN1qlPrimaryIndexAsync(System.Boolean)">
            <summary>IBucketManager.CreateN1qlPrimaryIndexAsync(Boolean defer)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIBucketManager.cnc::Couchbase#Management#IBucketManager#CreateN1qlPrimaryIndexAsync(System.String,System.Boolean)">
            <summary>IBucketManager.CreateN1qlPrimaryIndexAsync(String customName, Boolean defer)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIBucketManager.cnc::Couchbase#Management#IBucketManager#DropN1qlIndex(System.String)">
            <summary>IBucketManager.DropN1qlIndex(String name)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIBucketManager.cnc::Couchbase#Management#IBucketManager#DropN1qlIndexAsync(System.String)">
            <summary>IBucketManager.DropN1qlIndexAsync(String name)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIBucketManager.cnc::Couchbase#Management#IBucketManager#DropN1qlPrimaryIndex">
            <summary>IBucketManager.DropN1qlPrimaryIndex()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIBucketManager.cnc::Couchbase#Management#IBucketManager#DropN1qlPrimaryIndex(System.String)">
            <summary>IBucketManager.DropN1qlPrimaryIndex(String customName)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIBucketManager.cnc::Couchbase#Management#IBucketManager#DropN1qlPrimaryIndexAsync">
            <summary>IBucketManager.DropN1qlPrimaryIndexAsync()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIBucketManager.cnc::Couchbase#Management#IBucketManager#DropNamedPrimaryIndexAsync(System.String)">
            <summary>IBucketManager.DropNamedPrimaryIndexAsync(String customName)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIBucketManager.cnc::Couchbase#Management#IBucketManager#Flush">
            <summary>IBucketManager.Flush()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIBucketManager.cnc::Couchbase#Management#IBucketManager#FlushAsync">
            <summary>IBucketManager.FlushAsync()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIBucketManager.cnc::Couchbase#Management#IBucketManager#GetDesignDocument(System.String)">
            <summary>IBucketManager.GetDesignDocument(String designDocName)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIBucketManager.cnc::Couchbase#Management#IBucketManager#GetDesignDocumentAsync(System.String)">
            <summary>IBucketManager.GetDesignDocumentAsync(String designDocName)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIBucketManager.cnc::Couchbase#Management#IBucketManager#GetDesignDocuments(System.Boolean)">
            <summary>IBucketManager.GetDesignDocuments(Boolean includeDevelopment)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIBucketManager.cnc::Couchbase#Management#IBucketManager#GetDesignDocumentsAsync(System.Boolean)">
            <summary>IBucketManager.GetDesignDocumentsAsync(Boolean includeDevelopment)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIBucketManager.cnc::Couchbase#Management#IBucketManager#InsertDesignDocument(System.String,System.String)">
            <summary>IBucketManager.InsertDesignDocument(String designDocName, String designDoc)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIBucketManager.cnc::Couchbase#Management#IBucketManager#InsertDesignDocumentAsync(System.String,System.String)">
            <summary>IBucketManager.InsertDesignDocumentAsync(String designDocName, String designDoc)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIBucketManager.cnc::Couchbase#Management#IBucketManager#ListN1qlIndexes">
            <summary>IBucketManager.ListN1qlIndexes()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIBucketManager.cnc::Couchbase#Management#IBucketManager#ListN1qlIndexesAsync">
            <summary>IBucketManager.ListN1qlIndexesAsync()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIBucketManager.cnc::Couchbase#Management#IBucketManager#RemoveDesignDocument(System.String)">
            <summary>IBucketManager.RemoveDesignDocument(String designDocName)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIBucketManager.cnc::Couchbase#Management#IBucketManager#RemoveDesignDocumentAsync(System.String)">
            <summary>IBucketManager.RemoveDesignDocumentAsync(String designDocName)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIBucketManager.cnc::Couchbase#Management#IBucketManager#UpdateDesignDocument(System.String,System.String)">
            <summary>IBucketManager.UpdateDesignDocument(String designDocName, String designDoc)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIBucketManager.cnc::Couchbase#Management#IBucketManager#UpdateDesignDocumentAsync(System.String,System.String)">
            <summary>IBucketManager.UpdateDesignDocumentAsync(String designDocName, String designDoc)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIBucketManager.cnc::Couchbase#Management#IBucketManager#WatchN1qlIndexes(System.Collections.Generic.List{System.String},System.Boolean,System.Int64,System.TimeSpan)">
            <summary>IBucketManager.WatchN1qlIndexes(List`1&lt;String&gt; watchList, Boolean watchPrimary, Int64 watchTimeout, TimeSpan watchTimeUnit)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIBucketManager.cnc::Couchbase#Management#IBucketManager#WatchN1qlIndexesAsync(System.Collections.Generic.List{System.String},System.Boolean,System.Int64,System.TimeSpan)">
            <summary>IBucketManager.WatchN1qlIndexesAsync(List`1&lt;String&gt; watchList, Boolean watchPrimary, Int64 watchTimeout, TimeSpan watchTimeUnit)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIBucketManager.CreateN1qlIndexAsyncStringBooleanStringArray">
            <summary>IBucketManager.CreateN1qlIndexAsync(String indexName, Boolean defer, String[] fields)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIBucketManager.CreateN1qlIndexStringBooleanStringArray">
            <summary>IBucketManager.CreateN1qlIndex(String indexName, Boolean defer, String[] fields)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIBucketManager.CreateN1qlPrimaryIndexAsyncBoolean">
            <summary>IBucketManager.CreateN1qlPrimaryIndexAsync(Boolean defer)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIBucketManager.CreateN1qlPrimaryIndexAsyncStringBoolean">
            <summary>IBucketManager.CreateN1qlPrimaryIndexAsync(String customName, Boolean defer)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIBucketManager.CreateN1qlPrimaryIndexBoolean">
            <summary>IBucketManager.CreateN1qlPrimaryIndex(Boolean defer)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIBucketManager.CreateN1qlPrimaryIndexStringBoolean">
            <summary>IBucketManager.CreateN1qlPrimaryIndex(String customName, Boolean defer)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIBucketManager.Dispose">
            <summary>IDisposable.Dispose()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIBucketManager.DropN1qlIndexAsyncString">
            <summary>IBucketManager.DropN1qlIndexAsync(String name)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIBucketManager.DropN1qlIndexString">
            <summary>IBucketManager.DropN1qlIndex(String name)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIBucketManager.DropN1qlPrimaryIndex">
            <summary>IBucketManager.DropN1qlPrimaryIndex()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIBucketManager.DropN1qlPrimaryIndexAsync">
            <summary>IBucketManager.DropN1qlPrimaryIndexAsync()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIBucketManager.DropN1qlPrimaryIndexString">
            <summary>IBucketManager.DropN1qlPrimaryIndex(String customName)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIBucketManager.DropNamedPrimaryIndexAsyncString">
            <summary>IBucketManager.DropNamedPrimaryIndexAsync(String customName)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIBucketManager.Flush">
            <summary>IBucketManager.Flush()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIBucketManager.FlushAsync">
            <summary>IBucketManager.FlushAsync()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIBucketManager.GetDesignDocumentAsyncString">
            <summary>IBucketManager.GetDesignDocumentAsync(String designDocName)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIBucketManager.GetDesignDocumentString">
            <summary>IBucketManager.GetDesignDocument(String designDocName)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIBucketManager.GetDesignDocumentsAsyncBoolean">
            <summary>IBucketManager.GetDesignDocumentsAsync(Boolean includeDevelopment)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIBucketManager.GetDesignDocumentsBoolean">
            <summary>IBucketManager.GetDesignDocuments(Boolean includeDevelopment)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIBucketManager.InsertDesignDocumentAsyncStringString">
            <summary>IBucketManager.InsertDesignDocumentAsync(String designDocName, String designDoc)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIBucketManager.InsertDesignDocumentStringString">
            <summary>IBucketManager.InsertDesignDocument(String designDocName, String designDoc)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIBucketManager.ListN1qlIndexes">
            <summary>IBucketManager.ListN1qlIndexes()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIBucketManager.ListN1qlIndexesAsync">
            <summary>IBucketManager.ListN1qlIndexesAsync()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIBucketManager.RemoveDesignDocumentAsyncString">
            <summary>IBucketManager.RemoveDesignDocumentAsync(String designDocName)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIBucketManager.RemoveDesignDocumentString">
            <summary>IBucketManager.RemoveDesignDocument(String designDocName)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIBucketManager.global::System#IDisposable#Dispose">
            <summary>IDisposable.Dispose()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIBucketManager.UpdateDesignDocumentAsyncStringString">
            <summary>IBucketManager.UpdateDesignDocumentAsync(String designDocName, String designDoc)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIBucketManager.UpdateDesignDocumentStringString">
            <summary>IBucketManager.UpdateDesignDocument(String designDocName, String designDoc)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIBucketManager.WatchN1qlIndexesAsyncListOfStringBooleanInt64TimeSpan">
            <summary>IBucketManager.WatchN1qlIndexesAsync(List`1&lt;String&gt; watchList, Boolean watchPrimary, Int64 watchTimeout, TimeSpan watchTimeUnit)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIBucketManager.WatchN1qlIndexesListOfStringBooleanInt64TimeSpan">
            <summary>IBucketManager.WatchN1qlIndexes(List`1&lt;String&gt; watchList, Boolean watchPrimary, Int64 watchTimeout, TimeSpan watchTimeUnit)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.StubIBucketManager.cnc::Couchbase#Management#IBucketManager#BucketName">
            <summary>IBucketManager.get_BucketName()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Management.Fakes.StubIClusterManager">
            <summary>Couchbase.Management.IClusterManager의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIClusterManager.#ctor">
            <summary>type StubIClusterManager의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIClusterManager.AddNodeAsyncString">
            <summary>IClusterManager.AddNodeAsync(String ipAddress)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIClusterManager.AddNodeAsyncStringCouchbaseServiceArray">
            <summary>IClusterManager.AddNodeAsync(String ipAddress, CouchbaseService[] services)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIClusterManager.AddNodeString">
            <summary>IClusterManager.AddNode(String ipAddress)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIClusterManager.AddSampleBucketAsyncStringString">
            <summary>IClusterManager.AddSampleBucketAsync(String hostname, String sampleBucketName)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIClusterManager.ClusterInfo">
            <summary>IClusterManager.ClusterInfo()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIClusterManager.ClusterInfoAsync">
            <summary>IClusterManager.ClusterInfoAsync()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIClusterManager.ConfigureAdminAsyncString">
            <summary>IClusterManager.ConfigureAdminAsync(String hostName)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIClusterManager.ConfigureMemoryAsyncStringUInt32UInt32">
            <summary>IClusterManager.ConfigureMemoryAsync(String hostName, UInt32 dataMemQuota, UInt32 indexMemQuota)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIClusterManager.cnc::Couchbase#Management#IClusterManager#AddNode(System.String)">
            <summary>IClusterManager.AddNode(String ipAddress)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIClusterManager.cnc::Couchbase#Management#IClusterManager#AddNodeAsync(System.String)">
            <summary>IClusterManager.AddNodeAsync(String ipAddress)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIClusterManager.cnc::Couchbase#Management#IClusterManager#AddNodeAsync(System.String,Couchbase.Management.CouchbaseService[])">
            <summary>IClusterManager.AddNodeAsync(String ipAddress, CouchbaseService[] services)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIClusterManager.cnc::Couchbase#Management#IClusterManager#AddSampleBucketAsync(System.String,System.String)">
            <summary>IClusterManager.AddSampleBucketAsync(String hostname, String sampleBucketName)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIClusterManager.cnc::Couchbase#Management#IClusterManager#ClusterInfo">
            <summary>IClusterManager.ClusterInfo()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIClusterManager.cnc::Couchbase#Management#IClusterManager#ClusterInfoAsync">
            <summary>IClusterManager.ClusterInfoAsync()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIClusterManager.cnc::Couchbase#Management#IClusterManager#ConfigureAdminAsync(System.String)">
            <summary>IClusterManager.ConfigureAdminAsync(String hostName)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIClusterManager.cnc::Couchbase#Management#IClusterManager#ConfigureMemoryAsync(System.String,System.UInt32,System.UInt32)">
            <summary>IClusterManager.ConfigureMemoryAsync(String hostName, UInt32 dataMemQuota, UInt32 indexMemQuota)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIClusterManager.cnc::Couchbase#Management#IClusterManager#CreateBucket(System.String,System.UInt32,Couchbase.Core.Buckets.BucketTypeEnum,Couchbase.Management.ReplicaNumber,Couchbase.Authentication.AuthType,System.Boolean,System.Boolean,System.Boolean,System.String,Couchbase.Management.ThreadNumber)">
            <summary>IClusterManager.CreateBucket(String name, UInt32 ramQuota, BucketTypeEnum bucketType, ReplicaNumber replicaNumber, AuthType authType, Boolean indexReplicas, Boolean flushEnabled, Boolean parallelDbAndViewCompaction, String saslPassword, ThreadNumber threadNumber)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIClusterManager.cnc::Couchbase#Management#IClusterManager#CreateBucketAsync(Couchbase.Management.BucketSettings)">
            <summary>IClusterManager.CreateBucketAsync(BucketSettings settings)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIClusterManager.cnc::Couchbase#Management#IClusterManager#CreateBucketAsync(System.String,System.UInt32,Couchbase.Core.Buckets.BucketTypeEnum,Couchbase.Management.ReplicaNumber,Couchbase.Authentication.AuthType,System.Boolean,System.Boolean,System.Boolean,System.String,Couchbase.Management.ThreadNumber)">
            <summary>IClusterManager.CreateBucketAsync(String name, UInt32 ramQuota, BucketTypeEnum bucketType, ReplicaNumber replicaNumber, AuthType authType, Boolean indexReplicas, Boolean flushEnabled, Boolean parallelDbAndViewCompaction, String saslPassword, ThreadNumber threadNumber)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIClusterManager.cnc::Couchbase#Management#IClusterManager#FailoverNode(System.String)">
            <summary>IClusterManager.FailoverNode(String hostname)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIClusterManager.cnc::Couchbase#Management#IClusterManager#FailoverNodeAsync(System.String)">
            <summary>IClusterManager.FailoverNodeAsync(String hostname)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIClusterManager.cnc::Couchbase#Management#IClusterManager#InitializeClusterAsync(System.String,System.String,System.String)">
            <summary>IClusterManager.InitializeClusterAsync(String hostName, String path, String indexPath)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIClusterManager.cnc::Couchbase#Management#IClusterManager#ListBuckets">
            <summary>IClusterManager.ListBuckets()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIClusterManager.cnc::Couchbase#Management#IClusterManager#ListBucketsAsync">
            <summary>IClusterManager.ListBucketsAsync()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIClusterManager.cnc::Couchbase#Management#IClusterManager#Rebalance">
            <summary>IClusterManager.Rebalance()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIClusterManager.cnc::Couchbase#Management#IClusterManager#RebalanceAsync">
            <summary>IClusterManager.RebalanceAsync()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIClusterManager.cnc::Couchbase#Management#IClusterManager#RemoveBucket(System.String)">
            <summary>IClusterManager.RemoveBucket(String name)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIClusterManager.cnc::Couchbase#Management#IClusterManager#RemoveBucketAsync(System.String)">
            <summary>IClusterManager.RemoveBucketAsync(String name)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIClusterManager.cnc::Couchbase#Management#IClusterManager#RemoveNode(System.String)">
            <summary>IClusterManager.RemoveNode(String ipAddress)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIClusterManager.cnc::Couchbase#Management#IClusterManager#RemoveNodeAsync(System.String)">
            <summary>IClusterManager.RemoveNodeAsync(String ipAddress)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIClusterManager.cnc::Couchbase#Management#IClusterManager#RenameNodeAsync(System.String)">
            <summary>IClusterManager.RenameNodeAsync(String hostName)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIClusterManager.cnc::Couchbase#Management#IClusterManager#SetupServicesAsync(System.String,System.Collections.Generic.List{Couchbase.Management.CouchbaseService})">
            <summary>IClusterManager.SetupServicesAsync(String hostName, List`1&lt;CouchbaseService&gt; services)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIClusterManager.cnc::Couchbase#Management#IClusterManager#SetupServicesAsync(System.String,Couchbase.Management.CouchbaseService[])">
            <summary>IClusterManager.SetupServicesAsync(String hostName, CouchbaseService[] services)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIClusterManager.CreateBucketAsyncBucketSettings">
            <summary>IClusterManager.CreateBucketAsync(BucketSettings settings)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIClusterManager.CreateBucketAsyncStringUInt32BucketTypeEnumReplicaNumberAuthTypeBooleanBooleanBooleanStringThreadNumber">
            <summary>IClusterManager.CreateBucketAsync(String name, UInt32 ramQuota, BucketTypeEnum bucketType, ReplicaNumber replicaNumber, AuthType authType, Boolean indexReplicas, Boolean flushEnabled, Boolean parallelDbAndViewCompaction, String saslPassword, ThreadNumber threadNumber)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIClusterManager.CreateBucketStringUInt32BucketTypeEnumReplicaNumberAuthTypeBooleanBooleanBooleanStringThreadNumber">
            <summary>IClusterManager.CreateBucket(String name, UInt32 ramQuota, BucketTypeEnum bucketType, ReplicaNumber replicaNumber, AuthType authType, Boolean indexReplicas, Boolean flushEnabled, Boolean parallelDbAndViewCompaction, String saslPassword, ThreadNumber threadNumber)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIClusterManager.Dispose">
            <summary>IDisposable.Dispose()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIClusterManager.FailoverNodeAsyncString">
            <summary>IClusterManager.FailoverNodeAsync(String hostname)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIClusterManager.FailoverNodeString">
            <summary>IClusterManager.FailoverNode(String hostname)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIClusterManager.InitializeClusterAsyncStringStringString">
            <summary>IClusterManager.InitializeClusterAsync(String hostName, String path, String indexPath)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIClusterManager.ListBuckets">
            <summary>IClusterManager.ListBuckets()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIClusterManager.ListBucketsAsync">
            <summary>IClusterManager.ListBucketsAsync()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIClusterManager.Rebalance">
            <summary>IClusterManager.Rebalance()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIClusterManager.RebalanceAsync">
            <summary>IClusterManager.RebalanceAsync()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIClusterManager.RemoveBucketAsyncString">
            <summary>IClusterManager.RemoveBucketAsync(String name)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIClusterManager.RemoveBucketString">
            <summary>IClusterManager.RemoveBucket(String name)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIClusterManager.RemoveNodeAsyncString">
            <summary>IClusterManager.RemoveNodeAsync(String ipAddress)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIClusterManager.RemoveNodeString">
            <summary>IClusterManager.RemoveNode(String ipAddress)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIClusterManager.RenameNodeAsyncString">
            <summary>IClusterManager.RenameNodeAsync(String hostName)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIClusterManager.SetupServicesAsyncStringCouchbaseServiceArray">
            <summary>IClusterManager.SetupServicesAsync(String hostName, CouchbaseService[] services)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubIClusterManager.SetupServicesAsyncStringListOfCouchbaseService">
            <summary>IClusterManager.SetupServicesAsync(String hostName, List`1&lt;CouchbaseService&gt; services)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubIClusterManager.global::System#IDisposable#Dispose">
            <summary>IDisposable.Dispose()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Management.Fakes.StubMemcachedBucketManager">
            <summary>Couchbase.Management.MemcachedBucketManager의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubMemcachedBucketManager.#ctor(Couchbase.Core.IBucket,Couchbase.Configuration.Client.ClientConfiguration,Couchbase.Views.IDataMapper,System.String,System.String)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubMemcachedBucketManager.BuildN1qlDeferredIndexes">
            <summary>MemcachedBucketManager.BuildN1qlDeferredIndexes()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubMemcachedBucketManager.BuildN1qlDeferredIndexes01">
            <summary>MemcachedBucketManager.BuildN1qlDeferredIndexes()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubMemcachedBucketManager.BuildN1qlDeferredIndexesAsync">
            <summary>MemcachedBucketManager.BuildN1qlDeferredIndexesAsync()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubMemcachedBucketManager.BuildN1qlDeferredIndexesAsync01">
            <summary>MemcachedBucketManager.BuildN1qlDeferredIndexesAsync()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubMemcachedBucketManager.CreateAuthenticatedHttpClient">
            <summary>BucketManager.CreateAuthenticatedHttpClient()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubMemcachedBucketManager.CreateAuthenticatedHttpClient01">
            <summary>BucketManager.CreateAuthenticatedHttpClient()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubMemcachedBucketManager.CreateN1qlIndex(System.String,System.Boolean,System.String[])">
            <summary>MemcachedBucketManager.CreateN1qlIndex(String indexName, Boolean defer, String[] fields)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubMemcachedBucketManager.CreateN1qlIndexAsync(System.String,System.Boolean,System.String[])">
            <summary>MemcachedBucketManager.CreateN1qlIndexAsync(String indexName, Boolean defer, String[] fields)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubMemcachedBucketManager.CreateN1qlIndexAsyncStringBooleanStringArray">
            <summary>MemcachedBucketManager.CreateN1qlIndexAsync(String indexName, Boolean defer, String[] fields)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubMemcachedBucketManager.CreateN1qlIndexStringBooleanStringArray">
            <summary>MemcachedBucketManager.CreateN1qlIndex(String indexName, Boolean defer, String[] fields)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubMemcachedBucketManager.CreateN1qlPrimaryIndex(System.Boolean)">
            <summary>MemcachedBucketManager.CreateN1qlPrimaryIndex(Boolean defer)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubMemcachedBucketManager.CreateN1qlPrimaryIndex(System.String,System.Boolean)">
            <summary>MemcachedBucketManager.CreateN1qlPrimaryIndex(String customName, Boolean defer)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubMemcachedBucketManager.CreateN1qlPrimaryIndexAsync(System.Boolean)">
            <summary>MemcachedBucketManager.CreateN1qlPrimaryIndexAsync(Boolean defer)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubMemcachedBucketManager.CreateN1qlPrimaryIndexAsync(System.String,System.Boolean)">
            <summary>MemcachedBucketManager.CreateN1qlPrimaryIndexAsync(String customName, Boolean defer)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubMemcachedBucketManager.CreateN1qlPrimaryIndexAsyncBoolean">
            <summary>MemcachedBucketManager.CreateN1qlPrimaryIndexAsync(Boolean defer)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubMemcachedBucketManager.CreateN1qlPrimaryIndexAsyncStringBoolean">
            <summary>MemcachedBucketManager.CreateN1qlPrimaryIndexAsync(String customName, Boolean defer)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubMemcachedBucketManager.CreateN1qlPrimaryIndexBoolean">
            <summary>MemcachedBucketManager.CreateN1qlPrimaryIndex(Boolean defer)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubMemcachedBucketManager.CreateN1qlPrimaryIndexStringBoolean">
            <summary>MemcachedBucketManager.CreateN1qlPrimaryIndex(String customName, Boolean defer)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubMemcachedBucketManager.DropN1qlIndex(System.String)">
            <summary>MemcachedBucketManager.DropN1qlIndex(String name)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubMemcachedBucketManager.DropN1qlIndexAsync(System.String)">
            <summary>MemcachedBucketManager.DropN1qlIndexAsync(String name)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubMemcachedBucketManager.DropN1qlIndexAsyncString">
            <summary>MemcachedBucketManager.DropN1qlIndexAsync(String name)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubMemcachedBucketManager.DropN1qlIndexString">
            <summary>MemcachedBucketManager.DropN1qlIndex(String name)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubMemcachedBucketManager.DropN1qlPrimaryIndex">
            <summary>MemcachedBucketManager.DropN1qlPrimaryIndex()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubMemcachedBucketManager.DropN1qlPrimaryIndex(System.String)">
            <summary>MemcachedBucketManager.DropN1qlPrimaryIndex(String customName)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubMemcachedBucketManager.DropN1qlPrimaryIndex01">
            <summary>MemcachedBucketManager.DropN1qlPrimaryIndex()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubMemcachedBucketManager.DropN1qlPrimaryIndexAsync">
            <summary>MemcachedBucketManager.DropN1qlPrimaryIndexAsync()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubMemcachedBucketManager.DropN1qlPrimaryIndexAsync01">
            <summary>MemcachedBucketManager.DropN1qlPrimaryIndexAsync()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubMemcachedBucketManager.DropN1qlPrimaryIndexString">
            <summary>MemcachedBucketManager.DropN1qlPrimaryIndex(String customName)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubMemcachedBucketManager.DropNamedPrimaryIndexAsync(System.String)">
            <summary>MemcachedBucketManager.DropNamedPrimaryIndexAsync(String customName)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubMemcachedBucketManager.DropNamedPrimaryIndexAsyncString">
            <summary>MemcachedBucketManager.DropNamedPrimaryIndexAsync(String customName)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubMemcachedBucketManager.ExecuteIndexRequest(System.String)">
            <summary>MemcachedBucketManager.ExecuteIndexRequest(String statement)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubMemcachedBucketManager.ExecuteIndexRequestAsync(System.String)">
            <summary>MemcachedBucketManager.ExecuteIndexRequestAsync(String statement)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubMemcachedBucketManager.ExecuteIndexRequestAsyncString">
            <summary>MemcachedBucketManager.ExecuteIndexRequestAsync(String statement)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubMemcachedBucketManager.ExecuteIndexRequestString">
            <summary>MemcachedBucketManager.ExecuteIndexRequest(String statement)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubMemcachedBucketManager.FlushAsync">
            <summary>BucketManager.FlushAsync()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubMemcachedBucketManager.FlushAsync01">
            <summary>BucketManager.FlushAsync()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubMemcachedBucketManager.GetDesignDocument(System.String)">
            <summary>MemcachedBucketManager.GetDesignDocument(String designDocName)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubMemcachedBucketManager.GetDesignDocumentAsync(System.String)">
            <summary>MemcachedBucketManager.GetDesignDocumentAsync(String designDocName)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubMemcachedBucketManager.GetDesignDocumentAsyncString">
            <summary>MemcachedBucketManager.GetDesignDocumentAsync(String designDocName)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubMemcachedBucketManager.GetDesignDocumentString">
            <summary>MemcachedBucketManager.GetDesignDocument(String designDocName)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubMemcachedBucketManager.GetDesignDocuments(System.Boolean)">
            <summary>MemcachedBucketManager.GetDesignDocuments(Boolean includeDevelopment)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubMemcachedBucketManager.GetDesignDocumentsAsync(System.Boolean)">
            <summary>MemcachedBucketManager.GetDesignDocumentsAsync(Boolean includeDevelopment)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubMemcachedBucketManager.GetDesignDocumentsAsyncBoolean">
            <summary>MemcachedBucketManager.GetDesignDocumentsAsync(Boolean includeDevelopment)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubMemcachedBucketManager.GetDesignDocumentsBoolean">
            <summary>MemcachedBucketManager.GetDesignDocuments(Boolean includeDevelopment)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubMemcachedBucketManager.InitializeStub">
            <summary>type StubMemcachedBucketManager의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubMemcachedBucketManager.InsertDesignDocument(System.String,System.String)">
            <summary>MemcachedBucketManager.InsertDesignDocument(String designDocName, String designDoc)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubMemcachedBucketManager.InsertDesignDocumentAsync(System.String,System.String)">
            <summary>MemcachedBucketManager.InsertDesignDocumentAsync(String designDocName, String designDoc)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubMemcachedBucketManager.InsertDesignDocumentAsyncStringString">
            <summary>MemcachedBucketManager.InsertDesignDocumentAsync(String designDocName, String designDoc)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubMemcachedBucketManager.InsertDesignDocumentStringString">
            <summary>MemcachedBucketManager.InsertDesignDocument(String designDocName, String designDoc)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubMemcachedBucketManager.ListN1qlIndexes">
            <summary>MemcachedBucketManager.ListN1qlIndexes()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubMemcachedBucketManager.ListN1qlIndexes01">
            <summary>MemcachedBucketManager.ListN1qlIndexes()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubMemcachedBucketManager.ListN1qlIndexesAsync">
            <summary>MemcachedBucketManager.ListN1qlIndexesAsync()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubMemcachedBucketManager.ListN1qlIndexesAsync01">
            <summary>MemcachedBucketManager.ListN1qlIndexesAsync()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubMemcachedBucketManager.RemoveDesignDocument(System.String)">
            <summary>MemcachedBucketManager.RemoveDesignDocument(String designDocName)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubMemcachedBucketManager.RemoveDesignDocumentAsync(System.String)">
            <summary>MemcachedBucketManager.RemoveDesignDocumentAsync(String designDocName)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubMemcachedBucketManager.RemoveDesignDocumentAsyncString">
            <summary>MemcachedBucketManager.RemoveDesignDocumentAsync(String designDocName)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubMemcachedBucketManager.RemoveDesignDocumentString">
            <summary>MemcachedBucketManager.RemoveDesignDocument(String designDocName)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubMemcachedBucketManager.UpdateDesignDocument(System.String,System.String)">
            <summary>MemcachedBucketManager.UpdateDesignDocument(String designDocName, String designDoc)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubMemcachedBucketManager.UpdateDesignDocumentAsync(System.String,System.String)">
            <summary>MemcachedBucketManager.UpdateDesignDocumentAsync(String designDocName, String designDoc)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubMemcachedBucketManager.UpdateDesignDocumentAsyncStringString">
            <summary>MemcachedBucketManager.UpdateDesignDocumentAsync(String designDocName, String designDoc)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubMemcachedBucketManager.UpdateDesignDocumentStringString">
            <summary>MemcachedBucketManager.UpdateDesignDocument(String designDocName, String designDoc)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubMemcachedBucketManager.WatchN1qlIndexes(System.Collections.Generic.List{System.String},System.Boolean,System.Int64,System.TimeSpan)">
            <summary>MemcachedBucketManager.WatchN1qlIndexes(List`1&lt;String&gt; watchList, Boolean watchPrimary, Int64 watchTimeout, TimeSpan watchTimeUnit)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Fakes.StubMemcachedBucketManager.WatchN1qlIndexesAsync(System.Collections.Generic.List{System.String},System.Boolean,System.Int64,System.TimeSpan)">
            <summary>MemcachedBucketManager.WatchN1qlIndexesAsync(List`1&lt;String&gt; watchList, Boolean watchPrimary, Int64 watchTimeout, TimeSpan watchTimeUnit)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubMemcachedBucketManager.WatchN1qlIndexesAsyncListOfStringBooleanInt64TimeSpan">
            <summary>MemcachedBucketManager.WatchN1qlIndexesAsync(List`1&lt;String&gt; watchList, Boolean watchPrimary, Int64 watchTimeout, TimeSpan watchTimeUnit)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Fakes.StubMemcachedBucketManager.WatchN1qlIndexesListOfStringBooleanInt64TimeSpan">
            <summary>MemcachedBucketManager.WatchN1qlIndexes(List`1&lt;String&gt; watchList, Boolean watchPrimary, Int64 watchTimeout, TimeSpan watchTimeUnit)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.StubMemcachedBucketManager.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.StubMemcachedBucketManager.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Fakes.StubMemcachedBucketManager.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Management.Indexes.Fakes.ShimIndexAlreadyExistsException">
            <summary>Couchbase.Management.Indexes.IndexAlreadyExistsException의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Management.Indexes.Fakes.ShimIndexAlreadyExistsException.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Indexes.Fakes.ShimIndexAlreadyExistsException.#ctor(Couchbase.Management.Indexes.IndexAlreadyExistsException)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Indexes.Fakes.ShimIndexAlreadyExistsException.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Indexes.Fakes.ShimIndexAlreadyExistsException.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Indexes.Fakes.ShimIndexAlreadyExistsException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexAlreadyExistsException.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexAlreadyExistsException.Constructor">
            <summary>IndexAlreadyExistsException.IndexAlreadyExistsException()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Management.Indexes.Fakes.ShimIndexAlreadyExistsException.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Management.Indexes.Fakes.ShimIndexInfo">
            <summary>Couchbase.Management.Indexes.IndexInfo의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Management.Indexes.Fakes.ShimIndexInfo.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Indexes.Fakes.ShimIndexInfo.#ctor(Couchbase.Management.Indexes.IndexInfo)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Indexes.Fakes.ShimIndexInfo.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Indexes.Fakes.ShimIndexInfo.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexInfo.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexInfo.CondtionGet">
            <summary>IndexInfo.get_Condtion()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexInfo.CondtionSetString">
            <summary>IndexInfo.set_Condtion(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexInfo.Constructor">
            <summary>IndexInfo.IndexInfo()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexInfo.IndexKeyGet">
            <summary>IndexInfo.get_IndexKey()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexInfo.IndexKeySetObject">
            <summary>IndexInfo.set_IndexKey(Object value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexInfo.IsPrimaryGet">
            <summary>IndexInfo.get_IsPrimary()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexInfo.IsPrimarySetBoolean">
            <summary>IndexInfo.set_IsPrimary(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexInfo.KeyspaceGet">
            <summary>IndexInfo.get_Keyspace()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexInfo.KeyspaceSetString">
            <summary>IndexInfo.set_Keyspace(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexInfo.NameGet">
            <summary>IndexInfo.get_Name()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexInfo.NameSetString">
            <summary>IndexInfo.set_Name(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexInfo.NamespaceGet">
            <summary>IndexInfo.get_Namespace()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexInfo.NamespaceSetString">
            <summary>IndexInfo.set_Namespace(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexInfo.RawTypeGet">
            <summary>IndexInfo.get_RawType()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexInfo.RawTypeSetString">
            <summary>IndexInfo.set_RawType(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexInfo.StateGet">
            <summary>IndexInfo.get_State()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexInfo.StateSetString">
            <summary>IndexInfo.set_State(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexInfo.TypeGet">
            <summary>IndexInfo.get_Type()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexInfo.TypeSetIndexType">
            <summary>IndexInfo.set_Type(IndexType value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Management.Indexes.Fakes.ShimIndexInfo.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexInfo.AllInstances.CondtionGet">
            <summary>IndexInfo.get_Condtion()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexInfo.AllInstances.CondtionSetString">
            <summary>IndexInfo.set_Condtion(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexInfo.AllInstances.IndexKeyGet">
            <summary>IndexInfo.get_IndexKey()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexInfo.AllInstances.IndexKeySetObject">
            <summary>IndexInfo.set_IndexKey(Object value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexInfo.AllInstances.IsPrimaryGet">
            <summary>IndexInfo.get_IsPrimary()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexInfo.AllInstances.IsPrimarySetBoolean">
            <summary>IndexInfo.set_IsPrimary(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexInfo.AllInstances.KeyspaceGet">
            <summary>IndexInfo.get_Keyspace()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexInfo.AllInstances.KeyspaceSetString">
            <summary>IndexInfo.set_Keyspace(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexInfo.AllInstances.NameGet">
            <summary>IndexInfo.get_Name()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexInfo.AllInstances.NameSetString">
            <summary>IndexInfo.set_Name(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexInfo.AllInstances.NamespaceGet">
            <summary>IndexInfo.get_Namespace()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexInfo.AllInstances.NamespaceSetString">
            <summary>IndexInfo.set_Namespace(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexInfo.AllInstances.RawTypeGet">
            <summary>IndexInfo.get_RawType()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexInfo.AllInstances.RawTypeSetString">
            <summary>IndexInfo.set_RawType(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexInfo.AllInstances.StateGet">
            <summary>IndexInfo.get_State()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexInfo.AllInstances.StateSetString">
            <summary>IndexInfo.set_State(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexInfo.AllInstances.TypeGet">
            <summary>IndexInfo.get_Type()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexInfo.AllInstances.TypeSetIndexType">
            <summary>IndexInfo.set_Type(IndexType value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Management.Indexes.Fakes.ShimIndexResult">
            <summary>Couchbase.Management.Indexes.IndexResult의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Management.Indexes.Fakes.ShimIndexResult.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Indexes.Fakes.ShimIndexResult.#ctor(Couchbase.Management.Indexes.IndexResult)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Indexes.Fakes.ShimIndexResult.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Indexes.Fakes.ShimIndexResult.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Indexes.Fakes.ShimIndexResult.Bind(Couchbase.IResult)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Indexes.Fakes.ShimIndexResult.Bind(Couchbase.IResult{System.Collections.Generic.List{Couchbase.Management.Indexes.IndexInfo}})">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Indexes.Fakes.ShimIndexResult.Bind(System.Collections.IEnumerable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Indexes.Fakes.ShimIndexResult.Bind(System.Collections.Generic.IEnumerable{Couchbase.Management.Indexes.IndexInfo})">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexResult.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexResult.Constructor">
            <summary>IndexResult.IndexResult()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexResult.GetEnumerator">
            <summary>IndexResult.GetEnumerator()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexResult.SystemCollectionsIEnumerableGetEnumerator">
            <summary>IndexResult.System.Collections.IEnumerable.GetEnumerator()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Management.Indexes.Fakes.ShimIndexResult.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexResult.AllInstances.GetEnumerator">
            <summary>IndexResult.GetEnumerator()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.ShimIndexResult.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>IndexResult.System.Collections.IEnumerable.GetEnumerator()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Management.Indexes.Fakes.StubIndexAlreadyExistsException">
            <summary>Couchbase.Management.Indexes.IndexAlreadyExistsException의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Management.Indexes.Fakes.StubIndexAlreadyExistsException.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Indexes.Fakes.StubIndexAlreadyExistsException.AttachBackingFieldToHelpLink">
            <summary>대리자를 연결하여 StubIndexAlreadyExistsException.HelpLink을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Indexes.Fakes.StubIndexAlreadyExistsException.AttachBackingFieldToSource">
            <summary>대리자를 연결하여 StubIndexAlreadyExistsException.Source을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Indexes.Fakes.StubIndexAlreadyExistsException.DataGet">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Indexes.Fakes.StubIndexAlreadyExistsException.GetBaseException">
            <summary>Exception.GetBaseException()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Indexes.Fakes.StubIndexAlreadyExistsException.GetBaseException01">
            <summary>Exception.GetBaseException()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Indexes.Fakes.StubIndexAlreadyExistsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Exception.GetObjectData(SerializationInfo info, StreamingContext context)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Indexes.Fakes.StubIndexAlreadyExistsException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Exception.GetObjectData(SerializationInfo info, StreamingContext context)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Indexes.Fakes.StubIndexAlreadyExistsException.HelpLinkGet">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Indexes.Fakes.StubIndexAlreadyExistsException.HelpLinkSetString">
            <summary>Exception.set_HelpLink(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Indexes.Fakes.StubIndexAlreadyExistsException.InitializeStub">
            <summary>type StubIndexAlreadyExistsException의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Indexes.Fakes.StubIndexAlreadyExistsException.MessageGet">
            <summary>Exception.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Indexes.Fakes.StubIndexAlreadyExistsException.SourceGet">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Indexes.Fakes.StubIndexAlreadyExistsException.SourceSetString">
            <summary>Exception.set_Source(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Indexes.Fakes.StubIndexAlreadyExistsException.StackTraceGet">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Indexes.Fakes.StubIndexAlreadyExistsException.ToString">
            <summary>Exception.ToString()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Management.Indexes.Fakes.StubIndexAlreadyExistsException.ToString01">
            <summary>Exception.ToString()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.StubIndexAlreadyExistsException.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.StubIndexAlreadyExistsException.Data">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.StubIndexAlreadyExistsException.HelpLink">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.StubIndexAlreadyExistsException.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.StubIndexAlreadyExistsException.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.StubIndexAlreadyExistsException.Message">
            <summary>Exception.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.StubIndexAlreadyExistsException.Source">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.StubIndexAlreadyExistsException.StackTrace">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Management.Indexes.Fakes.StubIndexResult">
            <summary>Couchbase.Management.Indexes.IndexResult의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Management.Indexes.Fakes.StubIndexResult.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Management.Indexes.Fakes.StubIndexResult.InitializeStub">
            <summary>type StubIndexResult의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.StubIndexResult.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.StubIndexResult.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Management.Indexes.Fakes.StubIndexResult.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.N1QL.Fakes.ShimError">
            <summary>Couchbase.N1QL.Error의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimError.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimError.#ctor(Couchbase.N1QL.Error)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimError.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimError.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimError.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimError.CodeGet">
            <summary>Error.get_Code()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimError.CodeSetInt32">
            <summary>Error.set_Code(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimError.Constructor">
            <summary>Error.Error()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimError.MessageGet">
            <summary>Error.get_Message()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimError.MessageSetString">
            <summary>Error.set_Message(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimError.NameGet">
            <summary>Error.get_Name()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimError.NameSetString">
            <summary>Error.set_Name(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimError.SeverityGet">
            <summary>Error.get_Severity()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimError.SeveritySetSeverity">
            <summary>Error.set_Severity(Severity value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimError.TempGet">
            <summary>Error.get_Temp()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimError.TempSetBoolean">
            <summary>Error.set_Temp(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.N1QL.Fakes.ShimError.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimError.AllInstances.CodeGet">
            <summary>Error.get_Code()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimError.AllInstances.CodeSetInt32">
            <summary>Error.set_Code(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimError.AllInstances.MessageGet">
            <summary>Error.get_Message()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimError.AllInstances.MessageSetString">
            <summary>Error.set_Message(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimError.AllInstances.NameGet">
            <summary>Error.get_Name()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimError.AllInstances.NameSetString">
            <summary>Error.set_Name(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimError.AllInstances.SeverityGet">
            <summary>Error.get_Severity()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimError.AllInstances.SeveritySetSeverity">
            <summary>Error.set_Severity(Severity value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimError.AllInstances.TempGet">
            <summary>Error.get_Temp()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimError.AllInstances.TempSetBoolean">
            <summary>Error.set_Temp(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.N1QL.Fakes.ShimFailureCountingUri">
            <summary>Couchbase.N1QL.FailureCountingUri의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimFailureCountingUri.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimFailureCountingUri.#ctor(Couchbase.N1QL.FailureCountingUri)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimFailureCountingUri.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimFailureCountingUri.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimFailureCountingUri.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimFailureCountingUri.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimFailureCountingUri.ClearFailed">
            <summary>FailureCountingUri.ClearFailed()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimFailureCountingUri.ConstructorSerializationInfoStreamingContext">
            <summary>FailureCountingUri.FailureCountingUri(SerializationInfo serializationInfo, StreamingContext streamingContext)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimFailureCountingUri.ConstructorString">
            <summary>FailureCountingUri.FailureCountingUri(String uriString)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimFailureCountingUri.ConstructorStringUriKind">
            <summary>FailureCountingUri.FailureCountingUri(String uriString, UriKind uriKind)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimFailureCountingUri.ConstructorUriString">
            <summary>FailureCountingUri.FailureCountingUri(Uri baseUri, String relativeUri)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimFailureCountingUri.ConstructorUriUri">
            <summary>FailureCountingUri.FailureCountingUri(Uri baseUri, Uri relativeUri)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimFailureCountingUri.FailedCountGet">
            <summary>FailureCountingUri.get_FailedCount()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimFailureCountingUri.IncrementFailed">
            <summary>FailureCountingUri.IncrementFailed()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimFailureCountingUri.IsHealthyInt32">
            <summary>FailureCountingUri.IsHealthy(Int32 threshold)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.N1QL.Fakes.ShimFailureCountingUri.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimFailureCountingUri.AllInstances.ClearFailed">
            <summary>FailureCountingUri.ClearFailed()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimFailureCountingUri.AllInstances.FailedCountGet">
            <summary>FailureCountingUri.get_FailedCount()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimFailureCountingUri.AllInstances.IncrementFailed">
            <summary>FailureCountingUri.IncrementFailed()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimFailureCountingUri.AllInstances.IsHealthyInt32">
            <summary>FailureCountingUri.IsHealthy(Int32 threshold)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.N1QL.Fakes.ShimMetrics">
            <summary>Couchbase.N1QL.Metrics의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimMetrics.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimMetrics.#ctor(Couchbase.N1QL.Metrics)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimMetrics.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimMetrics.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMetrics.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMetrics.Constructor">
            <summary>Metrics.Metrics()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMetrics.ElaspedTimeGet">
            <summary>Metrics.get_ElaspedTime()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMetrics.ElaspedTimeSetString">
            <summary>Metrics.set_ElaspedTime(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMetrics.ErrorCountGet">
            <summary>Metrics.get_ErrorCount()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMetrics.ErrorCountSetUInt32">
            <summary>Metrics.set_ErrorCount(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMetrics.ExecutionTimeGet">
            <summary>Metrics.get_ExecutionTime()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMetrics.ExecutionTimeSetString">
            <summary>Metrics.set_ExecutionTime(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMetrics.MutationCountGet">
            <summary>Metrics.get_MutationCount()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMetrics.MutationCountSetUInt32">
            <summary>Metrics.set_MutationCount(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMetrics.ResultCountGet">
            <summary>Metrics.get_ResultCount()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMetrics.ResultCountSetUInt32">
            <summary>Metrics.set_ResultCount(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMetrics.ResultSizeGet">
            <summary>Metrics.get_ResultSize()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMetrics.ResultSizeSetUInt32">
            <summary>Metrics.set_ResultSize(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMetrics.SortCountGet">
            <summary>Metrics.get_SortCount()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMetrics.SortCountSetUInt32">
            <summary>Metrics.set_SortCount(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMetrics.WarningCountGet">
            <summary>Metrics.get_WarningCount()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMetrics.WarningCountSetUInt32">
            <summary>Metrics.set_WarningCount(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.N1QL.Fakes.ShimMetrics.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMetrics.AllInstances.ElaspedTimeGet">
            <summary>Metrics.get_ElaspedTime()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMetrics.AllInstances.ElaspedTimeSetString">
            <summary>Metrics.set_ElaspedTime(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMetrics.AllInstances.ErrorCountGet">
            <summary>Metrics.get_ErrorCount()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMetrics.AllInstances.ErrorCountSetUInt32">
            <summary>Metrics.set_ErrorCount(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMetrics.AllInstances.ExecutionTimeGet">
            <summary>Metrics.get_ExecutionTime()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMetrics.AllInstances.ExecutionTimeSetString">
            <summary>Metrics.set_ExecutionTime(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMetrics.AllInstances.MutationCountGet">
            <summary>Metrics.get_MutationCount()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMetrics.AllInstances.MutationCountSetUInt32">
            <summary>Metrics.set_MutationCount(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMetrics.AllInstances.ResultCountGet">
            <summary>Metrics.get_ResultCount()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMetrics.AllInstances.ResultCountSetUInt32">
            <summary>Metrics.set_ResultCount(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMetrics.AllInstances.ResultSizeGet">
            <summary>Metrics.get_ResultSize()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMetrics.AllInstances.ResultSizeSetUInt32">
            <summary>Metrics.set_ResultSize(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMetrics.AllInstances.SortCountGet">
            <summary>Metrics.get_SortCount()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMetrics.AllInstances.SortCountSetUInt32">
            <summary>Metrics.set_SortCount(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMetrics.AllInstances.WarningCountGet">
            <summary>Metrics.get_WarningCount()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMetrics.AllInstances.WarningCountSetUInt32">
            <summary>Metrics.set_WarningCount(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.N1QL.Fakes.ShimMutationState">
            <summary>Couchbase.N1QL.MutationState의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimMutationState.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimMutationState.#ctor(Couchbase.N1QL.MutationState)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimMutationState.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimMutationState.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimMutationState.Bind(System.Collections.IEnumerable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimMutationState.Bind(System.Collections.Generic.IEnumerable{Couchbase.Core.Buckets.MutationToken})">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMutationState.AddIDocumentArray">
            <summary>MutationState.Add(IDocument[] documents)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMutationState.AddIDocumentFragmentArray">
            <summary>MutationState.Add(IDocumentFragment[] fragments)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMutationState.AddMutationState">
            <summary>MutationState.Add(MutationState mutationState)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMutationState.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMutationState.Constructor">
            <summary>MutationState.MutationState()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMutationState.FromIDocumentArray">
            <summary>MutationState.From(IDocument[] documents)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMutationState.FromIDocumentFragmentArray">
            <summary>MutationState.From(IDocumentFragment[] fragments)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMutationState.FromMutationState">
            <summary>MutationState.From(MutationState mutationState)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMutationState.GetEnumerator">
            <summary>MutationState.GetEnumerator()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMutationState.SystemCollectionsIEnumerableGetEnumerator">
            <summary>MutationState.System.Collections.IEnumerable.GetEnumerator()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.N1QL.Fakes.ShimMutationState.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMutationState.AllInstances.AddIDocumentArray">
            <summary>MutationState.Add(IDocument[] documents)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMutationState.AllInstances.AddIDocumentFragmentArray">
            <summary>MutationState.Add(IDocumentFragment[] fragments)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMutationState.AllInstances.AddMutationState">
            <summary>MutationState.Add(MutationState mutationState)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMutationState.AllInstances.GetEnumerator">
            <summary>MutationState.GetEnumerator()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimMutationState.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>MutationState.System.Collections.IEnumerable.GetEnumerator()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.N1QL.Fakes.ShimQueryPlan">
            <summary>Couchbase.N1QL.QueryPlan의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimQueryPlan.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimQueryPlan.#ctor(Couchbase.N1QL.QueryPlan)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimQueryPlan.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimQueryPlan.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryPlan.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryPlan.Constructor">
            <summary>QueryPlan.QueryPlan()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryPlan.EncodedPlanGet">
            <summary>QueryPlan.get_EncodedPlan()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryPlan.EncodedPlanSetString">
            <summary>QueryPlan.set_EncodedPlan(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryPlan.NameGet">
            <summary>QueryPlan.get_Name()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryPlan.NameSetString">
            <summary>QueryPlan.set_Name(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryPlan.OperatorGet">
            <summary>QueryPlan.get_Operator()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryPlan.OperatorSetObject">
            <summary>QueryPlan.set_Operator(Object value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryPlan.SignatureGet">
            <summary>QueryPlan.get_Signature()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryPlan.SignatureSetObject">
            <summary>QueryPlan.set_Signature(Object value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryPlan.TextGet">
            <summary>QueryPlan.get_Text()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryPlan.TextSetString">
            <summary>QueryPlan.set_Text(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.N1QL.Fakes.ShimQueryPlan.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryPlan.AllInstances.EncodedPlanGet">
            <summary>QueryPlan.get_EncodedPlan()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryPlan.AllInstances.EncodedPlanSetString">
            <summary>QueryPlan.set_EncodedPlan(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryPlan.AllInstances.NameGet">
            <summary>QueryPlan.get_Name()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryPlan.AllInstances.NameSetString">
            <summary>QueryPlan.set_Name(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryPlan.AllInstances.OperatorGet">
            <summary>QueryPlan.get_Operator()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryPlan.AllInstances.OperatorSetObject">
            <summary>QueryPlan.set_Operator(Object value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryPlan.AllInstances.SignatureGet">
            <summary>QueryPlan.get_Signature()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryPlan.AllInstances.SignatureSetObject">
            <summary>QueryPlan.set_Signature(Object value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryPlan.AllInstances.TextGet">
            <summary>QueryPlan.get_Text()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryPlan.AllInstances.TextSetString">
            <summary>QueryPlan.set_Text(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.N1QL.Fakes.ShimQueryRequest">
            <summary>Couchbase.N1QL.QueryRequest의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimQueryRequest.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimQueryRequest.#ctor(Couchbase.N1QL.QueryRequest)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimQueryRequest.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimQueryRequest.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimQueryRequest.Bind(Couchbase.N1QL.IQueryRequest)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.AdHocBoolean">
            <summary>QueryRequest.AdHoc(Boolean adHoc)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.AddCredentialsStringStringBoolean">
            <summary>QueryRequest.AddCredentials(String username, String password, Boolean isAdmin)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.AddNamedParameterKeyValuePairOfStringObjectArray">
            <summary>QueryRequest.AddNamedParameter(KeyValuePair`2&lt;String,Object&gt;[] parameters)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.AddNamedParameterStringObject">
            <summary>QueryRequest.AddNamedParameter(String name, Object value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.AddPositionalParameterObject">
            <summary>QueryRequest.AddPositionalParameter(Object value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.AddPositionalParameterObjectArray">
            <summary>QueryRequest.AddPositionalParameter(Object[] parameters)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.BaseUriUri">
            <summary>QueryRequest.BaseUri(Uri baseUri)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.ClientContextIdString">
            <summary>QueryRequest.ClientContextId(String clientContextId)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.CompressionCompression">
            <summary>QueryRequest.Compression(Compression compression)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.ConsistentWithMutationState">
            <summary>QueryRequest.ConsistentWith(MutationState mutationState)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.Constructor">
            <summary>QueryRequest.QueryRequest()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.ConstructorQueryPlanString">
            <summary>QueryRequest.QueryRequest(QueryPlan plan, String originalStatement)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.ConstructorString">
            <summary>QueryRequest.QueryRequest(String statement)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.CouchbaseN1QLIQueryRequestTimedOut">
            <summary>QueryRequest.Couchbase.N1QL.IQueryRequest.TimedOut()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.Create">
            <summary>QueryRequest.Create()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.CreateQueryPlanString">
            <summary>QueryRequest.Create(QueryPlan plan, String originalStatement)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.CreateString">
            <summary>QueryRequest.Create(String statement)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.CurrentContextIdGet">
            <summary>QueryRequest.get_CurrentContextId()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.DataMapperGet">
            <summary>QueryRequest.get_DataMapper()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.DataMapperSetIDataMapper">
            <summary>QueryRequest.set_DataMapper(IDataMapper value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.EncodingEncoding">
            <summary>QueryRequest.Encoding(Encoding encoding)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.FormatFormat">
            <summary>QueryRequest.Format(Format format)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.GetBaseUri">
            <summary>QueryRequest.GetBaseUri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.GetFormValues">
            <summary>QueryRequest.GetFormValues()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.GetFormValuesAsJson">
            <summary>QueryRequest.GetFormValuesAsJson()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.GetOriginalStatement">
            <summary>QueryRequest.GetOriginalStatement()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.GetPreparedPayload">
            <summary>QueryRequest.GetPreparedPayload()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.GetQueryParametersAsFormUrlencoded">
            <summary>QueryRequest.GetQueryParametersAsFormUrlencoded()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.HasBeenRetriedGet">
            <summary>QueryRequest.get_HasBeenRetried()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.HasBeenRetriedSetBoolean">
            <summary>QueryRequest.set_HasBeenRetried(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.IsAdHocGet">
            <summary>QueryRequest.get_IsAdHoc()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.IsPreparedGet">
            <summary>QueryRequest.get_IsPrepared()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.LifespanCouchbaseN1QLIQueryRequestget">
            <summary>QueryRequest.Couchbase.N1QL.IQueryRequest.get_Lifespan()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.LifespanCouchbaseN1QLIQueryRequestsetLifespan">
            <summary>QueryRequest.Couchbase.N1QL.IQueryRequest.set_Lifespan(Lifespan value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.MaxServerParallelismInt32">
            <summary>QueryRequest.MaxServerParallelism(Int32 parallelism)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.MetricsBoolean">
            <summary>QueryRequest.Metrics(Boolean includeMetrics)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.PreparedQueryPlanString">
            <summary>QueryRequest.Prepared(QueryPlan preparedPlan, String originalStatement)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.PrettyBoolean">
            <summary>QueryRequest.Pretty(Boolean pretty)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.ReadOnlyBoolean">
            <summary>QueryRequest.ReadOnly(Boolean readOnly)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.ScanConsistencyScanConsistency">
            <summary>QueryRequest.ScanConsistency(ScanConsistency scanConsistency)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.ScanWaitTimeSpan">
            <summary>QueryRequest.ScanWait(TimeSpan scanWait)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.SignatureBoolean">
            <summary>QueryRequest.Signature(Boolean includeSignature)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.StatementString">
            <summary>QueryRequest.Statement(String statement)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.StaticConstructor">
            <summary>QueryRequest.QueryRequest()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.TimeoutTimeSpan">
            <summary>QueryRequest.Timeout(TimeSpan timeOut)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.ToString">
            <summary>QueryRequest.ToString()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.N1QL.Fakes.ShimQueryRequest.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.AllInstances.AdHocBoolean">
            <summary>QueryRequest.AdHoc(Boolean adHoc)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.AllInstances.AddCredentialsStringStringBoolean">
            <summary>QueryRequest.AddCredentials(String username, String password, Boolean isAdmin)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.AllInstances.AddNamedParameterKeyValuePairOfStringObjectArray">
            <summary>QueryRequest.AddNamedParameter(KeyValuePair`2&lt;String,Object&gt;[] parameters)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.AllInstances.AddNamedParameterStringObject">
            <summary>QueryRequest.AddNamedParameter(String name, Object value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.AllInstances.AddPositionalParameterObject">
            <summary>QueryRequest.AddPositionalParameter(Object value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.AllInstances.AddPositionalParameterObjectArray">
            <summary>QueryRequest.AddPositionalParameter(Object[] parameters)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.AllInstances.BaseUriUri">
            <summary>QueryRequest.BaseUri(Uri baseUri)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.AllInstances.ClientContextIdString">
            <summary>QueryRequest.ClientContextId(String clientContextId)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.AllInstances.CompressionCompression">
            <summary>QueryRequest.Compression(Compression compression)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.AllInstances.ConsistentWithMutationState">
            <summary>QueryRequest.ConsistentWith(MutationState mutationState)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.AllInstances.CouchbaseN1QLIQueryRequestTimedOut">
            <summary>QueryRequest.Couchbase.N1QL.IQueryRequest.TimedOut()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.AllInstances.CurrentContextIdGet">
            <summary>QueryRequest.get_CurrentContextId()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.AllInstances.DataMapperGet">
            <summary>QueryRequest.get_DataMapper()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.AllInstances.DataMapperSetIDataMapper">
            <summary>QueryRequest.set_DataMapper(IDataMapper value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.AllInstances.EncodingEncoding">
            <summary>QueryRequest.Encoding(Encoding encoding)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.AllInstances.FormatFormat">
            <summary>QueryRequest.Format(Format format)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.AllInstances.GetBaseUri">
            <summary>QueryRequest.GetBaseUri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.AllInstances.GetFormValues">
            <summary>QueryRequest.GetFormValues()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.AllInstances.GetFormValuesAsJson">
            <summary>QueryRequest.GetFormValuesAsJson()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.AllInstances.GetOriginalStatement">
            <summary>QueryRequest.GetOriginalStatement()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.AllInstances.GetPreparedPayload">
            <summary>QueryRequest.GetPreparedPayload()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.AllInstances.GetQueryParametersAsFormUrlencoded">
            <summary>QueryRequest.GetQueryParametersAsFormUrlencoded()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.AllInstances.HasBeenRetriedGet">
            <summary>QueryRequest.get_HasBeenRetried()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.AllInstances.HasBeenRetriedSetBoolean">
            <summary>QueryRequest.set_HasBeenRetried(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.AllInstances.IsAdHocGet">
            <summary>QueryRequest.get_IsAdHoc()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.AllInstances.IsPreparedGet">
            <summary>QueryRequest.get_IsPrepared()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.AllInstances.LifespanCouchbaseN1QLIQueryRequestget">
            <summary>QueryRequest.Couchbase.N1QL.IQueryRequest.get_Lifespan()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.AllInstances.LifespanCouchbaseN1QLIQueryRequestsetLifespan">
            <summary>QueryRequest.Couchbase.N1QL.IQueryRequest.set_Lifespan(Lifespan value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.AllInstances.MaxServerParallelismInt32">
            <summary>QueryRequest.MaxServerParallelism(Int32 parallelism)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.AllInstances.MetricsBoolean">
            <summary>QueryRequest.Metrics(Boolean includeMetrics)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.AllInstances.PreparedQueryPlanString">
            <summary>QueryRequest.Prepared(QueryPlan preparedPlan, String originalStatement)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.AllInstances.PrettyBoolean">
            <summary>QueryRequest.Pretty(Boolean pretty)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.AllInstances.ReadOnlyBoolean">
            <summary>QueryRequest.ReadOnly(Boolean readOnly)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.AllInstances.ScanConsistencyScanConsistency">
            <summary>QueryRequest.ScanConsistency(ScanConsistency scanConsistency)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.AllInstances.ScanWaitTimeSpan">
            <summary>QueryRequest.ScanWait(TimeSpan scanWait)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.AllInstances.SignatureBoolean">
            <summary>QueryRequest.Signature(Boolean includeSignature)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.AllInstances.StatementString">
            <summary>QueryRequest.Statement(String statement)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.AllInstances.TimeoutTimeSpan">
            <summary>QueryRequest.Timeout(TimeSpan timeOut)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryRequest.AllInstances.ToString01">
            <summary>QueryRequest.ToString()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.N1QL.Fakes.ShimQueryResult`1">
            <summary>Couchbase.N1QL.QueryResult`1의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimQueryResult`1.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimQueryResult`1.#ctor(Couchbase.N1QL.QueryResult{`0})">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimQueryResult`1.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimQueryResult`1.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimQueryResult`1.Bind(Couchbase.IResult)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimQueryResult`1.Bind(Couchbase.N1QL.IQueryResult{`0})">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.ClientContextIdGet">
            <summary>QueryResult`1.get_ClientContextId()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.ClientContextIdSetString">
            <summary>QueryResult`1.set_ClientContextId(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.Constructor">
            <summary>QueryResult`1.QueryResult`1()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.CouchbaseIResultShouldRetry">
            <summary>QueryResult`1.Couchbase.IResult.ShouldRetry()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.ErrorsGet">
            <summary>QueryResult`1.get_Errors()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.ErrorsSetListOfError">
            <summary>QueryResult`1.set_Errors(List`1&lt;Error&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.ExceptionGet">
            <summary>QueryResult`1.get_Exception()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.ExceptionSetException">
            <summary>QueryResult`1.set_Exception(Exception value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.HttpStatusCodeGet">
            <summary>QueryResult`1.get_HttpStatusCode()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.HttpStatusCodeSetHttpStatusCode">
            <summary>QueryResult`1.set_HttpStatusCode(HttpStatusCode value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.MessageGet">
            <summary>QueryResult`1.get_Message()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.MessageSetString">
            <summary>QueryResult`1.set_Message(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.MetricsGet">
            <summary>QueryResult`1.get_Metrics()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.MetricsSetMetrics">
            <summary>QueryResult`1.set_Metrics(Metrics value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.RequestIdGet">
            <summary>QueryResult`1.get_RequestId()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.RequestIdSetGuid">
            <summary>QueryResult`1.set_RequestId(Guid value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.RowsGet">
            <summary>QueryResult`1.get_Rows()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.RowsSetListOfT0">
            <summary>QueryResult`1.set_Rows(List`1&lt;!0&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.SignatureGet">
            <summary>QueryResult`1.get_Signature()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.SignatureSetObject">
            <summary>QueryResult`1.set_Signature(Object value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.StatusGet">
            <summary>QueryResult`1.get_Status()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.StatusSetQueryStatus">
            <summary>QueryResult`1.set_Status(QueryStatus value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.SuccessGet">
            <summary>QueryResult`1.get_Success()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.SuccessSetBoolean">
            <summary>QueryResult`1.set_Success(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.ToString">
            <summary>QueryResult`1.ToString()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.WarningsGet">
            <summary>QueryResult`1.get_Warnings()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.WarningsSetListOfWarning">
            <summary>QueryResult`1.set_Warnings(List`1&lt;Warning&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.N1QL.Fakes.ShimQueryResult`1.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.AllInstances.ClientContextIdGet">
            <summary>QueryResult`1.get_ClientContextId()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.AllInstances.ClientContextIdSetString">
            <summary>QueryResult`1.set_ClientContextId(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.AllInstances.CouchbaseIResultShouldRetry">
            <summary>QueryResult`1.Couchbase.IResult.ShouldRetry()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.AllInstances.ErrorsGet">
            <summary>QueryResult`1.get_Errors()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.AllInstances.ErrorsSetListOfError">
            <summary>QueryResult`1.set_Errors(List`1&lt;Error&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.AllInstances.ExceptionGet">
            <summary>QueryResult`1.get_Exception()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.AllInstances.ExceptionSetException">
            <summary>QueryResult`1.set_Exception(Exception value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.AllInstances.HttpStatusCodeGet">
            <summary>QueryResult`1.get_HttpStatusCode()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.AllInstances.HttpStatusCodeSetHttpStatusCode">
            <summary>QueryResult`1.set_HttpStatusCode(HttpStatusCode value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.AllInstances.MessageGet">
            <summary>QueryResult`1.get_Message()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.AllInstances.MessageSetString">
            <summary>QueryResult`1.set_Message(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.AllInstances.MetricsGet">
            <summary>QueryResult`1.get_Metrics()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.AllInstances.MetricsSetMetrics">
            <summary>QueryResult`1.set_Metrics(Metrics value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.AllInstances.RequestIdGet">
            <summary>QueryResult`1.get_RequestId()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.AllInstances.RequestIdSetGuid">
            <summary>QueryResult`1.set_RequestId(Guid value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.AllInstances.RowsGet">
            <summary>QueryResult`1.get_Rows()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.AllInstances.RowsSetListOfT0">
            <summary>QueryResult`1.set_Rows(List`1&lt;!0&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.AllInstances.SignatureGet">
            <summary>QueryResult`1.get_Signature()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.AllInstances.SignatureSetObject">
            <summary>QueryResult`1.set_Signature(Object value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.AllInstances.StatusGet">
            <summary>QueryResult`1.get_Status()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.AllInstances.StatusSetQueryStatus">
            <summary>QueryResult`1.set_Status(QueryStatus value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.AllInstances.SuccessGet">
            <summary>QueryResult`1.get_Success()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.AllInstances.SuccessSetBoolean">
            <summary>QueryResult`1.set_Success(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.AllInstances.ToString01">
            <summary>QueryResult`1.ToString()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.AllInstances.WarningsGet">
            <summary>QueryResult`1.get_Warnings()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryResult`1.AllInstances.WarningsSetListOfWarning">
            <summary>QueryResult`1.set_Warnings(List`1&lt;Warning&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.N1QL.Fakes.ShimQuerySequenceGenerator">
            <summary>Couchbase.N1QL.QuerySequenceGenerator의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimQuerySequenceGenerator.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimQuerySequenceGenerator.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimQuerySequenceGenerator.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQuerySequenceGenerator.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQuerySequenceGenerator.GetNext">
            <summary>QuerySequenceGenerator.GetNext()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQuerySequenceGenerator.GetNextAsString">
            <summary>QuerySequenceGenerator.GetNextAsString()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQuerySequenceGenerator.Reset">
            <summary>QuerySequenceGenerator.Reset()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.N1QL.Fakes.ShimQueryTimer">
            <summary>Couchbase.N1QL.QueryTimer의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimQueryTimer.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimQueryTimer.#ctor(Couchbase.N1QL.QueryTimer)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimQueryTimer.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimQueryTimer.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimQueryTimer.Bind(Couchbase.N1QL.IQueryTimer)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimQueryTimer.Bind(System.IDisposable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryTimer.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryTimer.ClusterElapsedTimeGet">
            <summary>QueryTimer.get_ClusterElapsedTime()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryTimer.ClusterElapsedTimeSetString">
            <summary>QueryTimer.set_ClusterElapsedTime(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryTimer.ConstructorIQueryRequestITimingStoreBoolean">
            <summary>QueryTimer.QueryTimer(IQueryRequest queryRequest, ITimingStore store, Boolean enableQueryTiming)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryTimer.Dispose">
            <summary>QueryTimer.Dispose()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryTimer.StoreGet">
            <summary>QueryTimer.get_Store()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryTimer.StoreSetITimingStore">
            <summary>QueryTimer.set_Store(ITimingStore value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.N1QL.Fakes.ShimQueryTimer.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryTimer.AllInstances.ClusterElapsedTimeGet">
            <summary>QueryTimer.get_ClusterElapsedTime()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryTimer.AllInstances.ClusterElapsedTimeSetString">
            <summary>QueryTimer.set_ClusterElapsedTime(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryTimer.AllInstances.Dispose">
            <summary>QueryTimer.Dispose()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryTimer.AllInstances.StoreGet">
            <summary>QueryTimer.get_Store()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimQueryTimer.AllInstances.StoreSetITimingStore">
            <summary>QueryTimer.set_Store(ITimingStore value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.N1QL.Fakes.ShimWarning">
            <summary>Couchbase.N1QL.Warning의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimWarning.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimWarning.#ctor(Couchbase.N1QL.Warning)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimWarning.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.ShimWarning.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimWarning.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimWarning.CodeGet">
            <summary>Warning.get_Code()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimWarning.CodeSetInt32">
            <summary>Warning.set_Code(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimWarning.Constructor">
            <summary>Warning.Warning()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimWarning.MessageGet">
            <summary>Warning.get_Message()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimWarning.MessageSetString">
            <summary>Warning.set_Message(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.N1QL.Fakes.ShimWarning.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimWarning.AllInstances.CodeGet">
            <summary>Warning.get_Code()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimWarning.AllInstances.CodeSetInt32">
            <summary>Warning.set_Code(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimWarning.AllInstances.MessageGet">
            <summary>Warning.get_Message()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.ShimWarning.AllInstances.MessageSetString">
            <summary>Warning.set_Message(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.N1QL.Fakes.StubError">
            <summary>Couchbase.N1QL.Error의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubError.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubError.InitializeStub">
            <summary>type StubError의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.StubError.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.StubError.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.StubError.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.N1QL.Fakes.StubFailureCountingUri">
            <summary>Couchbase.N1QL.FailureCountingUri의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubFailureCountingUri.#ctor(System.String)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubFailureCountingUri.#ctor(System.Uri,System.Uri)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubFailureCountingUri.#ctor(System.Uri,System.String)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubFailureCountingUri.#ctor(System.String,System.UriKind)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubFailureCountingUri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubFailureCountingUri.Canonicalize">
            <summary>Uri.Canonicalize()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubFailureCountingUri.Canonicalize01">
            <summary>Uri.Canonicalize()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubFailureCountingUri.CheckSecurity">
            <summary>Uri.CheckSecurity()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubFailureCountingUri.CheckSecurity01">
            <summary>Uri.CheckSecurity()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubFailureCountingUri.Equals(System.Object)">
            <summary>Uri.Equals(Object comparand)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubFailureCountingUri.EqualsObject">
            <summary>Uri.Equals(Object comparand)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubFailureCountingUri.Escape">
            <summary>Uri.Escape()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubFailureCountingUri.Escape01">
            <summary>Uri.Escape()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubFailureCountingUri.GetHashCode">
            <summary>Uri.GetHashCode()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubFailureCountingUri.GetHashCode01">
            <summary>Uri.GetHashCode()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubFailureCountingUri.InitializeStub">
            <summary>type StubFailureCountingUri의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubFailureCountingUri.IsBadFileSystemCharacter(System.Char)">
            <summary>Uri.IsBadFileSystemCharacter(Char character)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubFailureCountingUri.IsBadFileSystemCharacterChar">
            <summary>Uri.IsBadFileSystemCharacter(Char character)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubFailureCountingUri.IsReservedCharacter(System.Char)">
            <summary>Uri.IsReservedCharacter(Char character)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubFailureCountingUri.IsReservedCharacterChar">
            <summary>Uri.IsReservedCharacter(Char character)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubFailureCountingUri.Parse">
            <summary>Uri.Parse()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubFailureCountingUri.Parse01">
            <summary>Uri.Parse()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubFailureCountingUri.ToString">
            <summary>Uri.ToString()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubFailureCountingUri.ToString01">
            <summary>Uri.ToString()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubFailureCountingUri.Unescape(System.String)">
            <summary>Uri.Unescape(String path)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubFailureCountingUri.UnescapeString">
            <summary>Uri.Unescape(String path)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.StubFailureCountingUri.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.StubFailureCountingUri.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.StubFailureCountingUri.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.N1QL.Fakes.StubIQueryClient">
            <summary>Couchbase.N1QL.IQueryClient의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryClient.#ctor">
            <summary>type StubIQueryClient의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryClient.AttachBackingFieldToDataMapper">
            <summary>대리자를 연결하여 StubIQueryClient.DataMapper을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryClient.AttachBackingFieldToHttpClient">
            <summary>대리자를 연결하여 StubIQueryClient.HttpClient을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryClient.cnc::Couchbase#IQueryCacheInvalidator#InvalidateQueryCache">
            <summary>IQueryCacheInvalidator.InvalidateQueryCache()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryClient.cnc::Couchbase#N1QL#IQueryClient#Prepare(Couchbase.N1QL.IQueryRequest)">
            <summary>IQueryClient.Prepare(IQueryRequest toPrepare)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryClient.cnc::Couchbase#N1QL#IQueryClient#Query``1(Couchbase.N1QL.IQueryRequest)">
            <summary>IQueryClient.Query(IQueryRequest request)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryClient.cnc::Couchbase#N1QL#IQueryClient#Query``1(System.Uri,System.String)">
            <summary>IQueryClient.Query(Uri server, String query)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryClient.cnc::Couchbase#N1QL#IQueryClient#QueryAsync``1(Couchbase.N1QL.IQueryRequest)">
            <summary>IQueryClient.QueryAsync(IQueryRequest request)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryClient.cnc::Couchbase#N1QL#IQueryClient#QueryAsync``1(System.Uri,System.String)">
            <summary>IQueryClient.QueryAsync(Uri server, String query)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryClient.DataMapperGet">
            <summary>IQueryClient.get_DataMapper()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryClient.DataMapperSetIDataMapper">
            <summary>IQueryClient.set_DataMapper(IDataMapper value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryClient.HttpClientGet">
            <summary>IQueryClient.get_HttpClient()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryClient.HttpClientSetHttpClient">
            <summary>IQueryClient.set_HttpClient(HttpClient value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryClient.InvalidateQueryCache">
            <summary>IQueryCacheInvalidator.InvalidateQueryCache()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryClient.PrepareIQueryRequest">
            <summary>IQueryClient.Prepare(IQueryRequest toPrepare)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryClient.QueryAsyncOf1IQueryRequest``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.N1QL.IQueryRequest,System.Threading.Tasks.Task{Couchbase.N1QL.IQueryResult{``0}}})">
            <summary>QueryAsync(IQueryRequest request)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryClient.QueryAsyncOf1UriString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.Threading.Tasks.Task{Couchbase.N1QL.IQueryResult{``0}}})">
            <summary>QueryAsync(Uri server, String query)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryClient.QueryOf1IQueryRequest``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.N1QL.IQueryRequest,Couchbase.N1QL.IQueryResult{``0}})">
            <summary>Query(IQueryRequest request)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryClient.QueryOf1UriString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,Couchbase.N1QL.IQueryResult{``0}})">
            <summary>Query(Uri server, String query)의 스텁을 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.StubIQueryClient.cnc::Couchbase#N1QL#IQueryClient#DataMapper">
            <summary>IQueryClient.get_DataMapper()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.StubIQueryClient.cnc::Couchbase#N1QL#IQueryClient#HttpClient">
            <summary>IQueryClient.get_HttpClient()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.N1QL.Fakes.StubIQueryRequest">
            <summary>Couchbase.N1QL.IQueryRequest의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryRequest.#ctor">
            <summary>type StubIQueryRequest의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryRequest.AdHocBoolean">
            <summary>IQueryRequest.AdHoc(Boolean adHoc)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryRequest.AddCredentialsStringStringBoolean">
            <summary>IQueryRequest.AddCredentials(String username, String password, Boolean isAdmin)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryRequest.AddNamedParameterKeyValuePairOfStringObjectArray">
            <summary>IQueryRequest.AddNamedParameter(KeyValuePair`2&lt;String,Object&gt;[] parameters)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryRequest.AddNamedParameterStringObject">
            <summary>IQueryRequest.AddNamedParameter(String name, Object value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryRequest.AddPositionalParameterObject">
            <summary>IQueryRequest.AddPositionalParameter(Object value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryRequest.AddPositionalParameterObjectArray">
            <summary>IQueryRequest.AddPositionalParameter(Object[] parameters)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryRequest.AttachBackingFieldToHasBeenRetried">
            <summary>대리자를 연결하여 StubIQueryRequest.HasBeenRetried을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryRequest.AttachBackingFieldToLifespan">
            <summary>대리자를 연결하여 StubIQueryRequest.Lifespan을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryRequest.BaseUriUri">
            <summary>IQueryRequest.BaseUri(Uri uri)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryRequest.ClientContextIdString">
            <summary>IQueryRequest.ClientContextId(String contextId)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryRequest.CompressionCompression">
            <summary>IQueryRequest.Compression(Compression compression)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryRequest.ConsistentWithMutationState">
            <summary>IQueryRequest.ConsistentWith(MutationState mutationState)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryRequest.cnc::Couchbase#N1QL#IQueryRequest#AdHoc(System.Boolean)">
            <summary>IQueryRequest.AdHoc(Boolean adHoc)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryRequest.cnc::Couchbase#N1QL#IQueryRequest#AddCredentials(System.String,System.String,System.Boolean)">
            <summary>IQueryRequest.AddCredentials(String username, String password, Boolean isAdmin)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryRequest.cnc::Couchbase#N1QL#IQueryRequest#AddNamedParameter(System.Collections.Generic.KeyValuePair{System.String,System.Object}[])">
            <summary>IQueryRequest.AddNamedParameter(KeyValuePair`2&lt;String,Object&gt;[] parameters)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryRequest.cnc::Couchbase#N1QL#IQueryRequest#AddNamedParameter(System.String,System.Object)">
            <summary>IQueryRequest.AddNamedParameter(String name, Object value)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryRequest.cnc::Couchbase#N1QL#IQueryRequest#AddPositionalParameter(System.Object[])">
            <summary>IQueryRequest.AddPositionalParameter(Object[] parameters)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryRequest.cnc::Couchbase#N1QL#IQueryRequest#AddPositionalParameter(System.Object)">
            <summary>IQueryRequest.AddPositionalParameter(Object value)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryRequest.cnc::Couchbase#N1QL#IQueryRequest#BaseUri(System.Uri)">
            <summary>IQueryRequest.BaseUri(Uri uri)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryRequest.cnc::Couchbase#N1QL#IQueryRequest#ClientContextId(System.String)">
            <summary>IQueryRequest.ClientContextId(String contextId)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryRequest.cnc::Couchbase#N1QL#IQueryRequest#Compression(Couchbase.N1QL.Compression)">
            <summary>IQueryRequest.Compression(Compression compression)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryRequest.cnc::Couchbase#N1QL#IQueryRequest#ConsistentWith(Couchbase.N1QL.MutationState)">
            <summary>IQueryRequest.ConsistentWith(MutationState mutationState)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryRequest.cnc::Couchbase#N1QL#IQueryRequest#Encoding(Couchbase.N1QL.Encoding)">
            <summary>IQueryRequest.Encoding(Encoding encoding)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryRequest.cnc::Couchbase#N1QL#IQueryRequest#Format(Couchbase.N1QL.Format)">
            <summary>IQueryRequest.Format(Format format)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryRequest.cnc::Couchbase#N1QL#IQueryRequest#GetBaseUri">
            <summary>IQueryRequest.GetBaseUri()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryRequest.cnc::Couchbase#N1QL#IQueryRequest#GetFormValues">
            <summary>IQueryRequest.GetFormValues()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryRequest.cnc::Couchbase#N1QL#IQueryRequest#GetFormValuesAsJson">
            <summary>IQueryRequest.GetFormValuesAsJson()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryRequest.cnc::Couchbase#N1QL#IQueryRequest#GetOriginalStatement">
            <summary>IQueryRequest.GetOriginalStatement()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryRequest.cnc::Couchbase#N1QL#IQueryRequest#GetPreparedPayload">
            <summary>IQueryRequest.GetPreparedPayload()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryRequest.cnc::Couchbase#N1QL#IQueryRequest#MaxServerParallelism(System.Int32)">
            <summary>IQueryRequest.MaxServerParallelism(Int32 parallelism)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryRequest.cnc::Couchbase#N1QL#IQueryRequest#Metrics(System.Boolean)">
            <summary>IQueryRequest.Metrics(Boolean includeMetrics)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryRequest.cnc::Couchbase#N1QL#IQueryRequest#Prepared(Couchbase.N1QL.QueryPlan,System.String)">
            <summary>IQueryRequest.Prepared(QueryPlan queryPlan, String originalStatement)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryRequest.cnc::Couchbase#N1QL#IQueryRequest#Pretty(System.Boolean)">
            <summary>IQueryRequest.Pretty(Boolean pretty)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryRequest.cnc::Couchbase#N1QL#IQueryRequest#ReadOnly(System.Boolean)">
            <summary>IQueryRequest.ReadOnly(Boolean readOnly)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryRequest.cnc::Couchbase#N1QL#IQueryRequest#ScanConsistency(Couchbase.N1QL.ScanConsistency)">
            <summary>IQueryRequest.ScanConsistency(ScanConsistency scanConsistency)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryRequest.cnc::Couchbase#N1QL#IQueryRequest#ScanWait(System.TimeSpan)">
            <summary>IQueryRequest.ScanWait(TimeSpan scanWait)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryRequest.cnc::Couchbase#N1QL#IQueryRequest#Signature(System.Boolean)">
            <summary>IQueryRequest.Signature(Boolean includeSignature)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryRequest.cnc::Couchbase#N1QL#IQueryRequest#Statement(System.String)">
            <summary>IQueryRequest.Statement(String statement)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryRequest.cnc::Couchbase#N1QL#IQueryRequest#TimedOut">
            <summary>IQueryRequest.TimedOut()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryRequest.cnc::Couchbase#N1QL#IQueryRequest#Timeout(System.TimeSpan)">
            <summary>IQueryRequest.Timeout(TimeSpan timeOut)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryRequest.CurrentContextIdGet">
            <summary>IQueryRequest.get_CurrentContextId()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryRequest.EncodingEncoding">
            <summary>IQueryRequest.Encoding(Encoding encoding)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryRequest.FormatFormat">
            <summary>IQueryRequest.Format(Format format)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryRequest.GetBaseUri">
            <summary>IQueryRequest.GetBaseUri()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryRequest.GetFormValues">
            <summary>IQueryRequest.GetFormValues()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryRequest.GetFormValuesAsJson">
            <summary>IQueryRequest.GetFormValuesAsJson()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryRequest.GetOriginalStatement">
            <summary>IQueryRequest.GetOriginalStatement()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryRequest.GetPreparedPayload">
            <summary>IQueryRequest.GetPreparedPayload()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryRequest.HasBeenRetriedGet">
            <summary>IQueryRequest.get_HasBeenRetried()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryRequest.HasBeenRetriedSetBoolean">
            <summary>IQueryRequest.set_HasBeenRetried(Boolean value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryRequest.IsAdHocGet">
            <summary>IQueryRequest.get_IsAdHoc()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryRequest.IsPreparedGet">
            <summary>IQueryRequest.get_IsPrepared()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryRequest.LifespanGet">
            <summary>IQueryRequest.get_Lifespan()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryRequest.LifespanSetLifespan">
            <summary>IQueryRequest.set_Lifespan(Lifespan value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryRequest.MaxServerParallelismInt32">
            <summary>IQueryRequest.MaxServerParallelism(Int32 parallelism)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryRequest.MetricsBoolean">
            <summary>IQueryRequest.Metrics(Boolean includeMetrics)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryRequest.PreparedQueryPlanString">
            <summary>IQueryRequest.Prepared(QueryPlan queryPlan, String originalStatement)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryRequest.PrettyBoolean">
            <summary>IQueryRequest.Pretty(Boolean pretty)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryRequest.ReadOnlyBoolean">
            <summary>IQueryRequest.ReadOnly(Boolean readOnly)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryRequest.ScanConsistencyScanConsistency">
            <summary>IQueryRequest.ScanConsistency(ScanConsistency scanConsistency)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryRequest.ScanWaitTimeSpan">
            <summary>IQueryRequest.ScanWait(TimeSpan scanWait)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryRequest.SignatureBoolean">
            <summary>IQueryRequest.Signature(Boolean includeSignature)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryRequest.StatementString">
            <summary>IQueryRequest.Statement(String statement)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryRequest.TimedOut">
            <summary>IQueryRequest.TimedOut()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryRequest.TimeoutTimeSpan">
            <summary>IQueryRequest.Timeout(TimeSpan timeOut)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.StubIQueryRequest.cnc::Couchbase#N1QL#IQueryRequest#CurrentContextId">
            <summary>IQueryRequest.get_CurrentContextId()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.StubIQueryRequest.cnc::Couchbase#N1QL#IQueryRequest#HasBeenRetried">
            <summary>IQueryRequest.get_HasBeenRetried()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.StubIQueryRequest.cnc::Couchbase#N1QL#IQueryRequest#IsAdHoc">
            <summary>IQueryRequest.get_IsAdHoc()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.StubIQueryRequest.cnc::Couchbase#N1QL#IQueryRequest#IsPrepared">
            <summary>IQueryRequest.get_IsPrepared()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.StubIQueryRequest.cnc::Couchbase#N1QL#IQueryRequest#Lifespan">
            <summary>IQueryRequest.get_Lifespan()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.N1QL.Fakes.StubIQueryResult`1">
            <summary>Couchbase.N1QL.IQueryResult`1의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryResult`1.#ctor">
            <summary>type StubIQueryResult의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryResult`1.ClientContextIdGet">
            <summary>IQueryResult`1.get_ClientContextId()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryResult`1.cnc::Couchbase#IResult#ShouldRetry">
            <summary>IResult.ShouldRetry()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryResult`1.ErrorsGet">
            <summary>IQueryResult`1.get_Errors()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryResult`1.ExceptionGet">
            <summary>IResult.get_Exception()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryResult`1.MessageGet">
            <summary>IResult.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryResult`1.MetricsGet">
            <summary>IQueryResult`1.get_Metrics()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryResult`1.RequestIdGet">
            <summary>IQueryResult`1.get_RequestId()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryResult`1.RowsGet">
            <summary>IQueryResult`1.get_Rows()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryResult`1.ShouldRetry">
            <summary>IResult.ShouldRetry()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryResult`1.SignatureGet">
            <summary>IQueryResult`1.get_Signature()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryResult`1.StatusGet">
            <summary>IQueryResult`1.get_Status()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryResult`1.SuccessGet">
            <summary>IResult.get_Success()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryResult`1.WarningsGet">
            <summary>IQueryResult`1.get_Warnings()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.StubIQueryResult`1.cnc::Couchbase#N1QL#IQueryResult{T}#ClientContextId">
            <summary>IQueryResult`1.get_ClientContextId()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.StubIQueryResult`1.cnc::Couchbase#N1QL#IQueryResult{T}#Errors">
            <summary>IQueryResult`1.get_Errors()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.StubIQueryResult`1.cnc::Couchbase#IResult#Exception">
            <summary>IResult.get_Exception()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.StubIQueryResult`1.cnc::Couchbase#IResult#Message">
            <summary>IResult.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.StubIQueryResult`1.cnc::Couchbase#N1QL#IQueryResult{T}#Metrics">
            <summary>IQueryResult`1.get_Metrics()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.StubIQueryResult`1.cnc::Couchbase#N1QL#IQueryResult{T}#RequestId">
            <summary>IQueryResult`1.get_RequestId()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.StubIQueryResult`1.cnc::Couchbase#N1QL#IQueryResult{T}#Rows">
            <summary>IQueryResult`1.get_Rows()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.StubIQueryResult`1.cnc::Couchbase#N1QL#IQueryResult{T}#Signature">
            <summary>IQueryResult`1.get_Signature()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.StubIQueryResult`1.cnc::Couchbase#N1QL#IQueryResult{T}#Status">
            <summary>IQueryResult`1.get_Status()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.StubIQueryResult`1.cnc::Couchbase#IResult#Success">
            <summary>IResult.get_Success()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.StubIQueryResult`1.cnc::Couchbase#N1QL#IQueryResult{T}#Warnings">
            <summary>IQueryResult`1.get_Warnings()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.N1QL.Fakes.StubIQueryTimer">
            <summary>Couchbase.N1QL.IQueryTimer의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryTimer.#ctor">
            <summary>type StubIQueryTimer의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryTimer.Dispose">
            <summary>IDisposable.Dispose()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubIQueryTimer.StoreGet">
            <summary>IQueryTimer.get_Store()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubIQueryTimer.global::System#IDisposable#Dispose">
            <summary>IDisposable.Dispose()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.StubIQueryTimer.cnc::Couchbase#N1QL#IQueryTimer#Store">
            <summary>IQueryTimer.get_Store()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.N1QL.Fakes.StubMetrics">
            <summary>Couchbase.N1QL.Metrics의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubMetrics.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubMetrics.InitializeStub">
            <summary>type StubMetrics의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.StubMetrics.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.StubMetrics.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.StubMetrics.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.N1QL.Fakes.StubQueryPlan">
            <summary>Couchbase.N1QL.QueryPlan의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubQueryPlan.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubQueryPlan.InitializeStub">
            <summary>type StubQueryPlan의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.StubQueryPlan.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.StubQueryPlan.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.StubQueryPlan.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.N1QL.Fakes.StubQueryRequest">
            <summary>Couchbase.N1QL.QueryRequest의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubQueryRequest.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubQueryRequest.#ctor(System.String)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubQueryRequest.#ctor(Couchbase.N1QL.QueryPlan,System.String)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubQueryRequest.InitializeStub">
            <summary>type StubQueryRequest의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubQueryRequest.ToString">
            <summary>QueryRequest.ToString()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubQueryRequest.ToString01">
            <summary>QueryRequest.ToString()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.StubQueryRequest.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.StubQueryRequest.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.StubQueryRequest.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.N1QL.Fakes.StubQueryResult`1">
            <summary>Couchbase.N1QL.QueryResult`1의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubQueryResult`1.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubQueryResult`1.InitializeStub">
            <summary>type StubQueryResult의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubQueryResult`1.ToString">
            <summary>QueryResult`1.ToString()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.N1QL.Fakes.StubQueryResult`1.ToString01">
            <summary>QueryResult`1.ToString()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.StubQueryResult`1.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.StubQueryResult`1.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.StubQueryResult`1.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.N1QL.Fakes.StubQueryTimer">
            <summary>Couchbase.N1QL.QueryTimer의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubQueryTimer.#ctor(Couchbase.N1QL.IQueryRequest,Couchbase.Core.Diagnostics.ITimingStore,System.Boolean)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubQueryTimer.InitializeStub">
            <summary>type StubQueryTimer의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.StubQueryTimer.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.StubQueryTimer.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.StubQueryTimer.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.N1QL.Fakes.StubWarning">
            <summary>Couchbase.N1QL.Warning의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubWarning.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.N1QL.Fakes.StubWarning.InitializeStub">
            <summary>type StubWarning의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.StubWarning.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.StubWarning.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.N1QL.Fakes.StubWarning.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Fakes.ShimDateRangeFacet">
            <summary>Couchbase.Search.DateRangeFacet의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimDateRangeFacet.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimDateRangeFacet.#ctor(Couchbase.Search.DateRangeFacet)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimDateRangeFacet.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimDateRangeFacet.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimDateRangeFacet.Bind(Couchbase.Search.ISearchFacet)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimDateRangeFacet.AddRangeDateTimeDateTime">
            <summary>DateRangeFacet.AddRange(DateTime startDate, DateTime endDate)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimDateRangeFacet.AddRangeRangeOfDateTime">
            <summary>DateRangeFacet.AddRange(Range`1&lt;DateTime&gt; range)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimDateRangeFacet.AddRangesRangeOfDateTimeArray">
            <summary>DateRangeFacet.AddRanges(Range`1&lt;DateTime&gt;[] ranges)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimDateRangeFacet.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimDateRangeFacet.Constructor">
            <summary>DateRangeFacet.DateRangeFacet()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimDateRangeFacet.ConstructorStringString">
            <summary>DateRangeFacet.DateRangeFacet(String name, String field)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimDateRangeFacet.ConstructorStringStringInt32">
            <summary>DateRangeFacet.DateRangeFacet(String name, String field, Int32 limit)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimDateRangeFacet.ToJson">
            <summary>DateRangeFacet.ToJson()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Fakes.ShimDateRangeFacet.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimDateRangeFacet.AllInstances.AddRangeDateTimeDateTime">
            <summary>DateRangeFacet.AddRange(DateTime startDate, DateTime endDate)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimDateRangeFacet.AllInstances.AddRangeRangeOfDateTime">
            <summary>DateRangeFacet.AddRange(Range`1&lt;DateTime&gt; range)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimDateRangeFacet.AllInstances.AddRangesRangeOfDateTimeArray">
            <summary>DateRangeFacet.AddRanges(Range`1&lt;DateTime&gt;[] ranges)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimDateRangeFacet.AllInstances.ToJson">
            <summary>DateRangeFacet.ToJson()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Fakes.ShimNumericRangeFacet">
            <summary>Couchbase.Search.NumericRangeFacet의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimNumericRangeFacet.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimNumericRangeFacet.#ctor(Couchbase.Search.NumericRangeFacet)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimNumericRangeFacet.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimNumericRangeFacet.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimNumericRangeFacet.Bind(Couchbase.Search.ISearchFacet)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimNumericRangeFacet.AddRangeRangeOfSingle">
            <summary>NumericRangeFacet.AddRange(Range`1&lt;Single&gt; range)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimNumericRangeFacet.AddRangeSingleSingle">
            <summary>NumericRangeFacet.AddRange(Single start, Single end)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimNumericRangeFacet.AddRangesRangeOfSingleArray">
            <summary>NumericRangeFacet.AddRanges(Range`1&lt;Single&gt;[] ranges)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimNumericRangeFacet.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimNumericRangeFacet.Constructor">
            <summary>NumericRangeFacet.NumericRangeFacet()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimNumericRangeFacet.ConstructorStringString">
            <summary>NumericRangeFacet.NumericRangeFacet(String name, String field)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimNumericRangeFacet.ConstructorStringStringInt32">
            <summary>NumericRangeFacet.NumericRangeFacet(String name, String field, Int32 limit)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimNumericRangeFacet.ToJson">
            <summary>NumericRangeFacet.ToJson()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Fakes.ShimNumericRangeFacet.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimNumericRangeFacet.AllInstances.AddRangeRangeOfSingle">
            <summary>NumericRangeFacet.AddRange(Range`1&lt;Single&gt; range)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimNumericRangeFacet.AllInstances.AddRangeSingleSingle">
            <summary>NumericRangeFacet.AddRange(Single start, Single end)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimNumericRangeFacet.AllInstances.AddRangesRangeOfSingleArray">
            <summary>NumericRangeFacet.AddRanges(Range`1&lt;Single&gt;[] ranges)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimNumericRangeFacet.AllInstances.ToJson">
            <summary>NumericRangeFacet.ToJson()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Fakes.ShimRange`1">
            <summary>Couchbase.Search.Range`1의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimRange`1.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimRange`1.#ctor(Couchbase.Search.Range{`0})">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimRange`1.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimRange`1.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimRange`1.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimRange`1.Constructor">
            <summary>Range`1.Range`1()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimRange`1.EndGet">
            <summary>Range`1.get_End()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimRange`1.EndSetT0">
            <summary>Range`1.set_End(!0 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimRange`1.NameGet">
            <summary>Range`1.get_Name()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimRange`1.NameSetString">
            <summary>Range`1.set_Name(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimRange`1.StartGet">
            <summary>Range`1.get_Start()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimRange`1.StartSetT0">
            <summary>Range`1.set_Start(!0 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Fakes.ShimRange`1.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimRange`1.AllInstances.EndGet">
            <summary>Range`1.get_End()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimRange`1.AllInstances.EndSetT0">
            <summary>Range`1.set_End(!0 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimRange`1.AllInstances.NameGet">
            <summary>Range`1.get_Name()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimRange`1.AllInstances.NameSetString">
            <summary>Range`1.set_Name(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimRange`1.AllInstances.StartGet">
            <summary>Range`1.get_Start()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimRange`1.AllInstances.StartSetT0">
            <summary>Range`1.set_Start(!0 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Fakes.ShimSearchClient">
            <summary>Couchbase.Search.SearchClient의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimSearchClient.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimSearchClient.#ctor(Couchbase.Search.SearchClient)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimSearchClient.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimSearchClient.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimSearchClient.Bind(Couchbase.Search.ISearchClient)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchClient.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchClient.ConstructorIBucketConfigClientConfigurationIDataMapper">
            <summary>SearchClient.SearchClient(IBucketConfig bucketConfig, ClientConfiguration clientConfig, IDataMapper dataMapper)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchClient.CreateHttpClient">
            <summary>SearchClient.CreateHttpClient()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchClient.DataMapperGet">
            <summary>SearchClient.get_DataMapper()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchClient.DataMapperSetIDataMapper">
            <summary>SearchClient.set_DataMapper(IDataMapper value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchClient.ProcessErrorExceptionSearchQueryResult">
            <summary>SearchClient.ProcessError(Exception e, SearchQueryResult result)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchClient.QueryAsyncSearchQuery">
            <summary>SearchClient.QueryAsync(SearchQuery searchQuery)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchClient.QuerySearchQuery">
            <summary>SearchClient.Query(SearchQuery searchQuery)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchClient.StaticConstructor">
            <summary>SearchClient.SearchClient()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Fakes.ShimSearchClient.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchClient.AllInstances.CreateHttpClient">
            <summary>SearchClient.CreateHttpClient()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchClient.AllInstances.DataMapperGet">
            <summary>SearchClient.get_DataMapper()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchClient.AllInstances.DataMapperSetIDataMapper">
            <summary>SearchClient.set_DataMapper(IDataMapper value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchClient.AllInstances.QueryAsyncSearchQuery">
            <summary>SearchClient.QueryAsync(SearchQuery searchQuery)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchClient.AllInstances.QuerySearchQuery">
            <summary>SearchClient.Query(SearchQuery searchQuery)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Fakes.ShimSearchFacet">
            <summary>Couchbase.Search.SearchFacet의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimSearchFacet.#ctor(Couchbase.Search.SearchFacet)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimSearchFacet.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimSearchFacet.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimSearchFacet.Bind(Couchbase.Search.ISearchFacet)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchFacet.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchFacet.Constructor">
            <summary>SearchFacet.SearchFacet()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchFacet.DateStringStringInt32RangeOfDateTimeArray">
            <summary>SearchFacet.Date(String name, String field, Int32 size, Range`1&lt;DateTime&gt;[] ranges)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchFacet.FieldGet">
            <summary>SearchFacet.get_Field()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchFacet.FieldSetString">
            <summary>SearchFacet.set_Field(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchFacet.NameGet">
            <summary>SearchFacet.get_Name()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchFacet.NameSetString">
            <summary>SearchFacet.set_Name(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchFacet.NumericStringStringInt32RangeOfSingleArray">
            <summary>SearchFacet.Numeric(String name, String field, Int32 size, Range`1&lt;Single&gt;[] ranges)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchFacet.SizeGet">
            <summary>SearchFacet.get_Size()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchFacet.SizeSetInt32">
            <summary>SearchFacet.set_Size(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchFacet.TermStringStringInt32">
            <summary>SearchFacet.Term(String name, String field, Int32 size)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchFacet.ToJson">
            <summary>SearchFacet.ToJson()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchFacet.ToString">
            <summary>SearchFacet.ToString()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Fakes.ShimSearchFacet.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchFacet.AllInstances.FieldGet">
            <summary>SearchFacet.get_Field()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchFacet.AllInstances.FieldSetString">
            <summary>SearchFacet.set_Field(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchFacet.AllInstances.NameGet">
            <summary>SearchFacet.get_Name()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchFacet.AllInstances.NameSetString">
            <summary>SearchFacet.set_Name(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchFacet.AllInstances.SizeGet">
            <summary>SearchFacet.get_Size()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchFacet.AllInstances.SizeSetInt32">
            <summary>SearchFacet.set_Size(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchFacet.AllInstances.ToJson">
            <summary>SearchFacet.ToJson()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchFacet.AllInstances.ToString01">
            <summary>SearchFacet.ToString()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Fakes.ShimSearchParams">
            <summary>Couchbase.Search.SearchParams의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimSearchParams.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimSearchParams.#ctor(Couchbase.Search.SearchParams)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimSearchParams.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimSearchParams.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimSearchParams.Bind(Couchbase.Search.ISearchParams)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchParams.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchParams.Constructor">
            <summary>SearchParams.SearchParams()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchParams.ExplainBoolean">
            <summary>SearchParams.Explain(Boolean explain)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchParams.FacetsISearchFacetArray">
            <summary>SearchParams.Facets(ISearchFacet[] searchFacets)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchParams.FieldsStringArray">
            <summary>SearchParams.Fields(String[] fields)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchParams.HighlightingHighLightStyle">
            <summary>SearchParams.Highlighting(HighLightStyle highLightStyle)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchParams.HighlightingHighLightStyleStringArray">
            <summary>SearchParams.Highlighting(HighLightStyle highLightStyle, String[] fields)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchParams.LimitInt32">
            <summary>SearchParams.Limit(Int32 limit)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchParams.SkipInt32">
            <summary>SearchParams.Skip(Int32 skip)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchParams.TimeoutTimeSpan">
            <summary>SearchParams.Timeout(TimeSpan timeout)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchParams.ToJson">
            <summary>SearchParams.ToJson()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchParams.ToJson2">
            <summary>SearchParams.ToJson2()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchParams.ToString">
            <summary>SearchParams.ToString()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchParams.WithConsistencyScanConsistency">
            <summary>SearchParams.WithConsistency(ScanConsistency consistency)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Fakes.ShimSearchParams.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchParams.AllInstances.ExplainBoolean">
            <summary>SearchParams.Explain(Boolean explain)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchParams.AllInstances.FacetsISearchFacetArray">
            <summary>SearchParams.Facets(ISearchFacet[] searchFacets)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchParams.AllInstances.FieldsStringArray">
            <summary>SearchParams.Fields(String[] fields)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchParams.AllInstances.HighlightingHighLightStyle">
            <summary>SearchParams.Highlighting(HighLightStyle highLightStyle)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchParams.AllInstances.HighlightingHighLightStyleStringArray">
            <summary>SearchParams.Highlighting(HighLightStyle highLightStyle, String[] fields)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchParams.AllInstances.LimitInt32">
            <summary>SearchParams.Limit(Int32 limit)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchParams.AllInstances.SkipInt32">
            <summary>SearchParams.Skip(Int32 skip)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchParams.AllInstances.TimeoutTimeSpan">
            <summary>SearchParams.Timeout(TimeSpan timeout)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchParams.AllInstances.ToJson">
            <summary>SearchParams.ToJson()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchParams.AllInstances.ToJson2">
            <summary>SearchParams.ToJson2()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchParams.AllInstances.ToString01">
            <summary>SearchParams.ToString()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchParams.AllInstances.WithConsistencyScanConsistency">
            <summary>SearchParams.WithConsistency(ScanConsistency consistency)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Fakes.ShimSearchQuery">
            <summary>Couchbase.Search.SearchQuery의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimSearchQuery.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimSearchQuery.#ctor(Couchbase.Search.SearchQuery)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimSearchQuery.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimSearchQuery.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQuery.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQuery.Constructor">
            <summary>SearchQuery.SearchQuery()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQuery.ExplainBoolean">
            <summary>SearchQuery.Explain(Boolean explain)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQuery.Export">
            <summary>SearchQuery.Export()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQuery.FacetsISearchFacetArray">
            <summary>SearchQuery.Facets(ISearchFacet[] searchFacets)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQuery.FieldsStringArray">
            <summary>SearchQuery.Fields(String[] fields)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQuery.HighlightingHighLightStyle">
            <summary>SearchQuery.Highlighting(HighLightStyle highLightStyle)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQuery.HighlightingHighLightStyleStringArray">
            <summary>SearchQuery.Highlighting(HighLightStyle highLightStyle, String[] fields)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQuery.IndexGet">
            <summary>SearchQuery.get_Index()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQuery.IndexSetString">
            <summary>SearchQuery.set_Index(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQuery.LimitInt32">
            <summary>SearchQuery.Limit(Int32 limit)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQuery.QueryGet">
            <summary>SearchQuery.get_Query()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQuery.QuerySetIFtsQuery">
            <summary>SearchQuery.set_Query(IFtsQuery value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQuery.RelativeUri">
            <summary>SearchQuery.RelativeUri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQuery.SearchParamsGet">
            <summary>SearchQuery.get_SearchParams()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQuery.SearchParamsSetISearchParams">
            <summary>SearchQuery.set_SearchParams(ISearchParams value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQuery.SkipInt32">
            <summary>SearchQuery.Skip(Int32 skip)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQuery.StaticConstructor">
            <summary>SearchQuery.SearchQuery()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQuery.TimeoutTimeSpan">
            <summary>SearchQuery.Timeout(TimeSpan timeout)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQuery.ToJson">
            <summary>SearchQuery.ToJson()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQuery.WithConsistencyScanConsistency">
            <summary>SearchQuery.WithConsistency(ScanConsistency consistency)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Fakes.ShimSearchQuery.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQuery.AllInstances.ExplainBoolean">
            <summary>SearchQuery.Explain(Boolean explain)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQuery.AllInstances.Export">
            <summary>SearchQuery.Export()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQuery.AllInstances.FacetsISearchFacetArray">
            <summary>SearchQuery.Facets(ISearchFacet[] searchFacets)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQuery.AllInstances.FieldsStringArray">
            <summary>SearchQuery.Fields(String[] fields)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQuery.AllInstances.HighlightingHighLightStyle">
            <summary>SearchQuery.Highlighting(HighLightStyle highLightStyle)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQuery.AllInstances.HighlightingHighLightStyleStringArray">
            <summary>SearchQuery.Highlighting(HighLightStyle highLightStyle, String[] fields)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQuery.AllInstances.IndexGet">
            <summary>SearchQuery.get_Index()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQuery.AllInstances.IndexSetString">
            <summary>SearchQuery.set_Index(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQuery.AllInstances.LimitInt32">
            <summary>SearchQuery.Limit(Int32 limit)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQuery.AllInstances.QueryGet">
            <summary>SearchQuery.get_Query()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQuery.AllInstances.QuerySetIFtsQuery">
            <summary>SearchQuery.set_Query(IFtsQuery value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQuery.AllInstances.RelativeUri">
            <summary>SearchQuery.RelativeUri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQuery.AllInstances.SearchParamsGet">
            <summary>SearchQuery.get_SearchParams()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQuery.AllInstances.SearchParamsSetISearchParams">
            <summary>SearchQuery.set_SearchParams(ISearchParams value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQuery.AllInstances.SkipInt32">
            <summary>SearchQuery.Skip(Int32 skip)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQuery.AllInstances.TimeoutTimeSpan">
            <summary>SearchQuery.Timeout(TimeSpan timeout)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQuery.AllInstances.ToJson">
            <summary>SearchQuery.ToJson()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQuery.AllInstances.WithConsistencyScanConsistency">
            <summary>SearchQuery.WithConsistency(ScanConsistency consistency)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Fakes.ShimSearchQueryResult">
            <summary>Couchbase.Search.SearchQueryResult의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimSearchQueryResult.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimSearchQueryResult.#ctor(Couchbase.Search.SearchQueryResult)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimSearchQueryResult.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimSearchQueryResult.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimSearchQueryResult.Bind(Couchbase.IResult)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimSearchQueryResult.Bind(Couchbase.Search.ISearchQueryResult)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimSearchQueryResult.Bind(System.IDisposable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimSearchQueryResult.Bind(System.Collections.IEnumerable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimSearchQueryResult.Bind(System.Collections.Generic.IEnumerable{Couchbase.Search.ISearchQueryRow})">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.AddISearchQueryRow">
            <summary>SearchQueryResult.Add(ISearchQueryRow row)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.AddSearchFacet">
            <summary>SearchQueryResult.Add(SearchFacet facet)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.Constructor">
            <summary>SearchQueryResult.SearchQueryResult()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.ConstructorHttpClient">
            <summary>SearchQueryResult.SearchQueryResult(HttpClient httpClient)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.CouchbaseIResultShouldRetry">
            <summary>SearchQueryResult.Couchbase.IResult.ShouldRetry()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.Dispose">
            <summary>SearchQueryResult.Dispose()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.ErrorCountGet">
            <summary>SearchQueryResult.get_ErrorCount()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.ErrorCountSetInt64">
            <summary>SearchQueryResult.set_ErrorCount(Int64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.ErrorsGet">
            <summary>SearchQueryResult.get_Errors()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.ErrorsSetIListOfString">
            <summary>SearchQueryResult.set_Errors(IList`1&lt;String&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.ExceptionGet">
            <summary>SearchQueryResult.get_Exception()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.ExceptionSetException">
            <summary>SearchQueryResult.set_Exception(Exception value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.FacetsGet">
            <summary>SearchQueryResult.get_Facets()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.FacetsSetIListOfSearchFacet">
            <summary>SearchQueryResult.set_Facets(IList`1&lt;SearchFacet&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.GetEnumerator">
            <summary>SearchQueryResult.GetEnumerator()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.HitsGet">
            <summary>SearchQueryResult.get_Hits()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.HitsSetIListOfISearchQueryRow">
            <summary>SearchQueryResult.set_Hits(IList`1&lt;ISearchQueryRow&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.LifespanGet">
            <summary>SearchQueryResult.get_Lifespan()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.LifespanSetLifespan">
            <summary>SearchQueryResult.set_Lifespan(Lifespan value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.MaxScoreGet">
            <summary>SearchQueryResult.get_MaxScore()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.MaxScoreSetDouble">
            <summary>SearchQueryResult.set_MaxScore(Double value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.MessageCouchbaseIResultget">
            <summary>SearchQueryResult.Couchbase.IResult.get_Message()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.StatusGet">
            <summary>SearchQueryResult.get_Status()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.StatusSetSearchStatus">
            <summary>SearchQueryResult.set_Status(SearchStatus value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.SuccessCountGet">
            <summary>SearchQueryResult.get_SuccessCount()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.SuccessCountSetInt64">
            <summary>SearchQueryResult.set_SuccessCount(Int64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.SuccessGet">
            <summary>SearchQueryResult.get_Success()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.SuccessSetBoolean">
            <summary>SearchQueryResult.set_Success(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.SystemCollectionsIEnumerableGetEnumerator">
            <summary>SearchQueryResult.System.Collections.IEnumerable.GetEnumerator()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.TookGet">
            <summary>SearchQueryResult.get_Took()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.TookSetTimeSpan">
            <summary>SearchQueryResult.set_Took(TimeSpan value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.TotalCountGet">
            <summary>SearchQueryResult.get_TotalCount()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.TotalCountSetInt64">
            <summary>SearchQueryResult.set_TotalCount(Int64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.TotalHitsGet">
            <summary>SearchQueryResult.get_TotalHits()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.TotalHitsSetInt64">
            <summary>SearchQueryResult.set_TotalHits(Int64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Fakes.ShimSearchQueryResult.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.AllInstances.AddISearchQueryRow">
            <summary>SearchQueryResult.Add(ISearchQueryRow row)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.AllInstances.AddSearchFacet">
            <summary>SearchQueryResult.Add(SearchFacet facet)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.AllInstances.CouchbaseIResultShouldRetry">
            <summary>SearchQueryResult.Couchbase.IResult.ShouldRetry()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.AllInstances.Dispose">
            <summary>SearchQueryResult.Dispose()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.AllInstances.ErrorCountGet">
            <summary>SearchQueryResult.get_ErrorCount()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.AllInstances.ErrorCountSetInt64">
            <summary>SearchQueryResult.set_ErrorCount(Int64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.AllInstances.ErrorsGet">
            <summary>SearchQueryResult.get_Errors()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.AllInstances.ErrorsSetIListOfString">
            <summary>SearchQueryResult.set_Errors(IList`1&lt;String&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.AllInstances.ExceptionGet">
            <summary>SearchQueryResult.get_Exception()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.AllInstances.ExceptionSetException">
            <summary>SearchQueryResult.set_Exception(Exception value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.AllInstances.FacetsGet">
            <summary>SearchQueryResult.get_Facets()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.AllInstances.FacetsSetIListOfSearchFacet">
            <summary>SearchQueryResult.set_Facets(IList`1&lt;SearchFacet&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.AllInstances.GetEnumerator">
            <summary>SearchQueryResult.GetEnumerator()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.AllInstances.HitsGet">
            <summary>SearchQueryResult.get_Hits()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.AllInstances.HitsSetIListOfISearchQueryRow">
            <summary>SearchQueryResult.set_Hits(IList`1&lt;ISearchQueryRow&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.AllInstances.LifespanGet">
            <summary>SearchQueryResult.get_Lifespan()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.AllInstances.LifespanSetLifespan">
            <summary>SearchQueryResult.set_Lifespan(Lifespan value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.AllInstances.MaxScoreGet">
            <summary>SearchQueryResult.get_MaxScore()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.AllInstances.MaxScoreSetDouble">
            <summary>SearchQueryResult.set_MaxScore(Double value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.AllInstances.MessageCouchbaseIResultget">
            <summary>SearchQueryResult.Couchbase.IResult.get_Message()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.AllInstances.StatusGet">
            <summary>SearchQueryResult.get_Status()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.AllInstances.StatusSetSearchStatus">
            <summary>SearchQueryResult.set_Status(SearchStatus value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.AllInstances.SuccessCountGet">
            <summary>SearchQueryResult.get_SuccessCount()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.AllInstances.SuccessCountSetInt64">
            <summary>SearchQueryResult.set_SuccessCount(Int64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.AllInstances.SuccessGet">
            <summary>SearchQueryResult.get_Success()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.AllInstances.SuccessSetBoolean">
            <summary>SearchQueryResult.set_Success(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>SearchQueryResult.System.Collections.IEnumerable.GetEnumerator()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.AllInstances.TookGet">
            <summary>SearchQueryResult.get_Took()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.AllInstances.TookSetTimeSpan">
            <summary>SearchQueryResult.set_Took(TimeSpan value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.AllInstances.TotalCountGet">
            <summary>SearchQueryResult.get_TotalCount()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.AllInstances.TotalCountSetInt64">
            <summary>SearchQueryResult.set_TotalCount(Int64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.AllInstances.TotalHitsGet">
            <summary>SearchQueryResult.get_TotalHits()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryResult.AllInstances.TotalHitsSetInt64">
            <summary>SearchQueryResult.set_TotalHits(Int64 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Fakes.ShimSearchQueryRow">
            <summary>Couchbase.Search.SearchQueryRow의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimSearchQueryRow.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimSearchQueryRow.#ctor(Couchbase.Search.SearchQueryRow)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimSearchQueryRow.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimSearchQueryRow.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimSearchQueryRow.Bind(Couchbase.Search.ISearchQueryRow)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryRow.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryRow.Constructor">
            <summary>SearchQueryRow.SearchQueryRow()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryRow.ExplanationGet">
            <summary>SearchQueryRow.get_Explanation()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryRow.ExplanationSetObject">
            <summary>SearchQueryRow.set_Explanation(Object value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryRow.FieldsGet">
            <summary>SearchQueryRow.get_Fields()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryRow.FieldsSetIDictionaryOfStringString">
            <summary>SearchQueryRow.set_Fields(IDictionary`2&lt;String,String&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryRow.FragmentsGet">
            <summary>SearchQueryRow.get_Fragments()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryRow.FragmentsSetIDictionaryOfStringListOfString">
            <summary>SearchQueryRow.set_Fragments(IDictionary`2&lt;String,List`1&lt;String&gt;&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryRow.IdGet">
            <summary>SearchQueryRow.get_Id()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryRow.IdSetString">
            <summary>SearchQueryRow.set_Id(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryRow.IndexGet">
            <summary>SearchQueryRow.get_Index()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryRow.IndexSetString">
            <summary>SearchQueryRow.set_Index(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryRow.LocationsGet">
            <summary>SearchQueryRow.get_Locations()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryRow.LocationsSetObject">
            <summary>SearchQueryRow.set_Locations(Object value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryRow.ScoreGet">
            <summary>SearchQueryRow.get_Score()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryRow.ScoreSetDouble">
            <summary>SearchQueryRow.set_Score(Double value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Fakes.ShimSearchQueryRow.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryRow.AllInstances.ExplanationGet">
            <summary>SearchQueryRow.get_Explanation()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryRow.AllInstances.ExplanationSetObject">
            <summary>SearchQueryRow.set_Explanation(Object value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryRow.AllInstances.FieldsGet">
            <summary>SearchQueryRow.get_Fields()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryRow.AllInstances.FieldsSetIDictionaryOfStringString">
            <summary>SearchQueryRow.set_Fields(IDictionary`2&lt;String,String&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryRow.AllInstances.FragmentsGet">
            <summary>SearchQueryRow.get_Fragments()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryRow.AllInstances.FragmentsSetIDictionaryOfStringListOfString">
            <summary>SearchQueryRow.set_Fragments(IDictionary`2&lt;String,List`1&lt;String&gt;&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryRow.AllInstances.IdGet">
            <summary>SearchQueryRow.get_Id()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryRow.AllInstances.IdSetString">
            <summary>SearchQueryRow.set_Id(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryRow.AllInstances.IndexGet">
            <summary>SearchQueryRow.get_Index()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryRow.AllInstances.IndexSetString">
            <summary>SearchQueryRow.set_Index(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryRow.AllInstances.LocationsGet">
            <summary>SearchQueryRow.get_Locations()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryRow.AllInstances.LocationsSetObject">
            <summary>SearchQueryRow.set_Locations(Object value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryRow.AllInstances.ScoreGet">
            <summary>SearchQueryRow.get_Score()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimSearchQueryRow.AllInstances.ScoreSetDouble">
            <summary>SearchQueryRow.set_Score(Double value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Fakes.ShimTermFacet">
            <summary>Couchbase.Search.TermFacet의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimTermFacet.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimTermFacet.#ctor(Couchbase.Search.TermFacet)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimTermFacet.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimTermFacet.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.ShimTermFacet.Bind(Couchbase.Search.ISearchFacet)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimTermFacet.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimTermFacet.Constructor">
            <summary>TermFacet.TermFacet()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.ShimTermFacet.ConstructorStringStringInt32">
            <summary>TermFacet.TermFacet(String name, String field, Int32 size)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Fakes.ShimTermFacet.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Search.Fakes.StubIFtsQuery">
            <summary>Couchbase.Search.IFtsQuery의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.StubIFtsQuery.#ctor">
            <summary>type StubIFtsQuery의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.StubIFtsQuery.AttachBackingFieldToLifespan">
            <summary>대리자를 연결하여 StubIFtsQuery.Lifespan을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubIFtsQuery.BoostDouble">
            <summary>IFtsQuery.Boost(Double boost)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.StubIFtsQuery.cnc::Couchbase#Search#IFtsQuery#Boost(System.Double)">
            <summary>IFtsQuery.Boost(Double boost)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.StubIFtsQuery.cnc::Couchbase#Search#IFtsQuery#Export">
            <summary>IFtsQuery.Export()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.StubIFtsQuery.cnc::Couchbase#Search#IFtsQuery#Export(Couchbase.Search.ISearchParams)">
            <summary>IFtsQuery.Export(ISearchParams searchParams)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.StubIFtsQuery.cnc::Couchbase#Search#IFtsQuery#TimedOut">
            <summary>IFtsQuery.TimedOut()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubIFtsQuery.Export">
            <summary>IFtsQuery.Export()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubIFtsQuery.ExportISearchParams">
            <summary>IFtsQuery.Export(ISearchParams searchParams)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubIFtsQuery.LifespanGet">
            <summary>IFtsQuery.get_Lifespan()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubIFtsQuery.LifespanSetLifespan">
            <summary>IFtsQuery.set_Lifespan(Lifespan value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubIFtsQuery.TimedOut">
            <summary>IFtsQuery.TimedOut()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.StubIFtsQuery.cnc::Couchbase#Search#IFtsQuery#Lifespan">
            <summary>IFtsQuery.get_Lifespan()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Fakes.StubISearchClient">
            <summary>Couchbase.Search.ISearchClient의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.StubISearchClient.#ctor">
            <summary>type StubISearchClient의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.StubISearchClient.cnc::Couchbase#Search#ISearchClient#CreateHttpClient">
            <summary>ISearchClient.CreateHttpClient()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.StubISearchClient.cnc::Couchbase#Search#ISearchClient#Query(Couchbase.Search.SearchQuery)">
            <summary>ISearchClient.Query(SearchQuery searchQuery)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.StubISearchClient.cnc::Couchbase#Search#ISearchClient#QueryAsync(Couchbase.Search.SearchQuery)">
            <summary>ISearchClient.QueryAsync(SearchQuery searchQuery)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchClient.CreateHttpClient">
            <summary>ISearchClient.CreateHttpClient()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchClient.DataMapperGet">
            <summary>ISearchClient.get_DataMapper()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchClient.QueryAsyncSearchQuery">
            <summary>ISearchClient.QueryAsync(SearchQuery searchQuery)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchClient.QuerySearchQuery">
            <summary>ISearchClient.Query(SearchQuery searchQuery)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.StubISearchClient.cnc::Couchbase#Search#ISearchClient#DataMapper">
            <summary>ISearchClient.get_DataMapper()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Fakes.StubISearchFacet">
            <summary>Couchbase.Search.ISearchFacet의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.StubISearchFacet.#ctor">
            <summary>type StubISearchFacet의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.StubISearchFacet.AttachBackingFieldToField">
            <summary>대리자를 연결하여 StubISearchFacet.Field을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.StubISearchFacet.AttachBackingFieldToName">
            <summary>대리자를 연결하여 StubISearchFacet.Name을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.StubISearchFacet.AttachBackingFieldToSize">
            <summary>대리자를 연결하여 StubISearchFacet.Size을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.StubISearchFacet.cnc::Couchbase#Search#ISearchFacet#ToJson">
            <summary>ISearchFacet.ToJson()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchFacet.FieldGet">
            <summary>ISearchFacet.get_Field()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchFacet.FieldSetString">
            <summary>ISearchFacet.set_Field(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchFacet.NameGet">
            <summary>ISearchFacet.get_Name()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchFacet.NameSetString">
            <summary>ISearchFacet.set_Name(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchFacet.SizeGet">
            <summary>ISearchFacet.get_Size()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchFacet.SizeSetInt32">
            <summary>ISearchFacet.set_Size(Int32 value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchFacet.ToJson">
            <summary>ISearchFacet.ToJson()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.StubISearchFacet.cnc::Couchbase#Search#ISearchFacet#Field">
            <summary>ISearchFacet.get_Field()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.StubISearchFacet.cnc::Couchbase#Search#ISearchFacet#Name">
            <summary>ISearchFacet.get_Name()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.StubISearchFacet.cnc::Couchbase#Search#ISearchFacet#Size">
            <summary>ISearchFacet.get_Size()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Fakes.StubISearchParams">
            <summary>Couchbase.Search.ISearchParams의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.StubISearchParams.#ctor">
            <summary>type StubISearchParams의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.StubISearchParams.cnc::Couchbase#Search#ISearchParams#Explain(System.Boolean)">
            <summary>ISearchParams.Explain(Boolean explain)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.StubISearchParams.cnc::Couchbase#Search#ISearchParams#Facets(Couchbase.Search.ISearchFacet[])">
            <summary>ISearchParams.Facets(ISearchFacet[] searchFacets)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.StubISearchParams.cnc::Couchbase#Search#ISearchParams#Fields(System.String[])">
            <summary>ISearchParams.Fields(String[] fields)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.StubISearchParams.cnc::Couchbase#Search#ISearchParams#Highlighting(Couchbase.Search.HighLightStyle)">
            <summary>ISearchParams.Highlighting(HighLightStyle highLightStyle)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.StubISearchParams.cnc::Couchbase#Search#ISearchParams#Highlighting(Couchbase.Search.HighLightStyle,System.String[])">
            <summary>ISearchParams.Highlighting(HighLightStyle highLightStyle, String[] fields)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.StubISearchParams.cnc::Couchbase#Search#ISearchParams#Limit(System.Int32)">
            <summary>ISearchParams.Limit(Int32 limit)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.StubISearchParams.cnc::Couchbase#Search#ISearchParams#Skip(System.Int32)">
            <summary>ISearchParams.Skip(Int32 skip)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.StubISearchParams.cnc::Couchbase#Search#ISearchParams#Timeout(System.TimeSpan)">
            <summary>ISearchParams.Timeout(TimeSpan timeout)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.StubISearchParams.cnc::Couchbase#Search#ISearchParams#ToJson">
            <summary>ISearchParams.ToJson()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.StubISearchParams.cnc::Couchbase#Search#ISearchParams#WithConsistency(Couchbase.N1QL.ScanConsistency)">
            <summary>ISearchParams.WithConsistency(ScanConsistency consistency)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchParams.ExplainBoolean">
            <summary>ISearchParams.Explain(Boolean explain)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchParams.FacetsISearchFacetArray">
            <summary>ISearchParams.Facets(ISearchFacet[] searchFacets)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchParams.FieldsStringArray">
            <summary>ISearchParams.Fields(String[] fields)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchParams.HighlightingHighLightStyle">
            <summary>ISearchParams.Highlighting(HighLightStyle highLightStyle)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchParams.HighlightingHighLightStyleStringArray">
            <summary>ISearchParams.Highlighting(HighLightStyle highLightStyle, String[] fields)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchParams.LimitInt32">
            <summary>ISearchParams.Limit(Int32 limit)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchParams.SkipInt32">
            <summary>ISearchParams.Skip(Int32 skip)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchParams.TimeoutTimeSpan">
            <summary>ISearchParams.Timeout(TimeSpan timeout)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchParams.ToJson">
            <summary>ISearchParams.ToJson()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchParams.WithConsistencyScanConsistency">
            <summary>ISearchParams.WithConsistency(ScanConsistency consistency)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Fakes.StubISearchQueryResult">
            <summary>Couchbase.Search.ISearchQueryResult의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.StubISearchQueryResult.#ctor">
            <summary>type StubISearchQueryResult의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.StubISearchQueryResult.AttachBackingFieldToLifespan">
            <summary>대리자를 연결하여 StubISearchQueryResult.Lifespan을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.StubISearchQueryResult.AttachBackingFieldToStatus">
            <summary>대리자를 연결하여 StubISearchQueryResult.Status을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.StubISearchQueryResult.cnc::Couchbase#IResult#ShouldRetry">
            <summary>IResult.ShouldRetry()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchQueryResult.ErrorCountGet">
            <summary>ISearchQueryResult.get_ErrorCount()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchQueryResult.ErrorsGet">
            <summary>ISearchQueryResult.get_Errors()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchQueryResult.ExceptionGet">
            <summary>IResult.get_Exception()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchQueryResult.FacetsGet">
            <summary>ISearchQueryResult.get_Facets()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchQueryResult.GetEnumerator">
            <summary>IEnumerable`1.GetEnumerator()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchQueryResult.GetEnumerator01">
            <summary>IEnumerable.GetEnumerator()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchQueryResult.HitsGet">
            <summary>ISearchQueryResult.get_Hits()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchQueryResult.LifespanGet">
            <summary>ISearchQueryResult.get_Lifespan()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchQueryResult.LifespanSetLifespan">
            <summary>ISearchQueryResult.set_Lifespan(Lifespan value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchQueryResult.MaxScoreGet">
            <summary>ISearchQueryResult.get_MaxScore()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchQueryResult.MessageGet">
            <summary>IResult.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchQueryResult.ShouldRetry">
            <summary>IResult.ShouldRetry()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchQueryResult.StatusGet">
            <summary>ISearchQueryResult.get_Status()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchQueryResult.StatusSetSearchStatus">
            <summary>ISearchQueryResult.set_Status(SearchStatus value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchQueryResult.SuccessCountGet">
            <summary>ISearchQueryResult.get_SuccessCount()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchQueryResult.SuccessGet">
            <summary>IResult.get_Success()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.StubISearchQueryResult.global::System#Collections#Generic#IEnumerable{Couchbase#Search#ISearchQueryRow}#GetEnumerator">
            <summary>IEnumerable`1.GetEnumerator()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.StubISearchQueryResult.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>IEnumerable.GetEnumerator()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchQueryResult.TookGet">
            <summary>ISearchQueryResult.get_Took()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchQueryResult.TotalCountGet">
            <summary>ISearchQueryResult.get_TotalCount()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchQueryResult.TotalHitsGet">
            <summary>ISearchQueryResult.get_TotalHits()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.StubISearchQueryResult.cnc::Couchbase#Search#ISearchQueryResult#ErrorCount">
            <summary>ISearchQueryResult.get_ErrorCount()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.StubISearchQueryResult.cnc::Couchbase#Search#ISearchQueryResult#Errors">
            <summary>ISearchQueryResult.get_Errors()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.StubISearchQueryResult.cnc::Couchbase#IResult#Exception">
            <summary>IResult.get_Exception()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.StubISearchQueryResult.cnc::Couchbase#Search#ISearchQueryResult#Facets">
            <summary>ISearchQueryResult.get_Facets()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.StubISearchQueryResult.cnc::Couchbase#Search#ISearchQueryResult#Hits">
            <summary>ISearchQueryResult.get_Hits()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.StubISearchQueryResult.cnc::Couchbase#Search#ISearchQueryResult#Lifespan">
            <summary>ISearchQueryResult.get_Lifespan()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.StubISearchQueryResult.cnc::Couchbase#Search#ISearchQueryResult#MaxScore">
            <summary>ISearchQueryResult.get_MaxScore()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.StubISearchQueryResult.cnc::Couchbase#IResult#Message">
            <summary>IResult.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.StubISearchQueryResult.cnc::Couchbase#Search#ISearchQueryResult#Status">
            <summary>ISearchQueryResult.get_Status()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.StubISearchQueryResult.cnc::Couchbase#IResult#Success">
            <summary>IResult.get_Success()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.StubISearchQueryResult.cnc::Couchbase#Search#ISearchQueryResult#SuccessCount">
            <summary>ISearchQueryResult.get_SuccessCount()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.StubISearchQueryResult.cnc::Couchbase#Search#ISearchQueryResult#Took">
            <summary>ISearchQueryResult.get_Took()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.StubISearchQueryResult.cnc::Couchbase#Search#ISearchQueryResult#TotalCount">
            <summary>ISearchQueryResult.get_TotalCount()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.StubISearchQueryResult.cnc::Couchbase#Search#ISearchQueryResult#TotalHits">
            <summary>ISearchQueryResult.get_TotalHits()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Fakes.StubISearchQueryRow">
            <summary>Couchbase.Search.ISearchQueryRow의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.StubISearchQueryRow.#ctor">
            <summary>type StubISearchQueryRow의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchQueryRow.ExplanationGet">
            <summary>ISearchQueryRow.get_Explanation()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchQueryRow.FieldsGet">
            <summary>ISearchQueryRow.get_Fields()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchQueryRow.FragmentsGet">
            <summary>ISearchQueryRow.get_Fragments()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchQueryRow.IdGet">
            <summary>ISearchQueryRow.get_Id()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchQueryRow.IndexGet">
            <summary>ISearchQueryRow.get_Index()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchQueryRow.LocationsGet">
            <summary>ISearchQueryRow.get_Locations()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubISearchQueryRow.ScoreGet">
            <summary>ISearchQueryRow.get_Score()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.StubISearchQueryRow.cnc::Couchbase#Search#ISearchQueryRow#Explanation">
            <summary>ISearchQueryRow.get_Explanation()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.StubISearchQueryRow.cnc::Couchbase#Search#ISearchQueryRow#Fields">
            <summary>ISearchQueryRow.get_Fields()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.StubISearchQueryRow.cnc::Couchbase#Search#ISearchQueryRow#Fragments">
            <summary>ISearchQueryRow.get_Fragments()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.StubISearchQueryRow.cnc::Couchbase#Search#ISearchQueryRow#Id">
            <summary>ISearchQueryRow.get_Id()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.StubISearchQueryRow.cnc::Couchbase#Search#ISearchQueryRow#Index">
            <summary>ISearchQueryRow.get_Index()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.StubISearchQueryRow.cnc::Couchbase#Search#ISearchQueryRow#Locations">
            <summary>ISearchQueryRow.get_Locations()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.StubISearchQueryRow.cnc::Couchbase#Search#ISearchQueryRow#Score">
            <summary>ISearchQueryRow.get_Score()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Fakes.StubSearchClient">
            <summary>Couchbase.Search.SearchClient의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.StubSearchClient.#ctor(Couchbase.Configuration.Server.Serialization.IBucketConfig,Couchbase.Configuration.Client.ClientConfiguration,Couchbase.Views.IDataMapper)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.StubSearchClient.CreateHttpClient">
            <summary>SearchClient.CreateHttpClient()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubSearchClient.CreateHttpClient01">
            <summary>SearchClient.CreateHttpClient()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.StubSearchClient.InitializeStub">
            <summary>type StubSearchClient의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.StubSearchClient.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.StubSearchClient.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.StubSearchClient.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Fakes.StubSearchFacet">
            <summary>Couchbase.Search.SearchFacet의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.StubSearchFacet.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.StubSearchFacet.InitializeStub">
            <summary>type StubSearchFacet의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.StubSearchFacet.ToJson">
            <summary>SearchFacet.ToJson()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubSearchFacet.ToJson01">
            <summary>SearchFacet.ToJson()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.StubSearchFacet.ToString">
            <summary>SearchFacet.ToString()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubSearchFacet.ToString01">
            <summary>SearchFacet.ToString()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.StubSearchFacet.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.StubSearchFacet.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.StubSearchFacet.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Fakes.StubSearchParams">
            <summary>Couchbase.Search.SearchParams의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.StubSearchParams.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.StubSearchParams.InitializeStub">
            <summary>type StubSearchParams의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.StubSearchParams.ToString">
            <summary>SearchParams.ToString()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Fakes.StubSearchParams.ToString01">
            <summary>SearchParams.ToString()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.StubSearchParams.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.StubSearchParams.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.StubSearchParams.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Fakes.StubSearchQueryRow">
            <summary>Couchbase.Search.SearchQueryRow의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.StubSearchQueryRow.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Fakes.StubSearchQueryRow.InitializeStub">
            <summary>type StubSearchQueryRow의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.StubSearchQueryRow.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.StubSearchQueryRow.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Fakes.StubSearchQueryRow.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Compound.Fakes.ShimBooleanQuery">
            <summary>Couchbase.Search.Queries.Compound.BooleanQuery의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Compound.Fakes.ShimBooleanQuery.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Compound.Fakes.ShimBooleanQuery.#ctor(Couchbase.Search.Queries.Compound.BooleanQuery)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Compound.Fakes.ShimBooleanQuery.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Compound.Fakes.ShimBooleanQuery.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Compound.Fakes.ShimBooleanQuery.Bind(Couchbase.Search.IFtsQuery)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimBooleanQuery.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimBooleanQuery.BoostDouble">
            <summary>BooleanQuery.Boost(Double boost)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimBooleanQuery.Constructor">
            <summary>BooleanQuery.BooleanQuery()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimBooleanQuery.Export">
            <summary>BooleanQuery.Export()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimBooleanQuery.ExportISearchParams">
            <summary>BooleanQuery.Export(ISearchParams searchParams)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimBooleanQuery.MustFtsQueryBaseArray">
            <summary>BooleanQuery.Must(FtsQueryBase[] queries)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimBooleanQuery.MustNotFtsQueryBaseArray">
            <summary>BooleanQuery.MustNot(FtsQueryBase[] queries)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimBooleanQuery.ShouldFtsQueryBaseArray">
            <summary>BooleanQuery.Should(FtsQueryBase[] queries)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimBooleanQuery.ShouldMinInt32">
            <summary>BooleanQuery.ShouldMin(Int32 min)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Compound.Fakes.ShimBooleanQuery.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimBooleanQuery.AllInstances.BoostDouble">
            <summary>BooleanQuery.Boost(Double boost)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimBooleanQuery.AllInstances.Export">
            <summary>BooleanQuery.Export()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimBooleanQuery.AllInstances.ExportISearchParams">
            <summary>BooleanQuery.Export(ISearchParams searchParams)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimBooleanQuery.AllInstances.MustFtsQueryBaseArray">
            <summary>BooleanQuery.Must(FtsQueryBase[] queries)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimBooleanQuery.AllInstances.MustNotFtsQueryBaseArray">
            <summary>BooleanQuery.MustNot(FtsQueryBase[] queries)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimBooleanQuery.AllInstances.ShouldFtsQueryBaseArray">
            <summary>BooleanQuery.Should(FtsQueryBase[] queries)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimBooleanQuery.AllInstances.ShouldMinInt32">
            <summary>BooleanQuery.ShouldMin(Int32 min)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Compound.Fakes.ShimConjunctionQuery">
            <summary>Couchbase.Search.Queries.Compound.ConjunctionQuery의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Compound.Fakes.ShimConjunctionQuery.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Compound.Fakes.ShimConjunctionQuery.#ctor(Couchbase.Search.Queries.Compound.ConjunctionQuery)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Compound.Fakes.ShimConjunctionQuery.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Compound.Fakes.ShimConjunctionQuery.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Compound.Fakes.ShimConjunctionQuery.Bind(Couchbase.Search.IFtsQuery)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Compound.Fakes.ShimConjunctionQuery.Bind(System.Collections.IEnumerable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Compound.Fakes.ShimConjunctionQuery.Bind(System.Collections.Generic.IEnumerable{Couchbase.Search.IFtsQuery})">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimConjunctionQuery.AndFtsQueryBaseArray">
            <summary>ConjunctionQuery.And(FtsQueryBase[] queries)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimConjunctionQuery.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimConjunctionQuery.BoostDouble">
            <summary>ConjunctionQuery.Boost(Double boost)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimConjunctionQuery.ConstructorFtsQueryBaseArray">
            <summary>ConjunctionQuery.ConjunctionQuery(FtsQueryBase[] queries)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimConjunctionQuery.Export">
            <summary>ConjunctionQuery.Export()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimConjunctionQuery.ExportISearchParams">
            <summary>ConjunctionQuery.Export(ISearchParams searchParams)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimConjunctionQuery.GetEnumerator">
            <summary>ConjunctionQuery.GetEnumerator()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimConjunctionQuery.SystemCollectionsIEnumerableGetEnumerator">
            <summary>ConjunctionQuery.System.Collections.IEnumerable.GetEnumerator()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Compound.Fakes.ShimConjunctionQuery.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimConjunctionQuery.AllInstances.AndFtsQueryBaseArray">
            <summary>ConjunctionQuery.And(FtsQueryBase[] queries)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimConjunctionQuery.AllInstances.BoostDouble">
            <summary>ConjunctionQuery.Boost(Double boost)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimConjunctionQuery.AllInstances.Export">
            <summary>ConjunctionQuery.Export()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimConjunctionQuery.AllInstances.ExportISearchParams">
            <summary>ConjunctionQuery.Export(ISearchParams searchParams)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimConjunctionQuery.AllInstances.GetEnumerator">
            <summary>ConjunctionQuery.GetEnumerator()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimConjunctionQuery.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>ConjunctionQuery.System.Collections.IEnumerable.GetEnumerator()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Compound.Fakes.ShimDisjunctionQuery">
            <summary>Couchbase.Search.Queries.Compound.DisjunctionQuery의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Compound.Fakes.ShimDisjunctionQuery.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Compound.Fakes.ShimDisjunctionQuery.#ctor(Couchbase.Search.Queries.Compound.DisjunctionQuery)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Compound.Fakes.ShimDisjunctionQuery.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Compound.Fakes.ShimDisjunctionQuery.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Compound.Fakes.ShimDisjunctionQuery.Bind(Couchbase.Search.IFtsQuery)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Compound.Fakes.ShimDisjunctionQuery.Bind(System.Collections.IEnumerable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Compound.Fakes.ShimDisjunctionQuery.Bind(System.Collections.Generic.IEnumerable{Couchbase.Search.IFtsQuery})">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimDisjunctionQuery.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimDisjunctionQuery.BoostDouble">
            <summary>DisjunctionQuery.Boost(Double boost)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimDisjunctionQuery.ConstructorFtsQueryBaseArray">
            <summary>DisjunctionQuery.DisjunctionQuery(FtsQueryBase[] queries)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimDisjunctionQuery.Export">
            <summary>DisjunctionQuery.Export()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimDisjunctionQuery.ExportISearchParams">
            <summary>DisjunctionQuery.Export(ISearchParams searchParams)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimDisjunctionQuery.GetEnumerator">
            <summary>DisjunctionQuery.GetEnumerator()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimDisjunctionQuery.MinInt32">
            <summary>DisjunctionQuery.Min(Int32 min)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimDisjunctionQuery.OrFtsQueryBaseArray">
            <summary>DisjunctionQuery.Or(FtsQueryBase[] queries)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimDisjunctionQuery.SystemCollectionsIEnumerableGetEnumerator">
            <summary>DisjunctionQuery.System.Collections.IEnumerable.GetEnumerator()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Compound.Fakes.ShimDisjunctionQuery.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimDisjunctionQuery.AllInstances.BoostDouble">
            <summary>DisjunctionQuery.Boost(Double boost)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimDisjunctionQuery.AllInstances.Export">
            <summary>DisjunctionQuery.Export()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimDisjunctionQuery.AllInstances.ExportISearchParams">
            <summary>DisjunctionQuery.Export(ISearchParams searchParams)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimDisjunctionQuery.AllInstances.GetEnumerator">
            <summary>DisjunctionQuery.GetEnumerator()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimDisjunctionQuery.AllInstances.MinInt32">
            <summary>DisjunctionQuery.Min(Int32 min)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimDisjunctionQuery.AllInstances.OrFtsQueryBaseArray">
            <summary>DisjunctionQuery.Or(FtsQueryBase[] queries)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.ShimDisjunctionQuery.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>DisjunctionQuery.System.Collections.IEnumerable.GetEnumerator()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Compound.Fakes.StubBooleanQuery">
            <summary>Couchbase.Search.Queries.Compound.BooleanQuery의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Compound.Fakes.StubBooleanQuery.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Compound.Fakes.StubBooleanQuery.Export">
            <summary>BooleanQuery.Export()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Compound.Fakes.StubBooleanQuery.Export(Couchbase.Search.ISearchParams)">
            <summary>BooleanQuery.Export(ISearchParams searchParams)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Queries.Compound.Fakes.StubBooleanQuery.Export01">
            <summary>BooleanQuery.Export()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Queries.Compound.Fakes.StubBooleanQuery.ExportISearchParams">
            <summary>BooleanQuery.Export(ISearchParams searchParams)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Compound.Fakes.StubBooleanQuery.InitializeStub">
            <summary>type StubBooleanQuery의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.StubBooleanQuery.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.StubBooleanQuery.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.StubBooleanQuery.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Compound.Fakes.StubConjunctionQuery">
            <summary>Couchbase.Search.Queries.Compound.ConjunctionQuery의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Compound.Fakes.StubConjunctionQuery.#ctor(Couchbase.Search.Queries.FtsQueryBase[])">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Compound.Fakes.StubConjunctionQuery.Export">
            <summary>ConjunctionQuery.Export()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Compound.Fakes.StubConjunctionQuery.Export(Couchbase.Search.ISearchParams)">
            <summary>ConjunctionQuery.Export(ISearchParams searchParams)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Queries.Compound.Fakes.StubConjunctionQuery.Export01">
            <summary>ConjunctionQuery.Export()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Queries.Compound.Fakes.StubConjunctionQuery.ExportISearchParams">
            <summary>ConjunctionQuery.Export(ISearchParams searchParams)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Compound.Fakes.StubConjunctionQuery.InitializeStub">
            <summary>type StubConjunctionQuery의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.StubConjunctionQuery.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.StubConjunctionQuery.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.StubConjunctionQuery.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Compound.Fakes.StubDisjunctionQuery">
            <summary>Couchbase.Search.Queries.Compound.DisjunctionQuery의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Compound.Fakes.StubDisjunctionQuery.#ctor(Couchbase.Search.Queries.FtsQueryBase[])">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Compound.Fakes.StubDisjunctionQuery.Export">
            <summary>DisjunctionQuery.Export()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Compound.Fakes.StubDisjunctionQuery.Export(Couchbase.Search.ISearchParams)">
            <summary>DisjunctionQuery.Export(ISearchParams searchParams)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Queries.Compound.Fakes.StubDisjunctionQuery.Export01">
            <summary>DisjunctionQuery.Export()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Queries.Compound.Fakes.StubDisjunctionQuery.ExportISearchParams">
            <summary>DisjunctionQuery.Export(ISearchParams searchParams)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Compound.Fakes.StubDisjunctionQuery.InitializeStub">
            <summary>type StubDisjunctionQuery의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.StubDisjunctionQuery.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.StubDisjunctionQuery.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Compound.Fakes.StubDisjunctionQuery.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Fakes.ShimFtsQueryBase">
            <summary>Couchbase.Search.Queries.FtsQueryBase의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Fakes.ShimFtsQueryBase.#ctor(Couchbase.Search.Queries.FtsQueryBase)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Fakes.ShimFtsQueryBase.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Fakes.ShimFtsQueryBase.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Fakes.ShimFtsQueryBase.Bind(Couchbase.Search.IFtsQuery)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Fakes.ShimFtsQueryBase.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Fakes.ShimFtsQueryBase.Constructor">
            <summary>FtsQueryBase.FtsQueryBase()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Fakes.ShimFtsQueryBase.CouchbaseSearchIFtsQueryBoostDouble">
            <summary>FtsQueryBase.Couchbase.Search.IFtsQuery.Boost(Double boost)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Fakes.ShimFtsQueryBase.CouchbaseSearchIFtsQueryTimedOut">
            <summary>FtsQueryBase.Couchbase.Search.IFtsQuery.TimedOut()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Fakes.ShimFtsQueryBase.Export">
            <summary>FtsQueryBase.Export()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Fakes.ShimFtsQueryBase.ExportISearchParams">
            <summary>FtsQueryBase.Export(ISearchParams searchParams)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Fakes.ShimFtsQueryBase.LifespanCouchbaseSearchIFtsQueryget">
            <summary>FtsQueryBase.Couchbase.Search.IFtsQuery.get_Lifespan()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Fakes.ShimFtsQueryBase.LifespanCouchbaseSearchIFtsQuerysetLifespan">
            <summary>FtsQueryBase.Couchbase.Search.IFtsQuery.set_Lifespan(Lifespan value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Fakes.ShimFtsQueryBase.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Fakes.ShimFtsQueryBase.AllInstances.CouchbaseSearchIFtsQueryBoostDouble">
            <summary>FtsQueryBase.Couchbase.Search.IFtsQuery.Boost(Double boost)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Fakes.ShimFtsQueryBase.AllInstances.CouchbaseSearchIFtsQueryTimedOut">
            <summary>FtsQueryBase.Couchbase.Search.IFtsQuery.TimedOut()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Fakes.ShimFtsQueryBase.AllInstances.Export">
            <summary>FtsQueryBase.Export()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Fakes.ShimFtsQueryBase.AllInstances.ExportISearchParams">
            <summary>FtsQueryBase.Export(ISearchParams searchParams)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Fakes.ShimFtsQueryBase.AllInstances.LifespanCouchbaseSearchIFtsQueryget">
            <summary>FtsQueryBase.Couchbase.Search.IFtsQuery.get_Lifespan()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Fakes.ShimFtsQueryBase.AllInstances.LifespanCouchbaseSearchIFtsQuerysetLifespan">
            <summary>FtsQueryBase.Couchbase.Search.IFtsQuery.set_Lifespan(Lifespan value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Fakes.StubFtsQueryBase">
            <summary>Couchbase.Search.Queries.FtsQueryBase의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Fakes.StubFtsQueryBase.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Fakes.StubFtsQueryBase.Export">
            <summary>FtsQueryBase.Export()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Fakes.StubFtsQueryBase.Export(Couchbase.Search.ISearchParams)">
            <summary>FtsQueryBase.Export(ISearchParams searchParams)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Queries.Fakes.StubFtsQueryBase.Export01">
            <summary>FtsQueryBase.Export()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Queries.Fakes.StubFtsQueryBase.ExportISearchParams">
            <summary>FtsQueryBase.Export(ISearchParams searchParams)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Fakes.StubFtsQueryBase.InitializeStub">
            <summary>type StubFtsQueryBase의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Fakes.StubFtsQueryBase.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Fakes.StubFtsQueryBase.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Fakes.StubFtsQueryBase.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Range.Fakes.ShimDateRangeQuery">
            <summary>Couchbase.Search.Queries.Range.DateRangeQuery의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Range.Fakes.ShimDateRangeQuery.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Range.Fakes.ShimDateRangeQuery.#ctor(Couchbase.Search.Queries.Range.DateRangeQuery)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Range.Fakes.ShimDateRangeQuery.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Range.Fakes.ShimDateRangeQuery.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Range.Fakes.ShimDateRangeQuery.Bind(Couchbase.Search.IFtsQuery)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Range.Fakes.ShimDateRangeQuery.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Range.Fakes.ShimDateRangeQuery.BoostDouble">
            <summary>DateRangeQuery.Boost(Double boost)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Range.Fakes.ShimDateRangeQuery.Constructor">
            <summary>DateRangeQuery.DateRangeQuery()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Range.Fakes.ShimDateRangeQuery.EndDateTimeBoolean">
            <summary>DateRangeQuery.End(DateTime endTime, Boolean inclusive)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Range.Fakes.ShimDateRangeQuery.Export">
            <summary>DateRangeQuery.Export()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Range.Fakes.ShimDateRangeQuery.ExportISearchParams">
            <summary>DateRangeQuery.Export(ISearchParams searchParams)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Range.Fakes.ShimDateRangeQuery.FieldString">
            <summary>DateRangeQuery.Field(String field)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Range.Fakes.ShimDateRangeQuery.ParserString">
            <summary>DateRangeQuery.Parser(String name)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Range.Fakes.ShimDateRangeQuery.StartDateTimeBoolean">
            <summary>DateRangeQuery.Start(DateTime startTime, Boolean inclusive)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Range.Fakes.ShimDateRangeQuery.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Range.Fakes.ShimDateRangeQuery.AllInstances.BoostDouble">
            <summary>DateRangeQuery.Boost(Double boost)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Range.Fakes.ShimDateRangeQuery.AllInstances.EndDateTimeBoolean">
            <summary>DateRangeQuery.End(DateTime endTime, Boolean inclusive)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Range.Fakes.ShimDateRangeQuery.AllInstances.Export">
            <summary>DateRangeQuery.Export()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Range.Fakes.ShimDateRangeQuery.AllInstances.ExportISearchParams">
            <summary>DateRangeQuery.Export(ISearchParams searchParams)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Range.Fakes.ShimDateRangeQuery.AllInstances.FieldString">
            <summary>DateRangeQuery.Field(String field)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Range.Fakes.ShimDateRangeQuery.AllInstances.ParserString">
            <summary>DateRangeQuery.Parser(String name)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Range.Fakes.ShimDateRangeQuery.AllInstances.StartDateTimeBoolean">
            <summary>DateRangeQuery.Start(DateTime startTime, Boolean inclusive)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Range.Fakes.ShimNumericRangeQuery">
            <summary>Couchbase.Search.Queries.Range.NumericRangeQuery의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Range.Fakes.ShimNumericRangeQuery.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Range.Fakes.ShimNumericRangeQuery.#ctor(Couchbase.Search.Queries.Range.NumericRangeQuery)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Range.Fakes.ShimNumericRangeQuery.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Range.Fakes.ShimNumericRangeQuery.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Range.Fakes.ShimNumericRangeQuery.Bind(Couchbase.Search.IFtsQuery)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Range.Fakes.ShimNumericRangeQuery.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Range.Fakes.ShimNumericRangeQuery.BoostDouble">
            <summary>NumericRangeQuery.Boost(Double boost)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Range.Fakes.ShimNumericRangeQuery.Constructor">
            <summary>NumericRangeQuery.NumericRangeQuery()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Range.Fakes.ShimNumericRangeQuery.Export">
            <summary>NumericRangeQuery.Export()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Range.Fakes.ShimNumericRangeQuery.ExportISearchParams">
            <summary>NumericRangeQuery.Export(ISearchParams searchParams)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Range.Fakes.ShimNumericRangeQuery.FieldString">
            <summary>NumericRangeQuery.Field(String field)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Range.Fakes.ShimNumericRangeQuery.MaxDoubleBoolean">
            <summary>NumericRangeQuery.Max(Double max, Boolean inclusive)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Range.Fakes.ShimNumericRangeQuery.MinDoubleBoolean">
            <summary>NumericRangeQuery.Min(Double min, Boolean inclusive)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Range.Fakes.ShimNumericRangeQuery.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Range.Fakes.ShimNumericRangeQuery.AllInstances.BoostDouble">
            <summary>NumericRangeQuery.Boost(Double boost)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Range.Fakes.ShimNumericRangeQuery.AllInstances.Export">
            <summary>NumericRangeQuery.Export()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Range.Fakes.ShimNumericRangeQuery.AllInstances.ExportISearchParams">
            <summary>NumericRangeQuery.Export(ISearchParams searchParams)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Range.Fakes.ShimNumericRangeQuery.AllInstances.FieldString">
            <summary>NumericRangeQuery.Field(String field)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Range.Fakes.ShimNumericRangeQuery.AllInstances.MaxDoubleBoolean">
            <summary>NumericRangeQuery.Max(Double max, Boolean inclusive)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Range.Fakes.ShimNumericRangeQuery.AllInstances.MinDoubleBoolean">
            <summary>NumericRangeQuery.Min(Double min, Boolean inclusive)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Range.Fakes.StubDateRangeQuery">
            <summary>Couchbase.Search.Queries.Range.DateRangeQuery의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Range.Fakes.StubDateRangeQuery.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Range.Fakes.StubDateRangeQuery.Export">
            <summary>DateRangeQuery.Export()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Range.Fakes.StubDateRangeQuery.Export(Couchbase.Search.ISearchParams)">
            <summary>DateRangeQuery.Export(ISearchParams searchParams)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Queries.Range.Fakes.StubDateRangeQuery.Export01">
            <summary>DateRangeQuery.Export()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Queries.Range.Fakes.StubDateRangeQuery.ExportISearchParams">
            <summary>DateRangeQuery.Export(ISearchParams searchParams)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Range.Fakes.StubDateRangeQuery.InitializeStub">
            <summary>type StubDateRangeQuery의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Range.Fakes.StubDateRangeQuery.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Range.Fakes.StubDateRangeQuery.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Range.Fakes.StubDateRangeQuery.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Range.Fakes.StubNumericRangeQuery">
            <summary>Couchbase.Search.Queries.Range.NumericRangeQuery의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Range.Fakes.StubNumericRangeQuery.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Range.Fakes.StubNumericRangeQuery.Export">
            <summary>NumericRangeQuery.Export()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Range.Fakes.StubNumericRangeQuery.Export(Couchbase.Search.ISearchParams)">
            <summary>NumericRangeQuery.Export(ISearchParams searchParams)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Queries.Range.Fakes.StubNumericRangeQuery.Export01">
            <summary>NumericRangeQuery.Export()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Queries.Range.Fakes.StubNumericRangeQuery.ExportISearchParams">
            <summary>NumericRangeQuery.Export(ISearchParams searchParams)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Range.Fakes.StubNumericRangeQuery.InitializeStub">
            <summary>type StubNumericRangeQuery의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Range.Fakes.StubNumericRangeQuery.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Range.Fakes.StubNumericRangeQuery.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Range.Fakes.StubNumericRangeQuery.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Simple.Fakes.ShimBooleanFieldQuery">
            <summary>Couchbase.Search.Queries.Simple.BooleanFieldQuery의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimBooleanFieldQuery.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimBooleanFieldQuery.#ctor(Couchbase.Search.Queries.Simple.BooleanFieldQuery)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimBooleanFieldQuery.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimBooleanFieldQuery.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimBooleanFieldQuery.Bind(Couchbase.Search.IFtsQuery)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimBooleanFieldQuery.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimBooleanFieldQuery.ConstructorBoolean">
            <summary>BooleanFieldQuery.BooleanFieldQuery(Boolean fieldMatch)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimBooleanFieldQuery.Export">
            <summary>BooleanFieldQuery.Export()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimBooleanFieldQuery.ExportISearchParams">
            <summary>BooleanFieldQuery.Export(ISearchParams searchParams)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimBooleanFieldQuery.FieldString">
            <summary>BooleanFieldQuery.Field(String field)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Simple.Fakes.ShimBooleanFieldQuery.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimBooleanFieldQuery.AllInstances.Export">
            <summary>BooleanFieldQuery.Export()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimBooleanFieldQuery.AllInstances.ExportISearchParams">
            <summary>BooleanFieldQuery.Export(ISearchParams searchParams)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimBooleanFieldQuery.AllInstances.FieldString">
            <summary>BooleanFieldQuery.Field(String field)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Simple.Fakes.ShimDocIdQuery">
            <summary>Couchbase.Search.Queries.Simple.DocIdQuery의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimDocIdQuery.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimDocIdQuery.#ctor(Couchbase.Search.Queries.Simple.DocIdQuery)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimDocIdQuery.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimDocIdQuery.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimDocIdQuery.Bind(Couchbase.Search.IFtsQuery)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimDocIdQuery.AddStringArray">
            <summary>DocIdQuery.Add(String[] docIds)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimDocIdQuery.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimDocIdQuery.ConstructorStringArray">
            <summary>DocIdQuery.DocIdQuery(String[] docIds)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimDocIdQuery.Export">
            <summary>DocIdQuery.Export()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimDocIdQuery.ExportISearchParams">
            <summary>DocIdQuery.Export(ISearchParams searchParams)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Simple.Fakes.ShimDocIdQuery.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimDocIdQuery.AllInstances.AddStringArray">
            <summary>DocIdQuery.Add(String[] docIds)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimDocIdQuery.AllInstances.Export">
            <summary>DocIdQuery.Export()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimDocIdQuery.AllInstances.ExportISearchParams">
            <summary>DocIdQuery.Export(ISearchParams searchParams)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Simple.Fakes.ShimMatchAllQuery">
            <summary>Couchbase.Search.Queries.Simple.MatchAllQuery의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimMatchAllQuery.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimMatchAllQuery.#ctor(Couchbase.Search.Queries.Simple.MatchAllQuery)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimMatchAllQuery.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimMatchAllQuery.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimMatchAllQuery.Bind(Couchbase.Search.IFtsQuery)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimMatchAllQuery.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimMatchAllQuery.Constructor">
            <summary>MatchAllQuery.MatchAllQuery()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimMatchAllQuery.Export">
            <summary>MatchAllQuery.Export()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimMatchAllQuery.ExportISearchParams">
            <summary>MatchAllQuery.Export(ISearchParams searchParams)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Simple.Fakes.ShimMatchAllQuery.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimMatchAllQuery.AllInstances.Export">
            <summary>MatchAllQuery.Export()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimMatchAllQuery.AllInstances.ExportISearchParams">
            <summary>MatchAllQuery.Export(ISearchParams searchParams)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Simple.Fakes.ShimMatchNoneQuery">
            <summary>Couchbase.Search.Queries.Simple.MatchNoneQuery의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimMatchNoneQuery.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimMatchNoneQuery.#ctor(Couchbase.Search.Queries.Simple.MatchNoneQuery)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimMatchNoneQuery.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimMatchNoneQuery.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimMatchNoneQuery.Bind(Couchbase.Search.IFtsQuery)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimMatchNoneQuery.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimMatchNoneQuery.Constructor">
            <summary>MatchNoneQuery.MatchNoneQuery()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimMatchNoneQuery.Export">
            <summary>MatchNoneQuery.Export()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimMatchNoneQuery.ExportISearchParams">
            <summary>MatchNoneQuery.Export(ISearchParams searchParams)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Simple.Fakes.ShimMatchNoneQuery.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimMatchNoneQuery.AllInstances.Export">
            <summary>MatchNoneQuery.Export()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimMatchNoneQuery.AllInstances.ExportISearchParams">
            <summary>MatchNoneQuery.Export(ISearchParams searchParams)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Simple.Fakes.ShimMatchPhraseQuery">
            <summary>Couchbase.Search.Queries.Simple.MatchPhraseQuery의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimMatchPhraseQuery.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimMatchPhraseQuery.#ctor(Couchbase.Search.Queries.Simple.MatchPhraseQuery)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimMatchPhraseQuery.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimMatchPhraseQuery.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimMatchPhraseQuery.Bind(Couchbase.Search.IFtsQuery)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimMatchPhraseQuery.AnalyzerString">
            <summary>MatchPhraseQuery.Analyzer(String analyzer)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimMatchPhraseQuery.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimMatchPhraseQuery.BoostDouble">
            <summary>MatchPhraseQuery.Boost(Double boost)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimMatchPhraseQuery.ConstructorString">
            <summary>MatchPhraseQuery.MatchPhraseQuery(String matchPhrase)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimMatchPhraseQuery.Export">
            <summary>MatchPhraseQuery.Export()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimMatchPhraseQuery.ExportISearchParams">
            <summary>MatchPhraseQuery.Export(ISearchParams searchParams)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimMatchPhraseQuery.FieldString">
            <summary>MatchPhraseQuery.Field(String field)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Simple.Fakes.ShimMatchPhraseQuery.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimMatchPhraseQuery.AllInstances.AnalyzerString">
            <summary>MatchPhraseQuery.Analyzer(String analyzer)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimMatchPhraseQuery.AllInstances.BoostDouble">
            <summary>MatchPhraseQuery.Boost(Double boost)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimMatchPhraseQuery.AllInstances.Export">
            <summary>MatchPhraseQuery.Export()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimMatchPhraseQuery.AllInstances.ExportISearchParams">
            <summary>MatchPhraseQuery.Export(ISearchParams searchParams)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimMatchPhraseQuery.AllInstances.FieldString">
            <summary>MatchPhraseQuery.Field(String field)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Simple.Fakes.ShimMatchQuery">
            <summary>Couchbase.Search.Queries.Simple.MatchQuery의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimMatchQuery.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimMatchQuery.#ctor(Couchbase.Search.Queries.Simple.MatchQuery)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimMatchQuery.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimMatchQuery.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimMatchQuery.Bind(Couchbase.Search.IFtsQuery)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimMatchQuery.AnalyzerString">
            <summary>MatchQuery.Analyzer(String analyzer)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimMatchQuery.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimMatchQuery.BoostDouble">
            <summary>MatchQuery.Boost(Double boost)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimMatchQuery.ConstructorString">
            <summary>MatchQuery.MatchQuery(String match)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimMatchQuery.Export">
            <summary>MatchQuery.Export()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimMatchQuery.ExportISearchParams">
            <summary>MatchQuery.Export(ISearchParams searchParams)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimMatchQuery.FieldString">
            <summary>MatchQuery.Field(String field)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimMatchQuery.FuzzinessInt32">
            <summary>MatchQuery.Fuzziness(Int32 fuzziness)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimMatchQuery.PrefixLengthInt32">
            <summary>MatchQuery.PrefixLength(Int32 prefixLength)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Simple.Fakes.ShimMatchQuery.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimMatchQuery.AllInstances.AnalyzerString">
            <summary>MatchQuery.Analyzer(String analyzer)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimMatchQuery.AllInstances.BoostDouble">
            <summary>MatchQuery.Boost(Double boost)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimMatchQuery.AllInstances.Export">
            <summary>MatchQuery.Export()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimMatchQuery.AllInstances.ExportISearchParams">
            <summary>MatchQuery.Export(ISearchParams searchParams)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimMatchQuery.AllInstances.FieldString">
            <summary>MatchQuery.Field(String field)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimMatchQuery.AllInstances.FuzzinessInt32">
            <summary>MatchQuery.Fuzziness(Int32 fuzziness)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimMatchQuery.AllInstances.PrefixLengthInt32">
            <summary>MatchQuery.PrefixLength(Int32 prefixLength)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Simple.Fakes.ShimPhraseQuery">
            <summary>Couchbase.Search.Queries.Simple.PhraseQuery의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimPhraseQuery.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimPhraseQuery.#ctor(Couchbase.Search.Queries.Simple.PhraseQuery)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimPhraseQuery.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimPhraseQuery.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimPhraseQuery.Bind(Couchbase.Search.IFtsQuery)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimPhraseQuery.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimPhraseQuery.BoostDouble">
            <summary>PhraseQuery.Boost(Double boost)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimPhraseQuery.ConstructorStringArray">
            <summary>PhraseQuery.PhraseQuery(String[] terms)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimPhraseQuery.Export">
            <summary>PhraseQuery.Export()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimPhraseQuery.ExportISearchParams">
            <summary>PhraseQuery.Export(ISearchParams searchParams)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimPhraseQuery.FieldString">
            <summary>PhraseQuery.Field(String field)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Simple.Fakes.ShimPhraseQuery.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimPhraseQuery.AllInstances.BoostDouble">
            <summary>PhraseQuery.Boost(Double boost)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimPhraseQuery.AllInstances.Export">
            <summary>PhraseQuery.Export()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimPhraseQuery.AllInstances.ExportISearchParams">
            <summary>PhraseQuery.Export(ISearchParams searchParams)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimPhraseQuery.AllInstances.FieldString">
            <summary>PhraseQuery.Field(String field)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Simple.Fakes.ShimPrefixQuery">
            <summary>Couchbase.Search.Queries.Simple.PrefixQuery의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimPrefixQuery.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimPrefixQuery.#ctor(Couchbase.Search.Queries.Simple.PrefixQuery)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimPrefixQuery.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimPrefixQuery.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimPrefixQuery.Bind(Couchbase.Search.IFtsQuery)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimPrefixQuery.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimPrefixQuery.BoostDouble">
            <summary>PrefixQuery.Boost(Double boost)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimPrefixQuery.ConstructorString">
            <summary>PrefixQuery.PrefixQuery(String prefix)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimPrefixQuery.Export">
            <summary>PrefixQuery.Export()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimPrefixQuery.ExportISearchParams">
            <summary>PrefixQuery.Export(ISearchParams searchParams)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimPrefixQuery.FieldString">
            <summary>PrefixQuery.Field(String field)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Simple.Fakes.ShimPrefixQuery.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimPrefixQuery.AllInstances.BoostDouble">
            <summary>PrefixQuery.Boost(Double boost)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimPrefixQuery.AllInstances.Export">
            <summary>PrefixQuery.Export()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimPrefixQuery.AllInstances.ExportISearchParams">
            <summary>PrefixQuery.Export(ISearchParams searchParams)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimPrefixQuery.AllInstances.FieldString">
            <summary>PrefixQuery.Field(String field)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Simple.Fakes.ShimRegexpQuery">
            <summary>Couchbase.Search.Queries.Simple.RegexpQuery의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimRegexpQuery.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimRegexpQuery.#ctor(Couchbase.Search.Queries.Simple.RegexpQuery)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimRegexpQuery.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimRegexpQuery.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimRegexpQuery.Bind(Couchbase.Search.IFtsQuery)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimRegexpQuery.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimRegexpQuery.BoostDouble">
            <summary>RegexpQuery.Boost(Double boost)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimRegexpQuery.ConstructorString">
            <summary>RegexpQuery.RegexpQuery(String regex)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimRegexpQuery.Export">
            <summary>RegexpQuery.Export()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimRegexpQuery.ExportISearchParams">
            <summary>RegexpQuery.Export(ISearchParams searchParams)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimRegexpQuery.FieldString">
            <summary>RegexpQuery.Field(String field)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Simple.Fakes.ShimRegexpQuery.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimRegexpQuery.AllInstances.BoostDouble">
            <summary>RegexpQuery.Boost(Double boost)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimRegexpQuery.AllInstances.Export">
            <summary>RegexpQuery.Export()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimRegexpQuery.AllInstances.ExportISearchParams">
            <summary>RegexpQuery.Export(ISearchParams searchParams)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimRegexpQuery.AllInstances.FieldString">
            <summary>RegexpQuery.Field(String field)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Simple.Fakes.ShimStringQuery">
            <summary>Couchbase.Search.Queries.Simple.StringQuery의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimStringQuery.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimStringQuery.#ctor(Couchbase.Search.Queries.Simple.StringQuery)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimStringQuery.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimStringQuery.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimStringQuery.Bind(Couchbase.Search.IFtsQuery)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimStringQuery.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimStringQuery.BoostDouble">
            <summary>StringQuery.Boost(Double boost)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimStringQuery.ConstructorString">
            <summary>StringQuery.StringQuery(String query)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimStringQuery.Export">
            <summary>StringQuery.Export()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimStringQuery.ExportISearchParams">
            <summary>StringQuery.Export(ISearchParams searchParams)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Simple.Fakes.ShimStringQuery.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimStringQuery.AllInstances.BoostDouble">
            <summary>StringQuery.Boost(Double boost)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimStringQuery.AllInstances.Export">
            <summary>StringQuery.Export()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimStringQuery.AllInstances.ExportISearchParams">
            <summary>StringQuery.Export(ISearchParams searchParams)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Simple.Fakes.ShimTermQuery">
            <summary>Couchbase.Search.Queries.Simple.TermQuery의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimTermQuery.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimTermQuery.#ctor(Couchbase.Search.Queries.Simple.TermQuery)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimTermQuery.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimTermQuery.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimTermQuery.Bind(Couchbase.Search.IFtsQuery)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimTermQuery.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimTermQuery.BoostDouble">
            <summary>TermQuery.Boost(Double boost)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimTermQuery.ConstructorString">
            <summary>TermQuery.TermQuery(String term)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimTermQuery.Export">
            <summary>TermQuery.Export()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimTermQuery.ExportISearchParams">
            <summary>TermQuery.Export(ISearchParams searchParams)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimTermQuery.FieldString">
            <summary>TermQuery.Field(String field)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimTermQuery.FuzzinessInt32">
            <summary>TermQuery.Fuzziness(Int32 fuzziness)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimTermQuery.PrefixLengthInt32">
            <summary>TermQuery.PrefixLength(Int32 prefixLength)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Simple.Fakes.ShimTermQuery.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimTermQuery.AllInstances.BoostDouble">
            <summary>TermQuery.Boost(Double boost)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimTermQuery.AllInstances.Export">
            <summary>TermQuery.Export()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimTermQuery.AllInstances.ExportISearchParams">
            <summary>TermQuery.Export(ISearchParams searchParams)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimTermQuery.AllInstances.FieldString">
            <summary>TermQuery.Field(String field)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimTermQuery.AllInstances.FuzzinessInt32">
            <summary>TermQuery.Fuzziness(Int32 fuzziness)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimTermQuery.AllInstances.PrefixLengthInt32">
            <summary>TermQuery.PrefixLength(Int32 prefixLength)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Simple.Fakes.ShimWildcardQuery">
            <summary>Couchbase.Search.Queries.Simple.WildcardQuery의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimWildcardQuery.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimWildcardQuery.#ctor(Couchbase.Search.Queries.Simple.WildcardQuery)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimWildcardQuery.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimWildcardQuery.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.ShimWildcardQuery.Bind(Couchbase.Search.IFtsQuery)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimWildcardQuery.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimWildcardQuery.ConstructorString">
            <summary>WildcardQuery.WildcardQuery(String wildcard)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimWildcardQuery.Export">
            <summary>WildcardQuery.Export()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimWildcardQuery.ExportISearchParams">
            <summary>WildcardQuery.Export(ISearchParams searchParams)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimWildcardQuery.FieldString">
            <summary>WildcardQuery.Field(String field)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Simple.Fakes.ShimWildcardQuery.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimWildcardQuery.AllInstances.Export">
            <summary>WildcardQuery.Export()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimWildcardQuery.AllInstances.ExportISearchParams">
            <summary>WildcardQuery.Export(ISearchParams searchParams)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.ShimWildcardQuery.AllInstances.FieldString">
            <summary>WildcardQuery.Field(String field)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Simple.Fakes.StubBooleanFieldQuery">
            <summary>Couchbase.Search.Queries.Simple.BooleanFieldQuery의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.StubBooleanFieldQuery.#ctor(System.Boolean)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.StubBooleanFieldQuery.Export">
            <summary>BooleanFieldQuery.Export()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.StubBooleanFieldQuery.Export(Couchbase.Search.ISearchParams)">
            <summary>BooleanFieldQuery.Export(ISearchParams searchParams)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Queries.Simple.Fakes.StubBooleanFieldQuery.Export01">
            <summary>BooleanFieldQuery.Export()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Queries.Simple.Fakes.StubBooleanFieldQuery.ExportISearchParams">
            <summary>BooleanFieldQuery.Export(ISearchParams searchParams)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.StubBooleanFieldQuery.InitializeStub">
            <summary>type StubBooleanFieldQuery의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.StubBooleanFieldQuery.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.StubBooleanFieldQuery.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.StubBooleanFieldQuery.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Simple.Fakes.StubDocIdQuery">
            <summary>Couchbase.Search.Queries.Simple.DocIdQuery의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.StubDocIdQuery.#ctor(System.String[])">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.StubDocIdQuery.Export">
            <summary>DocIdQuery.Export()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.StubDocIdQuery.Export(Couchbase.Search.ISearchParams)">
            <summary>DocIdQuery.Export(ISearchParams searchParams)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Queries.Simple.Fakes.StubDocIdQuery.Export01">
            <summary>DocIdQuery.Export()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Queries.Simple.Fakes.StubDocIdQuery.ExportISearchParams">
            <summary>DocIdQuery.Export(ISearchParams searchParams)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.StubDocIdQuery.InitializeStub">
            <summary>type StubDocIdQuery의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.StubDocIdQuery.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.StubDocIdQuery.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.StubDocIdQuery.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Simple.Fakes.StubMatchAllQuery">
            <summary>Couchbase.Search.Queries.Simple.MatchAllQuery의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.StubMatchAllQuery.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.StubMatchAllQuery.Export">
            <summary>MatchAllQuery.Export()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.StubMatchAllQuery.Export(Couchbase.Search.ISearchParams)">
            <summary>MatchAllQuery.Export(ISearchParams searchParams)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Queries.Simple.Fakes.StubMatchAllQuery.Export01">
            <summary>MatchAllQuery.Export()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Queries.Simple.Fakes.StubMatchAllQuery.ExportISearchParams">
            <summary>MatchAllQuery.Export(ISearchParams searchParams)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.StubMatchAllQuery.InitializeStub">
            <summary>type StubMatchAllQuery의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.StubMatchAllQuery.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.StubMatchAllQuery.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.StubMatchAllQuery.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Simple.Fakes.StubMatchNoneQuery">
            <summary>Couchbase.Search.Queries.Simple.MatchNoneQuery의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.StubMatchNoneQuery.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.StubMatchNoneQuery.Export">
            <summary>MatchNoneQuery.Export()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.StubMatchNoneQuery.Export(Couchbase.Search.ISearchParams)">
            <summary>MatchNoneQuery.Export(ISearchParams searchParams)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Queries.Simple.Fakes.StubMatchNoneQuery.Export01">
            <summary>MatchNoneQuery.Export()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Queries.Simple.Fakes.StubMatchNoneQuery.ExportISearchParams">
            <summary>MatchNoneQuery.Export(ISearchParams searchParams)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.StubMatchNoneQuery.InitializeStub">
            <summary>type StubMatchNoneQuery의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.StubMatchNoneQuery.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.StubMatchNoneQuery.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.StubMatchNoneQuery.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Simple.Fakes.StubPrefixQuery">
            <summary>Couchbase.Search.Queries.Simple.PrefixQuery의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.StubPrefixQuery.#ctor(System.String)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.StubPrefixQuery.Export">
            <summary>PrefixQuery.Export()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.StubPrefixQuery.Export(Couchbase.Search.ISearchParams)">
            <summary>PrefixQuery.Export(ISearchParams searchParams)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Queries.Simple.Fakes.StubPrefixQuery.Export01">
            <summary>PrefixQuery.Export()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Queries.Simple.Fakes.StubPrefixQuery.ExportISearchParams">
            <summary>PrefixQuery.Export(ISearchParams searchParams)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.StubPrefixQuery.InitializeStub">
            <summary>type StubPrefixQuery의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.StubPrefixQuery.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.StubPrefixQuery.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.StubPrefixQuery.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Simple.Fakes.StubRegexpQuery">
            <summary>Couchbase.Search.Queries.Simple.RegexpQuery의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.StubRegexpQuery.#ctor(System.String)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.StubRegexpQuery.Export">
            <summary>RegexpQuery.Export()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.StubRegexpQuery.Export(Couchbase.Search.ISearchParams)">
            <summary>RegexpQuery.Export(ISearchParams searchParams)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Queries.Simple.Fakes.StubRegexpQuery.Export01">
            <summary>RegexpQuery.Export()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Queries.Simple.Fakes.StubRegexpQuery.ExportISearchParams">
            <summary>RegexpQuery.Export(ISearchParams searchParams)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.StubRegexpQuery.InitializeStub">
            <summary>type StubRegexpQuery의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.StubRegexpQuery.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.StubRegexpQuery.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.StubRegexpQuery.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Simple.Fakes.StubStringQuery">
            <summary>Couchbase.Search.Queries.Simple.StringQuery의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.StubStringQuery.#ctor(System.String)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.StubStringQuery.Export">
            <summary>StringQuery.Export()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.StubStringQuery.Export(Couchbase.Search.ISearchParams)">
            <summary>StringQuery.Export(ISearchParams searchParams)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Queries.Simple.Fakes.StubStringQuery.Export01">
            <summary>StringQuery.Export()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Queries.Simple.Fakes.StubStringQuery.ExportISearchParams">
            <summary>StringQuery.Export(ISearchParams searchParams)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.StubStringQuery.InitializeStub">
            <summary>type StubStringQuery의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.StubStringQuery.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.StubStringQuery.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.StubStringQuery.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Search.Queries.Simple.Fakes.StubWildcardQuery">
            <summary>Couchbase.Search.Queries.Simple.WildcardQuery의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.StubWildcardQuery.#ctor(System.String)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.StubWildcardQuery.Export">
            <summary>WildcardQuery.Export()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.StubWildcardQuery.Export(Couchbase.Search.ISearchParams)">
            <summary>WildcardQuery.Export(ISearchParams searchParams)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Queries.Simple.Fakes.StubWildcardQuery.Export01">
            <summary>WildcardQuery.Export()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Search.Queries.Simple.Fakes.StubWildcardQuery.ExportISearchParams">
            <summary>WildcardQuery.Export(ISearchParams searchParams)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Search.Queries.Simple.Fakes.StubWildcardQuery.InitializeStub">
            <summary>type StubWildcardQuery의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.StubWildcardQuery.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.StubWildcardQuery.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Search.Queries.Simple.Fakes.StubWildcardQuery.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Utils.Fakes.ShimArrayExtensions">
            <summary>Couchbase.Utils.ArrayExtensions의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Utils.Fakes.ShimArrayExtensions.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Utils.Fakes.ShimArrayExtensions.AreEqualOf1ArrayArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Array,System.Array,System.Boolean})">
            <summary>ArrayExtensions.AreEqual(Array array, Array other)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Utils.Fakes.ShimArrayExtensions.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Utils.Fakes.ShimArrayExtensions.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Utils.Fakes.ShimArrayExtensions.CompareItemsOf1ArrayArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Array,System.Array,System.Boolean})">
            <summary>ArrayExtensions.CompareItems(Array array, Array other)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Utils.Fakes.ShimArrayExtensions.GetRandomOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},``0})">
            <summary>ArrayExtensions.GetRandom(IEnumerable`1&lt;!!0&gt; list)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Utils.Fakes.ShimArrayExtensions.GetRandomOf1ListOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{``0},``0})">
            <summary>ArrayExtensions.GetRandom(List`1&lt;!!0&gt; list)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Utils.Fakes.ShimArrayExtensions.ShuffleOf1ListOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``0}})">
            <summary>ArrayExtensions.Shuffle(List`1&lt;!!0&gt; list)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Utils.Fakes.ShimArrayExtensions.ToDelimitedN1QLStringOf1M0ArrayChar``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.Char,System.String})">
            <summary>ArrayExtensions.ToDelimitedN1QLString(!!0[] theArray, Char delimiter)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Utils.Fakes.ShimArrayExtensions.AreEqualInt32ArrayArrayInt32ArrayArray">
            <summary>ArrayExtensions.AreEqual(Int32[][] array, Int32[][] other)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Utils.Fakes.ShimArrayExtensions.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Utils.Fakes.ShimArrayExtensions.GetCombinedHashcodeArray">
            <summary>ArrayExtensions.GetCombinedHashcode(Array array)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Utils.Fakes.ShimArrayExtensions.IsJsonByteArrayInt32Int32">
            <summary>ArrayExtensions.IsJson(Byte[] theArray, Int32 startIndex, Int32 endIndex)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Utils.Fakes.ShimArrayExtensions.ShuffleArray">
            <summary>ArrayExtensions.Shuffle(Array array)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Utils.Fakes.ShimArrayExtensions.StaticConstructor">
            <summary>ArrayExtensions.ArrayExtensions()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Utils.Fakes.ShimArrayExtensions.StripBracketsByteArray">
            <summary>ArrayExtensions.StripBrackets(Byte[] theArray)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Utils.Fakes.ShimArrayExtensions.ToJsonIEnumerable">
            <summary>ArrayExtensions.ToJson(IEnumerable array)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Utils.Fakes.ShimArrayExtensions.ToJsonIEnumerableBoolean">
            <summary>ArrayExtensions.ToJson(IEnumerable array, Boolean stripBrackets)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Utils.Fakes.ShimArraySegmentExtensions">
            <summary>Couchbase.Utils.ArraySegmentExtensions의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Utils.Fakes.ShimArraySegmentExtensions.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Utils.Fakes.ShimArraySegmentExtensions.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Utils.Fakes.ShimArraySegmentExtensions.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Utils.Fakes.ShimArraySegmentExtensions.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Utils.Fakes.ShimArraySegmentExtensions.ConvertAndCopyArraySegmentOfByteUInt32Int32Int32">
            <summary>ArraySegmentExtensions.ConvertAndCopy(ArraySegment`1&lt;Byte&gt; arraySegment, UInt32 value, Int32 offset, Int32 count)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Utils.Fakes.ShimArraySegmentExtensions.ConvertAndCopyArraySegmentOfByteUInt64Int32Int32">
            <summary>ArraySegmentExtensions.ConvertAndCopy(ArraySegment`1&lt;Byte&gt; arraySegment, UInt64 value, Int32 offset, Int32 count)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Utils.Fakes.ShimExceptionUtil">
            <summary>Couchbase.Utils.ExceptionUtil의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Utils.Fakes.ShimExceptionUtil.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Utils.Fakes.ShimExceptionUtil.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Utils.Fakes.ShimExceptionUtil.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Utils.Fakes.ShimExceptionUtil.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Utils.Fakes.ShimExceptionUtil.GetMessageStringObjectArray">
            <summary>ExceptionUtil.GetMessage(String msg, Object[] args)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Utils.Fakes.ShimExceptionUtil.GetNodeUnavailableMsgIPEndPointUInt32">
            <summary>ExceptionUtil.GetNodeUnavailableMsg(IPEndPoint ipEndPoint, UInt32 interval)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Utils.Fakes.ShimExceptionUtil.StaticConstructor">
            <summary>ExceptionUtil.ExceptionUtil()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Utils.Fakes.ShimExceptionUtil.WithParamsStringObjectArray">
            <summary>ExceptionUtil.WithParams(String msg, Object[] args)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Utils.Fakes.ShimSortedDictionaryExtensions">
            <summary>Couchbase.Utils.SortedDictionaryExtensions의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Utils.Fakes.ShimSortedDictionaryExtensions.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Utils.Fakes.ShimSortedDictionaryExtensions.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Utils.Fakes.ShimSortedDictionaryExtensions.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Utils.Fakes.ShimSortedDictionaryExtensions.FindCeilingKeyOf2SortedDictionaryOfM0M1M0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.SortedDictionary{``0,``1},``0,System.Int64})">
            <summary>SortedDictionaryExtensions.FindCeilingKey(SortedDictionary`2&lt;!!0,!!1&gt; dictionary, !!0 key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Utils.Fakes.ShimSortedDictionaryExtensions.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="T:Couchbase.Utils.Fakes.ShimTaskExtensions">
            <summary>Couchbase.Utils.TaskExtensions의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Utils.Fakes.ShimTaskExtensions.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Utils.Fakes.ShimTaskExtensions.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Utils.Fakes.ShimTaskExtensions.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Utils.Fakes.ShimTaskExtensions.ContinueOnAnyContextOf1TaskOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Threading.Tasks.Task{``0},System.Runtime.CompilerServices.ConfiguredTaskAwaitable{``0}})">
            <summary>TaskExtensions.ContinueOnAnyContext(Task`1&lt;!!0&gt; task)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Utils.Fakes.ShimTaskExtensions.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Utils.Fakes.ShimTaskExtensions.ContinueOnAnyContextTask">
            <summary>TaskExtensions.ContinueOnAnyContext(Task task)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Utils.Fakes.ShimTimeSpanExtensions">
            <summary>Couchbase.Utils.TimeSpanExtensions의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Utils.Fakes.ShimTimeSpanExtensions.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Utils.Fakes.ShimTimeSpanExtensions.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Utils.Fakes.ShimTimeSpanExtensions.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Utils.Fakes.ShimTimeSpanExtensions.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Utils.Fakes.ShimTimeSpanExtensions.ToTtlTimeSpan">
            <summary>TimeSpanExtensions.ToTtl(TimeSpan duration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Utils.Fakes.ShimTimeSpanExtensions.ToTtlUInt32">
            <summary>TimeSpanExtensions.ToTtl(UInt32 duration)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Utils.Fakes.ShimUnsupportedAddressFamilyException">
            <summary>Couchbase.Utils.UnsupportedAddressFamilyException의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Utils.Fakes.ShimUnsupportedAddressFamilyException.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Utils.Fakes.ShimUnsupportedAddressFamilyException.#ctor(Couchbase.Utils.UnsupportedAddressFamilyException)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Utils.Fakes.ShimUnsupportedAddressFamilyException.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Utils.Fakes.ShimUnsupportedAddressFamilyException.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Utils.Fakes.ShimUnsupportedAddressFamilyException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Utils.Fakes.ShimUnsupportedAddressFamilyException.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Utils.Fakes.ShimUnsupportedAddressFamilyException.Constructor">
            <summary>UnsupportedAddressFamilyException.UnsupportedAddressFamilyException()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Utils.Fakes.ShimUnsupportedAddressFamilyException.ConstructorSerializationInfoStreamingContext">
            <summary>UnsupportedAddressFamilyException.UnsupportedAddressFamilyException(SerializationInfo info, StreamingContext context)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Utils.Fakes.ShimUnsupportedAddressFamilyException.ConstructorString">
            <summary>UnsupportedAddressFamilyException.UnsupportedAddressFamilyException(String message)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Utils.Fakes.ShimUnsupportedAddressFamilyException.ConstructorStringException">
            <summary>UnsupportedAddressFamilyException.UnsupportedAddressFamilyException(String message, Exception innerException)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Utils.Fakes.ShimUnsupportedAddressFamilyException.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="T:Couchbase.Utils.Fakes.ShimUriExtensions">
            <summary>Couchbase.Utils.UriExtensions의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Utils.Fakes.ShimUriExtensions.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Utils.Fakes.ShimUriExtensions.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Utils.Fakes.ShimUriExtensions.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Utils.Fakes.ShimUriExtensions.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Utils.Fakes.ShimUriExtensions.GetEndPointString">
            <summary>UriExtensions.GetEndPoint(String server)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Utils.Fakes.ShimUriExtensions.GetIPEndPointUriInt32">
            <summary>UriExtensions.GetIPEndPoint(Uri uri, Int32 port)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Utils.Fakes.ShimUriExtensions.GetIpAddressUriBoolean">
            <summary>UriExtensions.GetIpAddress(Uri uri, Boolean useInterNetworkV6Addresses)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Utils.Fakes.ShimUriExtensions.StaticConstructor">
            <summary>UriExtensions.UriExtensions()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Utils.Fakes.StubUnsupportedAddressFamilyException">
            <summary>Couchbase.Utils.UnsupportedAddressFamilyException의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Utils.Fakes.StubUnsupportedAddressFamilyException.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Utils.Fakes.StubUnsupportedAddressFamilyException.#ctor(System.String)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Utils.Fakes.StubUnsupportedAddressFamilyException.#ctor(System.String,System.Exception)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Utils.Fakes.StubUnsupportedAddressFamilyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Utils.Fakes.StubUnsupportedAddressFamilyException.AttachBackingFieldToHelpLink">
            <summary>대리자를 연결하여 StubUnsupportedAddressFamilyException.HelpLink을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Utils.Fakes.StubUnsupportedAddressFamilyException.AttachBackingFieldToSource">
            <summary>대리자를 연결하여 StubUnsupportedAddressFamilyException.Source을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="F:Couchbase.Utils.Fakes.StubUnsupportedAddressFamilyException.DataGet">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Utils.Fakes.StubUnsupportedAddressFamilyException.GetBaseException">
            <summary>Exception.GetBaseException()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Utils.Fakes.StubUnsupportedAddressFamilyException.GetBaseException01">
            <summary>Exception.GetBaseException()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Utils.Fakes.StubUnsupportedAddressFamilyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Exception.GetObjectData(SerializationInfo info, StreamingContext context)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Utils.Fakes.StubUnsupportedAddressFamilyException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Exception.GetObjectData(SerializationInfo info, StreamingContext context)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Utils.Fakes.StubUnsupportedAddressFamilyException.HelpLinkGet">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Utils.Fakes.StubUnsupportedAddressFamilyException.HelpLinkSetString">
            <summary>Exception.set_HelpLink(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Utils.Fakes.StubUnsupportedAddressFamilyException.InitializeStub">
            <summary>type StubUnsupportedAddressFamilyException의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.Utils.Fakes.StubUnsupportedAddressFamilyException.MessageGet">
            <summary>Exception.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Utils.Fakes.StubUnsupportedAddressFamilyException.SourceGet">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Utils.Fakes.StubUnsupportedAddressFamilyException.SourceSetString">
            <summary>Exception.set_Source(String value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Utils.Fakes.StubUnsupportedAddressFamilyException.StackTraceGet">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Utils.Fakes.StubUnsupportedAddressFamilyException.ToString">
            <summary>Exception.ToString()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Utils.Fakes.StubUnsupportedAddressFamilyException.ToString01">
            <summary>Exception.ToString()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Utils.Fakes.StubUnsupportedAddressFamilyException.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Utils.Fakes.StubUnsupportedAddressFamilyException.Data">
            <summary>Exception.get_Data()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Utils.Fakes.StubUnsupportedAddressFamilyException.HelpLink">
            <summary>Exception.get_HelpLink()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Utils.Fakes.StubUnsupportedAddressFamilyException.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Utils.Fakes.StubUnsupportedAddressFamilyException.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Utils.Fakes.StubUnsupportedAddressFamilyException.Message">
            <summary>Exception.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Utils.Fakes.StubUnsupportedAddressFamilyException.Source">
            <summary>Exception.get_Source()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Utils.Fakes.StubUnsupportedAddressFamilyException.StackTrace">
            <summary>Exception.get_StackTrace()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Views.Fakes.ShimErrorObj">
            <summary>Couchbase.Views.ErrorObj의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.ShimErrorObj.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.ShimErrorObj.#ctor(Couchbase.Views.ErrorObj)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.ShimErrorObj.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.ShimErrorObj.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimErrorObj.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimErrorObj.Constructor">
            <summary>ErrorObj.ErrorObj()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimErrorObj.ErrorGet">
            <summary>ErrorObj.get_Error()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimErrorObj.ErrorSetString">
            <summary>ErrorObj.set_Error(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Views.Fakes.ShimErrorObj.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimErrorObj.AllInstances.ErrorGet">
            <summary>ErrorObj.get_Error()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimErrorObj.AllInstances.ErrorSetString">
            <summary>ErrorObj.set_Error(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Views.Fakes.ShimSpatialViewQuery">
            <summary>Couchbase.Views.SpatialViewQuery의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.ShimSpatialViewQuery.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.ShimSpatialViewQuery.#ctor(Couchbase.Views.SpatialViewQuery)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.ShimSpatialViewQuery.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.ShimSpatialViewQuery.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.ShimSpatialViewQuery.Bind(Couchbase.Views.ISpatialViewQuery)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.ShimSpatialViewQuery.Bind(Couchbase.Views.IViewQueryable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.BucketNameGet">
            <summary>SpatialViewQuery.get_BucketName()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.BucketNameSetString">
            <summary>SpatialViewQuery.set_BucketName(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.BucketString">
            <summary>SpatialViewQuery.Bucket(String name)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.ConnectionTimeoutInt32">
            <summary>SpatialViewQuery.ConnectionTimeout(Int32 timeout)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.Constructor">
            <summary>SpatialViewQuery.SpatialViewQuery()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.ConstructorUri">
            <summary>SpatialViewQuery.SpatialViewQuery(Uri baseUri)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.CouchbaseViewsIViewQueryableBaseUriUri">
            <summary>SpatialViewQuery.Couchbase.Views.IViewQueryable.BaseUri(Uri uri)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.DesignDocString">
            <summary>SpatialViewQuery.DesignDoc(String name)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.DevelopmentBoolean">
            <summary>SpatialViewQuery.Development(Boolean development)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.EndRangeListOfNullableOfDouble">
            <summary>SpatialViewQuery.EndRange(List`1&lt;Nullable`1&lt;Double&gt;&gt; endRange)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.EndRangeNullableOfDoubleArray">
            <summary>SpatialViewQuery.EndRange(Nullable`1&lt;Double&gt;[] endRange)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.FromStringString">
            <summary>SpatialViewQuery.From(String designDoc, String view)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.GetQueryParams">
            <summary>SpatialViewQuery.GetQueryParams()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.GetRelativeUri">
            <summary>SpatialViewQuery.GetRelativeUri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.HostGet">
            <summary>SpatialViewQuery.get_Host()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.HostSetString">
            <summary>SpatialViewQuery.set_Host(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.LimitInt32">
            <summary>SpatialViewQuery.Limit(Int32 limit)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.PortGet">
            <summary>SpatialViewQuery.get_Port()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.PortSetUInt32">
            <summary>SpatialViewQuery.set_Port(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.RangeListOfNullableOfDoubleListOfNullableOfDouble">
            <summary>SpatialViewQuery.Range(List`1&lt;Nullable`1&lt;Double&gt;&gt; startRange, List`1&lt;Nullable`1&lt;Double&gt;&gt; endRange)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.RawUri">
            <summary>SpatialViewQuery.RawUri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.RetryAttemptsGet">
            <summary>SpatialViewQuery.get_RetryAttempts()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.RetryAttemptsSetInt32">
            <summary>SpatialViewQuery.set_RetryAttempts(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.SkipInt32">
            <summary>SpatialViewQuery.Skip(Int32 count)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.SslPortGet">
            <summary>SpatialViewQuery.get_SslPort()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.SslPortSetUInt32">
            <summary>SpatialViewQuery.set_SslPort(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.StaleStaleState">
            <summary>SpatialViewQuery.Stale(StaleState staleState)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.StartRangeListOfNullableOfDouble">
            <summary>SpatialViewQuery.StartRange(List`1&lt;Nullable`1&lt;Double&gt;&gt; startRange)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.StartRangeNullableOfDoubleArray">
            <summary>SpatialViewQuery.StartRange(Nullable`1&lt;Double&gt;[] startRange)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.UseSslGet">
            <summary>SpatialViewQuery.get_UseSsl()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.UseSslSetBoolean">
            <summary>SpatialViewQuery.set_UseSsl(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.ViewString">
            <summary>SpatialViewQuery.View(String name)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Views.Fakes.ShimSpatialViewQuery.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.AllInstances.BucketNameGet">
            <summary>SpatialViewQuery.get_BucketName()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.AllInstances.BucketNameSetString">
            <summary>SpatialViewQuery.set_BucketName(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.AllInstances.BucketString">
            <summary>SpatialViewQuery.Bucket(String name)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.AllInstances.ConnectionTimeoutInt32">
            <summary>SpatialViewQuery.ConnectionTimeout(Int32 timeout)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.AllInstances.CouchbaseViewsIViewQueryableBaseUriUri">
            <summary>SpatialViewQuery.Couchbase.Views.IViewQueryable.BaseUri(Uri uri)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.AllInstances.DesignDocString">
            <summary>SpatialViewQuery.DesignDoc(String name)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.AllInstances.DevelopmentBoolean">
            <summary>SpatialViewQuery.Development(Boolean development)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.AllInstances.EndRangeListOfNullableOfDouble">
            <summary>SpatialViewQuery.EndRange(List`1&lt;Nullable`1&lt;Double&gt;&gt; endRange)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.AllInstances.EndRangeNullableOfDoubleArray">
            <summary>SpatialViewQuery.EndRange(Nullable`1&lt;Double&gt;[] endRange)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.AllInstances.FromStringString">
            <summary>SpatialViewQuery.From(String designDoc, String view)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.AllInstances.GetQueryParams">
            <summary>SpatialViewQuery.GetQueryParams()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.AllInstances.GetRelativeUri">
            <summary>SpatialViewQuery.GetRelativeUri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.AllInstances.HostGet">
            <summary>SpatialViewQuery.get_Host()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.AllInstances.HostSetString">
            <summary>SpatialViewQuery.set_Host(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.AllInstances.LimitInt32">
            <summary>SpatialViewQuery.Limit(Int32 limit)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.AllInstances.PortGet">
            <summary>SpatialViewQuery.get_Port()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.AllInstances.PortSetUInt32">
            <summary>SpatialViewQuery.set_Port(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.AllInstances.RangeListOfNullableOfDoubleListOfNullableOfDouble">
            <summary>SpatialViewQuery.Range(List`1&lt;Nullable`1&lt;Double&gt;&gt; startRange, List`1&lt;Nullable`1&lt;Double&gt;&gt; endRange)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.AllInstances.RawUri">
            <summary>SpatialViewQuery.RawUri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.AllInstances.RetryAttemptsGet">
            <summary>SpatialViewQuery.get_RetryAttempts()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.AllInstances.RetryAttemptsSetInt32">
            <summary>SpatialViewQuery.set_RetryAttempts(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.AllInstances.SkipInt32">
            <summary>SpatialViewQuery.Skip(Int32 count)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.AllInstances.SslPortGet">
            <summary>SpatialViewQuery.get_SslPort()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.AllInstances.SslPortSetUInt32">
            <summary>SpatialViewQuery.set_SslPort(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.AllInstances.StaleStaleState">
            <summary>SpatialViewQuery.Stale(StaleState staleState)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.AllInstances.StartRangeListOfNullableOfDouble">
            <summary>SpatialViewQuery.StartRange(List`1&lt;Nullable`1&lt;Double&gt;&gt; startRange)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.AllInstances.StartRangeNullableOfDoubleArray">
            <summary>SpatialViewQuery.StartRange(Nullable`1&lt;Double&gt;[] startRange)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.AllInstances.UseSslGet">
            <summary>SpatialViewQuery.get_UseSsl()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.AllInstances.UseSslSetBoolean">
            <summary>SpatialViewQuery.set_UseSsl(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimSpatialViewQuery.AllInstances.ViewString">
            <summary>SpatialViewQuery.View(String name)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Views.Fakes.ShimViewQuery">
            <summary>Couchbase.Views.ViewQuery의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.ShimViewQuery.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.ShimViewQuery.#ctor(Couchbase.Views.ViewQuery)">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.ShimViewQuery.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.ShimViewQuery.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.ShimViewQuery.Bind(Couchbase.Views.IViewQuery)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.ShimViewQuery.Bind(Couchbase.Views.IViewQueryable)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.Asc">
            <summary>ViewQuery.Asc()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.BucketNameGet">
            <summary>ViewQuery.get_BucketName()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.BucketString">
            <summary>ViewQuery.Bucket(String name)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.ConnectionTimeoutInt32">
            <summary>ViewQuery.ConnectionTimeout(Int32 timeout)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.Constructor">
            <summary>ViewQuery.ViewQuery()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.ConstructorString">
            <summary>ViewQuery.ViewQuery(String baseUri)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.ConstructorStringString">
            <summary>ViewQuery.ViewQuery(String bucketName, String baseUri)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.ConstructorStringStringString">
            <summary>ViewQuery.ViewQuery(String bucketName, String designDoc, String viewName)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.CouchbaseViewsIViewQueryableBaseUriUri">
            <summary>ViewQuery.Couchbase.Views.IViewQueryable.BaseUri(Uri uri)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.Desc">
            <summary>ViewQuery.Desc()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.DesignDocString">
            <summary>ViewQuery.DesignDoc(String name)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.DevelopmentBoolean">
            <summary>ViewQuery.Development(Boolean development)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.EncodeParameterObject">
            <summary>ViewQuery.EncodeParameter(Object parameter)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.EndKeyDocIdObject">
            <summary>ViewQuery.EndKeyDocId(Object endDocId)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.EndKeyObject">
            <summary>ViewQuery.EndKey(Object endKey)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.EndKeyObjectBoolean">
            <summary>ViewQuery.EndKey(Object endKey, Boolean encode)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.FromStringString">
            <summary>ViewQuery.From(String designDoc, String view)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.FullSet">
            <summary>ViewQuery.FullSet()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.GetQueryParams">
            <summary>ViewQuery.GetQueryParams()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.GetRelativeUri">
            <summary>ViewQuery.GetRelativeUri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.GroupBoolean">
            <summary>ViewQuery.Group(Boolean group)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.GroupLevelInt32">
            <summary>ViewQuery.GroupLevel(Int32 level)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.InclusiveEndBoolean">
            <summary>ViewQuery.InclusiveEnd(Boolean inclusiveEnd)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.KeyObject">
            <summary>ViewQuery.Key(Object key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.KeyObjectBoolean">
            <summary>ViewQuery.Key(Object key, Boolean encode)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.KeysIEnumerable">
            <summary>ViewQuery.Keys(IEnumerable keys)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.KeysIEnumerableBoolean">
            <summary>ViewQuery.Keys(IEnumerable keys, Boolean encode)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.LimitInt32">
            <summary>ViewQuery.Limit(Int32 limit)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.OnErrorBoolean">
            <summary>ViewQuery.OnError(Boolean stop)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.RawUri">
            <summary>ViewQuery.RawUri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.ReduceBoolean">
            <summary>ViewQuery.Reduce(Boolean reduce)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.RetryAttemptsGet">
            <summary>ViewQuery.get_RetryAttempts()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.RetryAttemptsSetInt32">
            <summary>ViewQuery.set_RetryAttempts(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.SkipInt32">
            <summary>ViewQuery.Skip(Int32 count)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.StaleStaleState">
            <summary>ViewQuery.Stale(StaleState staleState)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.StartKeyDocIdObject">
            <summary>ViewQuery.StartKeyDocId(Object startKeyDocId)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.StartKeyObject">
            <summary>ViewQuery.StartKey(Object startKey)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.StartKeyObjectBoolean">
            <summary>ViewQuery.StartKey(Object startKey, Boolean encode)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.StaticConstructor">
            <summary>ViewQuery.ViewQuery()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.UseSslGet">
            <summary>ViewQuery.get_UseSsl()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.UseSslSetBoolean">
            <summary>ViewQuery.set_UseSsl(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.ViewString">
            <summary>ViewQuery.View(String name)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Views.Fakes.ShimViewQuery.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.AllInstances.Asc">
            <summary>ViewQuery.Asc()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.AllInstances.BucketNameGet">
            <summary>ViewQuery.get_BucketName()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.AllInstances.BucketString">
            <summary>ViewQuery.Bucket(String name)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.AllInstances.ConnectionTimeoutInt32">
            <summary>ViewQuery.ConnectionTimeout(Int32 timeout)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.AllInstances.CouchbaseViewsIViewQueryableBaseUriUri">
            <summary>ViewQuery.Couchbase.Views.IViewQueryable.BaseUri(Uri uri)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.AllInstances.Desc">
            <summary>ViewQuery.Desc()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.AllInstances.DesignDocString">
            <summary>ViewQuery.DesignDoc(String name)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.AllInstances.DevelopmentBoolean">
            <summary>ViewQuery.Development(Boolean development)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.AllInstances.EndKeyDocIdObject">
            <summary>ViewQuery.EndKeyDocId(Object endDocId)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.AllInstances.EndKeyObject">
            <summary>ViewQuery.EndKey(Object endKey)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.AllInstances.EndKeyObjectBoolean">
            <summary>ViewQuery.EndKey(Object endKey, Boolean encode)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.AllInstances.FromStringString">
            <summary>ViewQuery.From(String designDoc, String view)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.AllInstances.FullSet">
            <summary>ViewQuery.FullSet()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.AllInstances.GetQueryParams">
            <summary>ViewQuery.GetQueryParams()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.AllInstances.GetRelativeUri">
            <summary>ViewQuery.GetRelativeUri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.AllInstances.GroupBoolean">
            <summary>ViewQuery.Group(Boolean group)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.AllInstances.GroupLevelInt32">
            <summary>ViewQuery.GroupLevel(Int32 level)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.AllInstances.InclusiveEndBoolean">
            <summary>ViewQuery.InclusiveEnd(Boolean inclusiveEnd)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.AllInstances.KeyObject">
            <summary>ViewQuery.Key(Object key)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.AllInstances.KeyObjectBoolean">
            <summary>ViewQuery.Key(Object key, Boolean encode)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.AllInstances.KeysIEnumerable">
            <summary>ViewQuery.Keys(IEnumerable keys)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.AllInstances.KeysIEnumerableBoolean">
            <summary>ViewQuery.Keys(IEnumerable keys, Boolean encode)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.AllInstances.LimitInt32">
            <summary>ViewQuery.Limit(Int32 limit)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.AllInstances.OnErrorBoolean">
            <summary>ViewQuery.OnError(Boolean stop)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.AllInstances.RawUri">
            <summary>ViewQuery.RawUri()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.AllInstances.ReduceBoolean">
            <summary>ViewQuery.Reduce(Boolean reduce)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.AllInstances.RetryAttemptsGet">
            <summary>ViewQuery.get_RetryAttempts()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.AllInstances.RetryAttemptsSetInt32">
            <summary>ViewQuery.set_RetryAttempts(Int32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.AllInstances.SkipInt32">
            <summary>ViewQuery.Skip(Int32 count)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.AllInstances.StaleStaleState">
            <summary>ViewQuery.Stale(StaleState staleState)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.AllInstances.StartKeyDocIdObject">
            <summary>ViewQuery.StartKeyDocId(Object startKeyDocId)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.AllInstances.StartKeyObject">
            <summary>ViewQuery.StartKey(Object startKey)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.AllInstances.StartKeyObjectBoolean">
            <summary>ViewQuery.StartKey(Object startKey, Boolean encode)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.AllInstances.UseSslGet">
            <summary>ViewQuery.get_UseSsl()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.AllInstances.UseSslSetBoolean">
            <summary>ViewQuery.set_UseSsl(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewQuery.AllInstances.ViewString">
            <summary>ViewQuery.View(String name)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Views.Fakes.ShimViewResult`1">
            <summary>Couchbase.Views.ViewResult`1의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.ShimViewResult`1.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.ShimViewResult`1.#ctor(Couchbase.Views.ViewResult{`0})">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.ShimViewResult`1.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.ShimViewResult`1.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.ShimViewResult`1.Bind(Couchbase.IResult)">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.ShimViewResult`1.Bind(Couchbase.Views.IViewResult{`0})">
            <summary>인터페이스의 멤버를 shim에 바인딩합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewResult`1.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewResult`1.CannotRetry">
            <summary>ViewResult`1.CannotRetry()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewResult`1.Check404ForRetry">
            <summary>ViewResult`1.Check404ForRetry()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewResult`1.Check500ForRetry">
            <summary>ViewResult`1.Check500ForRetry()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewResult`1.Constructor">
            <summary>ViewResult`1.ViewResult`1()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewResult`1.ErrorGet">
            <summary>ViewResult`1.get_Error()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewResult`1.ErrorSetString">
            <summary>ViewResult`1.set_Error(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewResult`1.ExceptionGet">
            <summary>ViewResult`1.get_Exception()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewResult`1.ExceptionSetException">
            <summary>ViewResult`1.set_Exception(Exception value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewResult`1.MessageGet">
            <summary>ViewResult`1.get_Message()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewResult`1.MessageSetString">
            <summary>ViewResult`1.set_Message(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewResult`1.RowsGet">
            <summary>ViewResult`1.get_Rows()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewResult`1.RowsSetIEnumerableOfViewRowOfT0">
            <summary>ViewResult`1.set_Rows(IEnumerable`1&lt;ViewRow`1&lt;!0&gt;&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewResult`1.ShouldRetry">
            <summary>ViewResult`1.ShouldRetry()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewResult`1.StatusCodeGet">
            <summary>ViewResult`1.get_StatusCode()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewResult`1.StatusCodeSetHttpStatusCode">
            <summary>ViewResult`1.set_StatusCode(HttpStatusCode value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewResult`1.SuccessGet">
            <summary>ViewResult`1.get_Success()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewResult`1.SuccessSetBoolean">
            <summary>ViewResult`1.set_Success(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewResult`1.TotalRowsGet">
            <summary>ViewResult`1.get_TotalRows()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewResult`1.TotalRowsSetUInt32">
            <summary>ViewResult`1.set_TotalRows(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewResult`1.ValuesGet">
            <summary>ViewResult`1.get_Values()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Views.Fakes.ShimViewResult`1.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewResult`1.AllInstances.CannotRetry">
            <summary>ViewResult`1.CannotRetry()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewResult`1.AllInstances.Check404ForRetry">
            <summary>ViewResult`1.Check404ForRetry()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewResult`1.AllInstances.Check500ForRetry">
            <summary>ViewResult`1.Check500ForRetry()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewResult`1.AllInstances.ErrorGet">
            <summary>ViewResult`1.get_Error()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewResult`1.AllInstances.ErrorSetString">
            <summary>ViewResult`1.set_Error(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewResult`1.AllInstances.ExceptionGet">
            <summary>ViewResult`1.get_Exception()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewResult`1.AllInstances.ExceptionSetException">
            <summary>ViewResult`1.set_Exception(Exception value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewResult`1.AllInstances.MessageGet">
            <summary>ViewResult`1.get_Message()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewResult`1.AllInstances.MessageSetString">
            <summary>ViewResult`1.set_Message(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewResult`1.AllInstances.RowsGet">
            <summary>ViewResult`1.get_Rows()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewResult`1.AllInstances.RowsSetIEnumerableOfViewRowOfT0">
            <summary>ViewResult`1.set_Rows(IEnumerable`1&lt;ViewRow`1&lt;!0&gt;&gt; value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewResult`1.AllInstances.ShouldRetry">
            <summary>ViewResult`1.ShouldRetry()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewResult`1.AllInstances.StatusCodeGet">
            <summary>ViewResult`1.get_StatusCode()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewResult`1.AllInstances.StatusCodeSetHttpStatusCode">
            <summary>ViewResult`1.set_StatusCode(HttpStatusCode value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewResult`1.AllInstances.SuccessGet">
            <summary>ViewResult`1.get_Success()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewResult`1.AllInstances.SuccessSetBoolean">
            <summary>ViewResult`1.set_Success(Boolean value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewResult`1.AllInstances.TotalRowsGet">
            <summary>ViewResult`1.get_TotalRows()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewResult`1.AllInstances.TotalRowsSetUInt32">
            <summary>ViewResult`1.set_TotalRows(UInt32 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewResult`1.AllInstances.ValuesGet">
            <summary>ViewResult`1.get_Values()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Views.Fakes.ShimViewRow`1">
            <summary>Couchbase.Views.ViewRow`1의 Shim 형식</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.ShimViewRow`1.#ctor">
            <summary>새 shim 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.ShimViewRow`1.#ctor(Couchbase.Views.ViewRow{`0})">
            <summary>지정된 인스턴스에 대한 새 shim을 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.ShimViewRow`1.BehaveAsCurrent">
            <summary>Shim된 형식의 모든 메서드에 &apos;Current&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.ShimViewRow`1.BehaveAsNotImplemented">
            <summary>Shim된 형식의 모든 메서드에 &apos;NotImplemented&apos; 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewRow`1.Behavior">
            <summary>Shim된 형식의 모든 메서드에 동작을 할당합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewRow`1.Constructor">
            <summary>ViewRow`1.ViewRow`1()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewRow`1.GeometryGet">
            <summary>ViewRow`1.get_Geometry()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewRow`1.GeometrySetObject">
            <summary>ViewRow`1.set_Geometry(Object value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewRow`1.IdGet">
            <summary>ViewRow`1.get_Id()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewRow`1.IdSetString">
            <summary>ViewRow`1.set_Id(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewRow`1.KeyGet">
            <summary>ViewRow`1.get_Key()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewRow`1.KeySetObject">
            <summary>ViewRow`1.set_Key(Object value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewRow`1.ValueGet">
            <summary>ViewRow`1.get_Value()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewRow`1.ValueSetT0">
            <summary>ViewRow`1.set_Value(!0 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Views.Fakes.ShimViewRow`1.AllInstances">
            <summary>모든 인스턴스 멤버에 대한 shim 정의</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewRow`1.AllInstances.GeometryGet">
            <summary>ViewRow`1.get_Geometry()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewRow`1.AllInstances.GeometrySetObject">
            <summary>ViewRow`1.set_Geometry(Object value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewRow`1.AllInstances.IdGet">
            <summary>ViewRow`1.get_Id()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewRow`1.AllInstances.IdSetString">
            <summary>ViewRow`1.set_Id(String value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewRow`1.AllInstances.KeyGet">
            <summary>ViewRow`1.get_Key()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewRow`1.AllInstances.KeySetObject">
            <summary>ViewRow`1.set_Key(Object value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewRow`1.AllInstances.ValueGet">
            <summary>ViewRow`1.get_Value()의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.ShimViewRow`1.AllInstances.ValueSetT0">
            <summary>ViewRow`1.set_Value(!0 value)의 shim을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Views.Fakes.StubErrorObj">
            <summary>Couchbase.Views.ErrorObj의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubErrorObj.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubErrorObj.InitializeStub">
            <summary>type StubErrorObj의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.StubErrorObj.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.StubErrorObj.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.StubErrorObj.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Views.Fakes.StubIDataMapper">
            <summary>Couchbase.Views.IDataMapper의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIDataMapper.#ctor">
            <summary>type StubIDataMapper의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIDataMapper.cnc::Couchbase#Views#IDataMapper#Map``1(System.IO.Stream)">
            <summary>IDataMapper.Map(Stream stream)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIDataMapper.MapOf1Stream``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.IO.Stream,``0})">
            <summary>Map(Stream stream)의 스텁을 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Views.Fakes.StubISpatialViewQuery">
            <summary>Couchbase.Views.ISpatialViewQuery의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubISpatialViewQuery.#ctor">
            <summary>type StubISpatialViewQuery의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubISpatialViewQuery.AttachBackingFieldToRetryAttempts">
            <summary>대리자를 연결하여 StubISpatialViewQuery.RetryAttempts을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubISpatialViewQuery.AttachBackingFieldToUseSsl">
            <summary>대리자를 연결하여 StubISpatialViewQuery.UseSsl을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubISpatialViewQuery.BaseUriUri">
            <summary>IViewQueryable.BaseUri(Uri uri)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubISpatialViewQuery.BucketNameGet">
            <summary>IViewQueryable.get_BucketName()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubISpatialViewQuery.BucketString">
            <summary>ISpatialViewQuery.Bucket(String name)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubISpatialViewQuery.ConnectionTimeoutInt32">
            <summary>ISpatialViewQuery.ConnectionTimeout(Int32 timeout)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubISpatialViewQuery.cnc::Couchbase#Views#ISpatialViewQuery#Bucket(System.String)">
            <summary>ISpatialViewQuery.Bucket(String name)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubISpatialViewQuery.cnc::Couchbase#Views#ISpatialViewQuery#ConnectionTimeout(System.Int32)">
            <summary>ISpatialViewQuery.ConnectionTimeout(Int32 timeout)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubISpatialViewQuery.cnc::Couchbase#Views#ISpatialViewQuery#DesignDoc(System.String)">
            <summary>ISpatialViewQuery.DesignDoc(String name)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubISpatialViewQuery.cnc::Couchbase#Views#ISpatialViewQuery#Development(System.Boolean)">
            <summary>ISpatialViewQuery.Development(Boolean development)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubISpatialViewQuery.cnc::Couchbase#Views#ISpatialViewQuery#EndRange(System.Collections.Generic.List{System.Nullable{System.Double}})">
            <summary>ISpatialViewQuery.EndRange(List`1&lt;Nullable`1&lt;Double&gt;&gt; endRange)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubISpatialViewQuery.cnc::Couchbase#Views#ISpatialViewQuery#EndRange(System.Nullable{System.Double}[])">
            <summary>ISpatialViewQuery.EndRange(Nullable`1&lt;Double&gt;[] endRange)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubISpatialViewQuery.cnc::Couchbase#Views#ISpatialViewQuery#From(System.String,System.String)">
            <summary>ISpatialViewQuery.From(String designDoc, String view)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubISpatialViewQuery.cnc::Couchbase#Views#ISpatialViewQuery#Limit(System.Int32)">
            <summary>ISpatialViewQuery.Limit(Int32 limit)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubISpatialViewQuery.cnc::Couchbase#Views#ISpatialViewQuery#Range(System.Collections.Generic.List{System.Nullable{System.Double}},System.Collections.Generic.List{System.Nullable{System.Double}})">
            <summary>ISpatialViewQuery.Range(List`1&lt;Nullable`1&lt;Double&gt;&gt; startRange, List`1&lt;Nullable`1&lt;Double&gt;&gt; endRange)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubISpatialViewQuery.cnc::Couchbase#Views#ISpatialViewQuery#Skip(System.Int32)">
            <summary>ISpatialViewQuery.Skip(Int32 count)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubISpatialViewQuery.cnc::Couchbase#Views#ISpatialViewQuery#Stale(Couchbase.Views.StaleState)">
            <summary>ISpatialViewQuery.Stale(StaleState staleState)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubISpatialViewQuery.cnc::Couchbase#Views#ISpatialViewQuery#StartRange(System.Nullable{System.Double}[])">
            <summary>ISpatialViewQuery.StartRange(Nullable`1&lt;Double&gt;[] startRange)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubISpatialViewQuery.cnc::Couchbase#Views#ISpatialViewQuery#StartRange(System.Collections.Generic.List{System.Nullable{System.Double}})">
            <summary>ISpatialViewQuery.StartRange(List`1&lt;Nullable`1&lt;Double&gt;&gt; startRange)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubISpatialViewQuery.cnc::Couchbase#Views#ISpatialViewQuery#View(System.String)">
            <summary>ISpatialViewQuery.View(String name)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubISpatialViewQuery.cnc::Couchbase#Views#IViewQueryable#BaseUri(System.Uri)">
            <summary>IViewQueryable.BaseUri(Uri uri)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubISpatialViewQuery.cnc::Couchbase#Views#IViewQueryable#RawUri">
            <summary>IViewQueryable.RawUri()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubISpatialViewQuery.DesignDocString">
            <summary>ISpatialViewQuery.DesignDoc(String name)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubISpatialViewQuery.DevelopmentBoolean">
            <summary>ISpatialViewQuery.Development(Boolean development)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubISpatialViewQuery.EndRangeListOfNullableOfDouble">
            <summary>ISpatialViewQuery.EndRange(List`1&lt;Nullable`1&lt;Double&gt;&gt; endRange)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubISpatialViewQuery.EndRangeNullableOfDoubleArray">
            <summary>ISpatialViewQuery.EndRange(Nullable`1&lt;Double&gt;[] endRange)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubISpatialViewQuery.FromStringString">
            <summary>ISpatialViewQuery.From(String designDoc, String view)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubISpatialViewQuery.HostGet">
            <summary>ISpatialViewQuery.get_Host()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubISpatialViewQuery.LimitInt32">
            <summary>ISpatialViewQuery.Limit(Int32 limit)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubISpatialViewQuery.RangeListOfNullableOfDoubleListOfNullableOfDouble">
            <summary>ISpatialViewQuery.Range(List`1&lt;Nullable`1&lt;Double&gt;&gt; startRange, List`1&lt;Nullable`1&lt;Double&gt;&gt; endRange)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubISpatialViewQuery.RawUri">
            <summary>IViewQueryable.RawUri()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubISpatialViewQuery.RetryAttemptsGet">
            <summary>IViewQueryable.get_RetryAttempts()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubISpatialViewQuery.RetryAttemptsSetInt32">
            <summary>IViewQueryable.set_RetryAttempts(Int32 value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubISpatialViewQuery.SkipInt32">
            <summary>ISpatialViewQuery.Skip(Int32 count)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubISpatialViewQuery.StaleStaleState">
            <summary>ISpatialViewQuery.Stale(StaleState staleState)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubISpatialViewQuery.StartRangeListOfNullableOfDouble">
            <summary>ISpatialViewQuery.StartRange(List`1&lt;Nullable`1&lt;Double&gt;&gt; startRange)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubISpatialViewQuery.StartRangeNullableOfDoubleArray">
            <summary>ISpatialViewQuery.StartRange(Nullable`1&lt;Double&gt;[] startRange)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubISpatialViewQuery.UseSslGet">
            <summary>IViewQueryable.get_UseSsl()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubISpatialViewQuery.UseSslSetBoolean">
            <summary>IViewQueryable.set_UseSsl(Boolean value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubISpatialViewQuery.ViewString">
            <summary>ISpatialViewQuery.View(String name)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.StubISpatialViewQuery.cnc::Couchbase#Views#IViewQueryable#BucketName">
            <summary>IViewQueryable.get_BucketName()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.StubISpatialViewQuery.cnc::Couchbase#Views#ISpatialViewQuery#Host">
            <summary>ISpatialViewQuery.get_Host()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.StubISpatialViewQuery.cnc::Couchbase#Views#IViewQueryable#RetryAttempts">
            <summary>IViewQueryable.get_RetryAttempts()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.StubISpatialViewQuery.cnc::Couchbase#Views#IViewQueryable#UseSsl">
            <summary>IViewQueryable.get_UseSsl()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Views.Fakes.StubIViewClient">
            <summary>Couchbase.Views.IViewClient의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewClient.#ctor">
            <summary>type StubIViewClient의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewClient.AttachBackingFieldToHttpClient">
            <summary>대리자를 연결하여 StubIViewClient.HttpClient을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewClient.AttachBackingFieldToMapper">
            <summary>대리자를 연결하여 StubIViewClient.Mapper을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewClient.cnc::Couchbase#Views#IViewClient#Execute``1(Couchbase.Views.IViewQueryable)">
            <summary>IViewClient.Execute(IViewQueryable query)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewClient.cnc::Couchbase#Views#IViewClient#ExecuteAsync``1(Couchbase.Views.IViewQueryable)">
            <summary>IViewClient.ExecuteAsync(IViewQueryable query)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewClient.ExecuteAsyncOf1IViewQueryable``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.Views.IViewQueryable,System.Threading.Tasks.Task{Couchbase.Views.IViewResult{``0}}})">
            <summary>ExecuteAsync(IViewQueryable query)의 스텁을 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewClient.ExecuteOf1IViewQueryable``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Couchbase.Views.IViewQueryable,Couchbase.Views.IViewResult{``0}})">
            <summary>Execute(IViewQueryable query)의 스텁을 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewClient.HttpClientGet">
            <summary>IViewClient.get_HttpClient()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewClient.HttpClientSetHttpClient">
            <summary>IViewClient.set_HttpClient(HttpClient value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewClient.MapperGet">
            <summary>IViewClient.get_Mapper()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewClient.MapperSetIDataMapper">
            <summary>IViewClient.set_Mapper(IDataMapper value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.StubIViewClient.cnc::Couchbase#Views#IViewClient#HttpClient">
            <summary>IViewClient.get_HttpClient()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.StubIViewClient.cnc::Couchbase#Views#IViewClient#Mapper">
            <summary>IViewClient.get_Mapper()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Views.Fakes.StubIViewQuery">
            <summary>Couchbase.Views.IViewQuery의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewQuery.#ctor">
            <summary>type StubIViewQuery의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewQuery.Asc">
            <summary>IViewQuery.Asc()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewQuery.AttachBackingFieldToRetryAttempts">
            <summary>대리자를 연결하여 StubIViewQuery.RetryAttempts을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewQuery.AttachBackingFieldToUseSsl">
            <summary>대리자를 연결하여 StubIViewQuery.UseSsl을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewQuery.BaseUriUri">
            <summary>IViewQueryable.BaseUri(Uri uri)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewQuery.BucketNameGet">
            <summary>IViewQueryable.get_BucketName()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewQuery.BucketString">
            <summary>IViewQuery.Bucket(String name)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewQuery.ConnectionTimeoutInt32">
            <summary>IViewQuery.ConnectionTimeout(Int32 timeout)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewQuery.cnc::Couchbase#Views#IViewQuery#Asc">
            <summary>IViewQuery.Asc()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewQuery.cnc::Couchbase#Views#IViewQuery#Bucket(System.String)">
            <summary>IViewQuery.Bucket(String name)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewQuery.cnc::Couchbase#Views#IViewQuery#ConnectionTimeout(System.Int32)">
            <summary>IViewQuery.ConnectionTimeout(Int32 timeout)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewQuery.cnc::Couchbase#Views#IViewQuery#Desc">
            <summary>IViewQuery.Desc()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewQuery.cnc::Couchbase#Views#IViewQuery#DesignDoc(System.String)">
            <summary>IViewQuery.DesignDoc(String name)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewQuery.cnc::Couchbase#Views#IViewQuery#Development(System.Boolean)">
            <summary>IViewQuery.Development(Boolean development)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewQuery.cnc::Couchbase#Views#IViewQuery#EndKey(System.Object)">
            <summary>IViewQuery.EndKey(Object endKey)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewQuery.cnc::Couchbase#Views#IViewQuery#EndKey(System.Object,System.Boolean)">
            <summary>IViewQuery.EndKey(Object endKey, Boolean encode)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewQuery.cnc::Couchbase#Views#IViewQuery#EndKeyDocId(System.Object)">
            <summary>IViewQuery.EndKeyDocId(Object docId)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewQuery.cnc::Couchbase#Views#IViewQuery#From(System.String,System.String)">
            <summary>IViewQuery.From(String designDoc, String view)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewQuery.cnc::Couchbase#Views#IViewQuery#FullSet">
            <summary>IViewQuery.FullSet()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewQuery.cnc::Couchbase#Views#IViewQuery#Group(System.Boolean)">
            <summary>IViewQuery.Group(Boolean group)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewQuery.cnc::Couchbase#Views#IViewQuery#GroupLevel(System.Int32)">
            <summary>IViewQuery.GroupLevel(Int32 level)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewQuery.cnc::Couchbase#Views#IViewQuery#InclusiveEnd(System.Boolean)">
            <summary>IViewQuery.InclusiveEnd(Boolean inclusiveEnd)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewQuery.cnc::Couchbase#Views#IViewQuery#Key(System.Object)">
            <summary>IViewQuery.Key(Object key)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewQuery.cnc::Couchbase#Views#IViewQuery#Key(System.Object,System.Boolean)">
            <summary>IViewQuery.Key(Object key, Boolean encode)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewQuery.cnc::Couchbase#Views#IViewQuery#Keys(System.Collections.IEnumerable)">
            <summary>IViewQuery.Keys(IEnumerable keys)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewQuery.cnc::Couchbase#Views#IViewQuery#Keys(System.Collections.IEnumerable,System.Boolean)">
            <summary>IViewQuery.Keys(IEnumerable keys, Boolean encode)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewQuery.cnc::Couchbase#Views#IViewQuery#Limit(System.Int32)">
            <summary>IViewQuery.Limit(Int32 limit)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewQuery.cnc::Couchbase#Views#IViewQuery#OnError(System.Boolean)">
            <summary>IViewQuery.OnError(Boolean stop)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewQuery.cnc::Couchbase#Views#IViewQuery#Reduce(System.Boolean)">
            <summary>IViewQuery.Reduce(Boolean reduce)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewQuery.cnc::Couchbase#Views#IViewQuery#Skip(System.Int32)">
            <summary>IViewQuery.Skip(Int32 count)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewQuery.cnc::Couchbase#Views#IViewQuery#Stale(Couchbase.Views.StaleState)">
            <summary>IViewQuery.Stale(StaleState staleState)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewQuery.cnc::Couchbase#Views#IViewQuery#StartKey(System.Object)">
            <summary>IViewQuery.StartKey(Object endKey)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewQuery.cnc::Couchbase#Views#IViewQuery#StartKey(System.Object,System.Boolean)">
            <summary>IViewQuery.StartKey(Object endKey, Boolean encode)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewQuery.cnc::Couchbase#Views#IViewQuery#StartKeyDocId(System.Object)">
            <summary>IViewQuery.StartKeyDocId(Object docId)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewQuery.cnc::Couchbase#Views#IViewQuery#View(System.String)">
            <summary>IViewQuery.View(String name)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewQuery.cnc::Couchbase#Views#IViewQueryable#BaseUri(System.Uri)">
            <summary>IViewQueryable.BaseUri(Uri uri)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewQuery.cnc::Couchbase#Views#IViewQueryable#RawUri">
            <summary>IViewQueryable.RawUri()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewQuery.Desc">
            <summary>IViewQuery.Desc()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewQuery.DesignDocString">
            <summary>IViewQuery.DesignDoc(String name)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewQuery.DevelopmentBoolean">
            <summary>IViewQuery.Development(Boolean development)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewQuery.EndKeyDocIdObject">
            <summary>IViewQuery.EndKeyDocId(Object docId)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewQuery.EndKeyObject">
            <summary>IViewQuery.EndKey(Object endKey)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewQuery.EndKeyObjectBoolean">
            <summary>IViewQuery.EndKey(Object endKey, Boolean encode)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewQuery.FromStringString">
            <summary>IViewQuery.From(String designDoc, String view)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewQuery.FullSet">
            <summary>IViewQuery.FullSet()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewQuery.GroupBoolean">
            <summary>IViewQuery.Group(Boolean group)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewQuery.GroupLevelInt32">
            <summary>IViewQuery.GroupLevel(Int32 level)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewQuery.InclusiveEndBoolean">
            <summary>IViewQuery.InclusiveEnd(Boolean inclusiveEnd)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewQuery.KeyObject">
            <summary>IViewQuery.Key(Object key)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewQuery.KeyObjectBoolean">
            <summary>IViewQuery.Key(Object key, Boolean encode)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewQuery.KeysIEnumerable">
            <summary>IViewQuery.Keys(IEnumerable keys)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewQuery.KeysIEnumerableBoolean">
            <summary>IViewQuery.Keys(IEnumerable keys, Boolean encode)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewQuery.LimitInt32">
            <summary>IViewQuery.Limit(Int32 limit)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewQuery.OnErrorBoolean">
            <summary>IViewQuery.OnError(Boolean stop)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewQuery.RawUri">
            <summary>IViewQueryable.RawUri()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewQuery.ReduceBoolean">
            <summary>IViewQuery.Reduce(Boolean reduce)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewQuery.RetryAttemptsGet">
            <summary>IViewQueryable.get_RetryAttempts()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewQuery.RetryAttemptsSetInt32">
            <summary>IViewQueryable.set_RetryAttempts(Int32 value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewQuery.SkipInt32">
            <summary>IViewQuery.Skip(Int32 count)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewQuery.StaleStaleState">
            <summary>IViewQuery.Stale(StaleState staleState)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewQuery.StartKeyDocIdObject">
            <summary>IViewQuery.StartKeyDocId(Object docId)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewQuery.StartKeyObject">
            <summary>IViewQuery.StartKey(Object endKey)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewQuery.StartKeyObjectBoolean">
            <summary>IViewQuery.StartKey(Object endKey, Boolean encode)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewQuery.UseSslGet">
            <summary>IViewQueryable.get_UseSsl()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewQuery.UseSslSetBoolean">
            <summary>IViewQueryable.set_UseSsl(Boolean value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewQuery.ViewString">
            <summary>IViewQuery.View(String name)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.StubIViewQuery.cnc::Couchbase#Views#IViewQueryable#BucketName">
            <summary>IViewQueryable.get_BucketName()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.StubIViewQuery.cnc::Couchbase#Views#IViewQueryable#RetryAttempts">
            <summary>IViewQueryable.get_RetryAttempts()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.StubIViewQuery.cnc::Couchbase#Views#IViewQueryable#UseSsl">
            <summary>IViewQueryable.get_UseSsl()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Views.Fakes.StubIViewQueryable">
            <summary>Couchbase.Views.IViewQueryable의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewQueryable.#ctor">
            <summary>type StubIViewQueryable의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewQueryable.AttachBackingFieldToRetryAttempts">
            <summary>대리자를 연결하여 StubIViewQueryable.RetryAttempts을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewQueryable.AttachBackingFieldToUseSsl">
            <summary>대리자를 연결하여 StubIViewQueryable.UseSsl을(를) 지원 필드가 있는 속성으로 에뮬레이트합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewQueryable.BaseUriUri">
            <summary>IViewQueryable.BaseUri(Uri uri)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewQueryable.BucketNameGet">
            <summary>IViewQueryable.get_BucketName()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewQueryable.cnc::Couchbase#Views#IViewQueryable#BaseUri(System.Uri)">
            <summary>IViewQueryable.BaseUri(Uri uri)의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewQueryable.cnc::Couchbase#Views#IViewQueryable#RawUri">
            <summary>IViewQueryable.RawUri()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewQueryable.RawUri">
            <summary>IViewQueryable.RawUri()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewQueryable.RetryAttemptsGet">
            <summary>IViewQueryable.get_RetryAttempts()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewQueryable.RetryAttemptsSetInt32">
            <summary>IViewQueryable.set_RetryAttempts(Int32 value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewQueryable.UseSslGet">
            <summary>IViewQueryable.get_UseSsl()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewQueryable.UseSslSetBoolean">
            <summary>IViewQueryable.set_UseSsl(Boolean value)의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.StubIViewQueryable.cnc::Couchbase#Views#IViewQueryable#BucketName">
            <summary>IViewQueryable.get_BucketName()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.StubIViewQueryable.cnc::Couchbase#Views#IViewQueryable#RetryAttempts">
            <summary>IViewQueryable.get_RetryAttempts()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.StubIViewQueryable.cnc::Couchbase#Views#IViewQueryable#UseSsl">
            <summary>IViewQueryable.get_UseSsl()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Views.Fakes.StubIViewResult`1">
            <summary>Couchbase.Views.IViewResult`1의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewResult`1.#ctor">
            <summary>type StubIViewResult의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewResult`1.CannotRetry">
            <summary>IViewResult`1.CannotRetry()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewResult`1.cnc::Couchbase#IResult#ShouldRetry">
            <summary>IResult.ShouldRetry()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubIViewResult`1.cnc::Couchbase#Views#IViewResult{T}#CannotRetry">
            <summary>IViewResult`1.CannotRetry()의 스텁을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewResult`1.ErrorGet">
            <summary>IViewResult`1.get_Error()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewResult`1.ExceptionGet">
            <summary>IResult.get_Exception()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewResult`1.MessageGet">
            <summary>IResult.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewResult`1.RowsGet">
            <summary>IViewResult`1.get_Rows()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewResult`1.ShouldRetry">
            <summary>IResult.ShouldRetry()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewResult`1.StatusCodeGet">
            <summary>IViewResult`1.get_StatusCode()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewResult`1.SuccessGet">
            <summary>IResult.get_Success()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewResult`1.TotalRowsGet">
            <summary>IViewResult`1.get_TotalRows()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="F:Couchbase.Views.Fakes.StubIViewResult`1.ValuesGet">
            <summary>IViewResult`1.get_Values()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.StubIViewResult`1.cnc::Couchbase#Views#IViewResult{T}#Error">
            <summary>IViewResult`1.get_Error()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.StubIViewResult`1.cnc::Couchbase#IResult#Exception">
            <summary>IResult.get_Exception()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.StubIViewResult`1.cnc::Couchbase#IResult#Message">
            <summary>IResult.get_Message()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.StubIViewResult`1.cnc::Couchbase#Views#IViewResult{T}#Rows">
            <summary>IViewResult`1.get_Rows()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.StubIViewResult`1.cnc::Couchbase#Views#IViewResult{T}#StatusCode">
            <summary>IViewResult`1.get_StatusCode()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.StubIViewResult`1.cnc::Couchbase#IResult#Success">
            <summary>IResult.get_Success()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.StubIViewResult`1.cnc::Couchbase#Views#IViewResult{T}#TotalRows">
            <summary>IViewResult`1.get_TotalRows()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.StubIViewResult`1.cnc::Couchbase#Views#IViewResult{T}#Values">
            <summary>IViewResult`1.get_Values()의 stub을(를) 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Views.Fakes.StubSpatialViewQuery">
            <summary>Couchbase.Views.SpatialViewQuery의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubSpatialViewQuery.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubSpatialViewQuery.#ctor(System.Uri)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubSpatialViewQuery.InitializeStub">
            <summary>type StubSpatialViewQuery의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.StubSpatialViewQuery.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.StubSpatialViewQuery.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.StubSpatialViewQuery.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Views.Fakes.StubViewQuery">
            <summary>Couchbase.Views.ViewQuery의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubViewQuery.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubViewQuery.#ctor(System.String)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubViewQuery.#ctor(System.String,System.String)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubViewQuery.#ctor(System.String,System.String,System.String)">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubViewQuery.InitializeStub">
            <summary>type StubViewQuery의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.StubViewQuery.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.StubViewQuery.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.StubViewQuery.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Views.Fakes.StubViewResult`1">
            <summary>Couchbase.Views.ViewResult`1의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubViewResult`1.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubViewResult`1.InitializeStub">
            <summary>type StubViewResult의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.StubViewResult`1.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.StubViewResult`1.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.StubViewResult`1.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Couchbase.Views.Fakes.StubViewRow`1">
            <summary>Couchbase.Views.ViewRow`1의 스텁 형식</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubViewRow`1.#ctor">
            <summary>새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="M:Couchbase.Views.Fakes.StubViewRow`1.InitializeStub">
            <summary>type StubViewRow의 새 인스턴스를 초기화합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.StubViewRow`1.CallBase">
            <summary>대체(fallback) 동작 대신 기준 메서드를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.StubViewRow`1.InstanceBehavior">
            <summary>인스턴스 동작을 가져오거나 설정합니다.</summary>
        </member>
        <member name="P:Couchbase.Views.Fakes.StubViewRow`1.InstanceObserver">
            <summary>인스턴스 관찰자를 가져오거나 설정합니다.</summary>
        </member>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.CouchbaseNetClientDelegates">
            <summary>Couchbase.NetClient의 스텁 및 shim에 사용되는 사용자 지정 대리자를 포함합니다.</summary>
        </member>
    </members>
</doc>
